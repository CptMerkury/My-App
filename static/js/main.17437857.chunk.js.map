{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/preloader/spinner.module.css","components/Profile/Posts/Posts.module.css","store/reducers/dialogs/dialogsReducer.ts","utils/hoc/authRedirect.js","api/instance.ts","api/api.ts","components/Setting/Setting.module.css","components/Users/UserItem/Users.module.css","store/types/@types.ts","serviceWorker.js","store/reducers/app/appReducer.ts","store/reducers/profile/profileReducer.ts","store/reducers/sidebar/sidebarReducer.ts","utils/helpers/object-helpers.js","store/reducers/users/usersReducer.ts","store/store.ts","components/Users/UserItem/UserItem.jsx","assets/icons/35.svg","components/common/preloader/spinner.jsx","components/Users/UsersLayout/Users.tsx","store/thunk/users/usersThunk.ts","store/selectors/users/usersSelectors.ts","components/Users/UsersContainer.tsx","assets/icons/294.svg","components/common/preloader/loading.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJobData.jsx","components/Profile/ProfileInfo/PtofileInfo.jsx","components/Profile/Posts/PostsForm/PostForm.jsx","components/Profile/Posts/PostsItem/Post.jsx","components/Profile/Posts/PostsLayout/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileLayout/Ptofile.jsx","store/thunk/profile/profileThunk.ts","store/selectors/profile/profileSelectors.ts","components/Profile/PtofileContainer.jsx","components/Setting/ProfileEdit/InfoBlockForm.jsx","components/Setting/Setting.jsx","assets/logo/logo.svg","components/Header/HeaderLayout/Header.jsx","components/Header/HeaderContainer.jsx","components/Sidebar/SidebarItem/sidebarFriends.jsx","components/Sidebar/SidebarLayout/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/NavBar/NavBar.jsx","utils/hoc/lazyComponent.js","components/Start Component/StartPage.jsx","App.js","store/thunk/app/initThunk.ts","index.js","components/common/input/input.jsx","utils/validators/validator.js","components/Profile/Posts/PostsItem/Post.module.css","components/NavBar/NavBar.module.css","components/common/input/input.module.css","components/Header/Header.module.css","store/reducers/auth/authReducer.ts","components/Users/Users.module.css","components/Start Component/StartPage.module.css","components/common/textarea/textarea.jsx","store/actions/actions.ts","store/thunk/auth/authThunk.ts","components/Profile/Profile.module.css","components/Sidebar/Sidebar.module.css"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","value","type","SEND_MESSAGE","payload","dialogsReducer","state","action","newMessage","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","setFollow","post","setUnfollow","delete","profileAPI","getProfile","getStatusProfile","setStatus","newStatus","put","status","savePhoto","file","formData","FormData","append","saveProfile","authAPI","checkAuth","signOut","signIn","email","password","rememberMe","captcha","getCaptcha","ResultCodesEnum","ResultCodeForCaptchaCEnum","Boolean","window","location","hostname","match","initialized","appReducer","SET_INITIALIZED","profile","posts","likeCount","isLoading","isFetchingStatus","getStatus","GET_STATUS","toggleFetch","bool","IS_PROFILE_FETCHING","toggleFetchStatus","IS_STATUS_FETCHING","profileReducer","ADD_POST","newPost","DELETE_POST","filter","p","SET_PROFILE_DATA","SET_PHOTO_SUCCESS","photos","friendList","sidebarReducer","UpdateObjectInArray","items","itemID","objPropsName","newObjProps","map","user","users","totalCount","isDisabledBtn","follow","userID","FOLLOW","unfollow","UNFOLLOW","setUsers","SET_USERS","setPage","num","SET_PAGE","setTotalCount","SET_TOTAL_COUNT","IS_USER_FETCHING","toggleDisabledBtn","IS_DISABLED_BTN","userId","usersReducer","followed","RootReducer","combineReducers","app","profilePage","dialogPage","userPage","sidebar","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","UsersItem","className","classesItem","userInfoWrapper","infoWrapperImg","src","small","alt","unFollowBtn","userSubscribeBtn","onClick","setUnfollowHandler","disabled","isDisabled","some","followBtn","setFollowHandler","userInfoContainer","info","country","city","Preloader","classes","userLoading","spinner","Users","usersPage","selectPage","pagesCount","Math","ceil","userItem","uData","usersContainer","usersField","usersItems","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selected","containerClassName","reactPaginate","activeClassName","reactPaginationBtn","_follow_unfollow_flow","dispatch","apiMethod","actionCreator","a","resultCode","SUCCESS","console","log","getUsersSelector","getPageSizeSelector","getUsersLengthSelector","getCurrantPageSelector","checkLoadingSelector","isUnUseBtnSelector","UsersContainer","setFollowThunkCreator","setUnfollowThunkCreator","getPageThunkCreator","getUsersThunkCreator","Loader","loading","width","ProfileStatus","statusData","saveStatus","isOwner","useState","editMode","setEditMode","useEffect","statusBlock","statusDescr","onChange","target","autoFocus","placeholder","changeStatusBtn","cancelStatusBtn","bubble2","bubble1","Contact","title","href","rel","ProfileData","contacts","userInfoBlock","aboutMe","aboutMeTitle","linkBlock","Object","keys","key","editInfoBtn","ProfileJob","jobBlock","lookingForAJob","jobDescr","lookingForAJobDescription","openJobStatus","circleIndicatorActive","circleIndicatorNot","ProfileInfo","saveNewPhoto","updateStatus","head","wrapper","mediaBlock","photosBlock","large","infoBlock","nameBlock","changePhotosDis","changePhotos","files","user_nameBlock","fullName","maxLength200","maxLength","minValue1","minValue","PostReduxForm","reduxForm","handleSubmit","reset","onSubmit","Field","component","Textarea","validate","required","setTimeout","Post","item","ava_wrapper","ava_item","body_wrapper","post_body_item","like_wrapper","like_item","Posts","memo","postsElement","reverse","pData","postField","createPost","body","postsBlock","PostsContainer","addPostCreator","Profile","profileContainer","getProfileThunkCreator","dataProfile","getProfileSelector","getStatusSelector","getUserIdSelector","checkAuthSelector","checkFetchingStatusSelector","ProfileContainer","params","authUserID","history","push","getStatusThunkCreator","refreshProfile","prevProps","setStatusThunkCreator","saveNewPhotoThunkCreator","PureComponent","alert","dataStatus","withRouter","maxLength300","maxLength50","maxLength20","ProfileDataReduxForm","submitting","error","settingsWrapper","form_wrapper","aboutMe_block","InputBase","btn_save","job_block","contacts_block","contacts_fields","btn_saveAll","ProfileDataEdit","settingsField","initialValues","saveProfileThunkCreator","getState","stopSubmit","_error","settingContainer","Header","headerWrapper","logo","loginBlock","userName","login","authBtn","HeaderContainer","signOutThunkCreator","SidebarFriends","Sidebar","friendItem","container","SidebarContainer","NavBar","nav","withSuspense","fallback","StartPage","header","headerGreeting","headerLogin","headerPass","disclaimer","disclaimerTitle","disclaimerDescr","stack","stackList","stackTitile","stackItemTitle","stackItem","opportunities","opportunitiesList","opportunitiesTitle","opportunitiesItemCan","opportunitiesItem","Login","lazy","DialogContainer","News","Music","App","catchAllUnhandledError","reason","promise","InitializeApp","addEventListener","removeEventListener","init","path","render","Setting","exact","SocialAppContainer","promiseAuth","checkAuthThunkCreator","Promise","all","SocialApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","input","meta","touched","error_msg","LoginInput","error_input","PasswordInput","undefined","max","min","setAuthData","SET_AUTH_DATA","url","GET_CAPTCHA","style","color","signInThunkCreator","ANTI_BOT"],"mappings":"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","file":"static/js/main.17437857.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__3Q3FT\",\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"mediaBlock\":\"ProfileInfo_mediaBlock__KKrQe\",\"photosBlock\":\"ProfileInfo_photosBlock__3yjLZ\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\",\"bubble1\":\"ProfileInfo_bubble1__2ZOgi\",\"bubble2\":\"ProfileInfo_bubble2__2ACT-\",\"statusDescr\":\"ProfileInfo_statusDescr__1y0wO\",\"changeStatusBtn\":\"ProfileInfo_changeStatusBtn__2ECzS\",\"cancelStatusBtn\":\"ProfileInfo_cancelStatusBtn__2uT7S\",\"infoBlock\":\"ProfileInfo_infoBlock__Yi3uO\",\"jobBlock\":\"ProfileInfo_jobBlock__3qX4B\",\"openJobStatus\":\"ProfileInfo_openJobStatus__2IBJk\",\"jobDescr\":\"ProfileInfo_jobDescr__2NnqD\",\"circleIndicatorActive\":\"ProfileInfo_circleIndicatorActive__3GUQ7\",\"circleIndicatorNot\":\"ProfileInfo_circleIndicatorNot__3OngS\",\"userInfoBlock\":\"ProfileInfo_userInfoBlock__2F7C3\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"aboutMeTitle\":\"ProfileInfo_aboutMeTitle__3NHae\",\"nameBlock\":\"ProfileInfo_nameBlock__3H98C\",\"user_nameBlock\":\"ProfileInfo_user_nameBlock__1Vh9z\",\"changePhotos\":\"ProfileInfo_changePhotos__20Roj\",\"changePhotosDis\":\"ProfileInfo_changePhotosDis__6Hh7r\",\"linkBlock\":\"ProfileInfo_linkBlock__2I8GX\",\"editInfoBtn\":\"ProfileInfo_editInfoBtn__3NaWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userLoading\":\"spinner_userLoading__pYkc6\",\"spinner\":\"spinner_spinner__xCXbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postField\":\"Posts_postField__33u5B\",\"postsBlock\":\"Posts_postsBlock__2AH0W\"};","import {SEND_MESSAGE} from \"../../actions/actions\";\nimport {DialogType, MessageType} from \"../../types/@types\";\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n        {id: 4, name: 'Vladimir'},\n        {id: 5, name: 'Andrew'},\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'What`s Up'},\n        {id: 3, message: 'How are you'},\n        {id: 4, message: 'Hello'},\n        {id: 5, message: 'Yo'},\n        {id: 6, message: 'Hi'},\n        {id: 7, message: 'What`s Up'},\n        {id: 8, message: 'How are you'},\n        {id: 9, message: 'Hello'},\n        {id: 10, message: 'Yo'},\n    ] as Array<MessageType>,\n};\n\nexport type DialogInitialStateType = typeof initialState;\nexport type DialogActionsTypes = SendMessageActionType\n\nconst dialogsReducer = (state = initialState, action: DialogActionsTypes): DialogInitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            let newMessage = {\n                id: state.messages.length + 1,\n                message: action.payload\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage]\n            };\n        }\n        default:\n            return state;\n    }\n}\n\ntype SendMessageActionType = {\n    type: typeof SEND_MESSAGE\n    payload: string\n}\n\nexport const sendMessageCreator = (value: string): SendMessageActionType => ({\n    type: SEND_MESSAGE,\n    payload: value\n})\n\nexport default dialogsReducer","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\n\n            return <Component {...this.props}/>\n        }\n    }\n    //Мы оборачиваем connect функцией нашу классовую компоненту, чтобы в пропсах получить isAuth\n    const ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectAuthRedirectComponent\n}\n\nexport default withAuthRedirect","import axios from \"axios\";\n\n/* Мы создаем instance axios.create, чтобы один раз прописать в него параметры и не дублировать их в каждом запросе */\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        /* мы добавляем в headers api-key, чтобы сервер мог понять кто обращается к серверу. */\n        'API-KEY': 'a2f60dbc-59e4-4c2c-b4c3-fa8b69b0306e'\n    }\n})","import {instance} from \"./instance\";\nimport {\n    CaptchaAPIType, CheckAuthAPIType, FollowUnfollowApiType,\n    GetProfileAPIType, GetUserAPIType, ProfileType,\n    SetPhotoAPIType, SetProfileAPIType, SetStatusAPIType,\n    SignInAPIType, SignOutAPIType,\n} from \"../store/types/@types\";\n\nexport const usersAPI = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance\n            .get<GetUserAPIType>(`/users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    setFollow(id: number) {\n        /*\n         * Для POST запросов объект withCredentials нужно передавать 3-м параметром как и в PUT методе,\n         *  но так как мы создали instance, мы его уже не передаем\n         */\n        return instance\n            .post<FollowUnfollowApiType>(`/follow/${id}`, null)\n            .then(response => {\n                return response.data\n            })\n    },\n    setUnfollow(id: number) {\n        /*\n         * Для DELETE запросов объект withCredentials нужно передавать 2-м параметром как и в GET методе,\n         * но так как мы создали instance, мы его уже не передаем\n         */\n        return instance\n            .delete<FollowUnfollowApiType>(`/follow/${id}`)\n            .then(response => {\n                return response.data\n            })\n    }\n}\n\nexport const profileAPI = {\n    getProfile(id: number) {\n        return instance\n            .get<GetProfileAPIType>(`/profile/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    getStatusProfile(id: number) {\n        return instance\n            .get<string>(`/profile/status/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    setStatus(newStatus: string) {\n        return instance\n            .put<SetStatusAPIType>('/profile/status', {status: newStatus})\n    },\n    savePhoto(file: Blob) {\n        let formData = new FormData()\n        formData.append('image', file)\n        return instance\n            .put<SetPhotoAPIType>('/profile/photo', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            .then(response => {\n                return response.data\n            })\n    },\n    saveProfile(data: ProfileType) {\n        return instance\n            .put<SetProfileAPIType>('/profile', data)\n            .then(response => {\n                return response.data\n            })\n    }\n}\n\nexport const authAPI = {\n    checkAuth() {\n        return instance\n            .get<CheckAuthAPIType>('/auth/me')\n            .then(response => response.data)\n    },\n    signOut() {\n        return instance\n            .delete<SignOutAPIType>('/auth/login')\n            .then(response => response.data)\n    },\n    signIn(email: string, password: string, rememberMe = false, captcha = false) {\n        return instance\n            .post<SignInAPIType>('/auth/login', {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n    getCaptcha() {\n        return instance\n            .get<CaptchaAPIType>('/security/get-captcha-url')\n            .then(response => response.data)\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingContainer\":\"Setting_settingContainer__2jnFS\",\"settingsWrapper\":\"Setting_settingsWrapper__rls-w\",\"settingsField\":\"Setting_settingsField__K0dp4\",\"form_wrapper\":\"Setting_form_wrapper__2-bPE\",\"aboutMe_block\":\"Setting_aboutMe_block__2aD8x\",\"btn_save\":\"Setting_btn_save__3-Ai2\",\"job_block\":\"Setting_job_block__5LFgs\",\"contacts_block\":\"Setting_contacts_block__yRxE5\",\"contacts_fields\":\"Setting_contacts_fields__2Fohe\",\"btn_saveAll\":\"Setting_btn_saveAll__2rC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoWrapper\":\"Users_userInfoWrapper__3S4n9\",\"userSubscribeBtn\":\"Users_userSubscribeBtn__22gv2\",\"followBtn\":\"Users_followBtn__1J35y\",\"unFollowBtn\":\"Users_unFollowBtn__Oh9oB\",\"userInfoContainer\":\"Users_userInfoContainer__1A0ol\",\"infoWrapperImg\":\"Users_infoWrapperImg__2vdnU\",\"info\":\"Users_info__2Jz7e\",\"location\":\"Users_location__1uMJl\"};","//Enum Result Codes\nexport enum ResultCodesEnum {\n    SUCCESS = 0,\n    ERROR = 1,\n}\nexport enum ResultCodeForCaptchaCEnum {\n    ANTI_BOT = 10,\n}\n// Auth\nexport type CheckAuthAPIType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: {\n        id: number,\n        email: string,\n        login: string,\n    }\n}\nexport type SignInAPIType = {\n    resultCode: ResultCodesEnum | ResultCodeForCaptchaCEnum\n    messages: Array<string>,\n    data: {\n        userId: number,\n    }\n}\nexport type SignOutAPIType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: null\n}\nexport type CaptchaAPIType = {\n    url: string\n}\n//ProfileTypes\nexport type PostsType = {\n    id: number\n    message: string\n    likeCount: number\n}\nexport type ContactsType = {\n    github: string | null\n    vk: string | null\n    facebook: string | null\n    instagram: string | null\n    twitter: string | null\n    website: string | null\n    youtube: string | null\n    mainLink: string | null\n}\nexport type PhotosType = {\n    small: string | null\n    large: string | null\n}\nexport type ProfileType = {\n    userId: number\n    aboutMe: string | null\n    lookingForAJob: boolean\n    lookingForAJobDescription: string | null\n    fullName: string\n    contacts: ContactsType | null\n    photos: PhotosType | null\n}\n\nexport type GetProfileAPIType = Array<ProfileType>\nexport type SetStatusAPIType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: null\n}\nexport type SetPhotoAPIType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: {\n        photos: PhotosType\n    }\n}\nexport type SetProfileAPIType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: ProfileType\n}\n//DialogsTypes\nexport type DialogType = {\n    id: number\n    name: string\n}\nexport type MessageType = {\n    id: number\n    message: string\n}\n//UsersTypes\nexport type UserType = {\n    id: number\n    name: string\n    status: string\n    photos: PhotosType\n    followed: boolean\n}\n\nexport type GetUserAPIType = {\n    items: Array<UserType>,\n    totalCount: number,\n    error: null | string\n}\nexport type FollowUnfollowApiType = {\n    resultCode: ResultCodesEnum\n    messages: Array<string>,\n    data: null\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_INITIALIZED} from \"../../actions/actions\";\n\nconst initialState = {\n    initialized: false,\n};\n\nexport type InitialAppStateType = typeof initialState\nexport type InitActionsTypes = InitializeSuccessActionType\n\nconst appReducer = (state = initialState, action: InitActionsTypes): InitialAppStateType => {\n    switch (action.type) {\n        case SET_INITIALIZED: {\n            return {\n                ...state,\n                initialized: true\n            };\n        }\n        default:\n            return state;\n    }\n};\n\ntype InitializeSuccessActionType = {\n    type: typeof SET_INITIALIZED\n};\n\nexport const InitializeSuccess = (): InitializeSuccessActionType => ({\n    type: SET_INITIALIZED,\n})\n\nexport default appReducer;","import {\n    ADD_POST,\n    DELETE_POST,\n    GET_STATUS,\n    IS_PROFILE_FETCHING,\n    IS_STATUS_FETCHING,\n    SET_PHOTO_SUCCESS,\n    SET_PROFILE_DATA\n} from \"../../actions/actions\";\nimport {PhotosType, PostsType, ProfileType} from \"../../types/@types\";\n\nconst initialState = {\n    profile: [] as Array<ProfileType> | null,\n    status: '',\n    posts: [\n        {id: 1, message: 'Hi, how are you', likeCount: 50},\n        {id: 2, message: 'It`s my first post', likeCount: 40},\n        {id: 3, message: 'Hi, how are you', likeCount: 30},\n        {id: 4, message: 'How are you', likeCount: 20},\n        {id: 5, message: 'Hi', likeCount: 10},\n    ] as Array<PostsType>,\n    isLoading: false,\n    isFetchingStatus: false,\n};\n\nexport type ProfileInitialStateType = typeof initialState\nexport type ProfileActionsTypes = AddPostActionType |\n    DeletePostActionType |\n    SetProfileDataActionType |\n    GetStatusActionType |\n    SetPhotosActionType |\n    ToggleActionType |\n    ToggleStatusActionType\n\nconst profileReducer = (state = initialState, action: ProfileActionsTypes): ProfileInitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.payload,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost] as Array<PostsType>\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.payload)\n            };\n        case SET_PROFILE_DATA:\n            return {\n                ...state,\n                profile: action.payload\n            };\n        case GET_STATUS:\n            return {\n                ...state,\n                status: action.payload\n            };\n        case IS_PROFILE_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_STATUS_FETCHING:\n            return {\n                ...state,\n                isFetchingStatus: action.payload\n            };\n        case SET_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.payload} as Array<ProfileType>\n                /* Refactoring later action type for this case */\n            };\n        default:\n            return state\n    }\n}\n\ntype AddPostActionType = {\n    type: typeof ADD_POST\n    payload: PostsType\n}\nexport const addPostCreator = (value: PostsType): AddPostActionType => ({\n    type: ADD_POST,\n    payload: value\n})\n\ntype DeletePostActionType = {\n    type: typeof DELETE_POST\n    payload: number\n}\nexport const deletePostCreator = (id: number): DeletePostActionType => ({\n    type: DELETE_POST,\n    payload: id\n})\n\ntype SetProfileDataActionType = {\n    type: typeof SET_PROFILE_DATA\n    payload: Array<ProfileType>\n}\nexport const setProfileData = (data: Array<ProfileType>): SetProfileDataActionType => ({\n    type: SET_PROFILE_DATA,\n    payload: data\n})\n\ntype GetStatusActionType = {\n    type: typeof GET_STATUS\n    payload: string\n}\nexport const getStatus = (value: string): GetStatusActionType => ({\n    type: GET_STATUS,\n    payload: value\n})\n\ntype SetPhotosActionType = {\n    type: typeof SET_PHOTO_SUCCESS\n    payload: PhotosType\n}\nexport const setPhotoSuccess = (photos: PhotosType): SetPhotosActionType => ({\n    type: SET_PHOTO_SUCCESS,\n    payload: photos\n})\n\ntype ToggleActionType = {\n    type: typeof IS_PROFILE_FETCHING\n    payload: boolean\n}\nexport const toggleFetch = (bool: boolean): ToggleActionType => ({\n    type: IS_PROFILE_FETCHING,\n    payload: bool\n})\n\ntype ToggleStatusActionType = {\n    type: typeof IS_STATUS_FETCHING\n    payload: boolean\n}\nexport const toggleFetchStatus = (bool: boolean): ToggleStatusActionType => ({\n    type: IS_STATUS_FETCHING,\n    payload: bool\n})\n\nexport default profileReducer","let initialState = {\n    friendList: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n    ],\n}\n\nexport type SidebarInitialStateType = typeof initialState\n\nconst sidebarReducer = (state = initialState, action: any): SidebarInitialStateType => {\n\n    return state\n}\n\nexport default sidebarReducer","export const UpdateObjectInArray = (items, itemID, objPropsName, newObjProps) => {\n    return items.map(user => {\n        if (user[objPropsName] === itemID) {\n            return {\n                ...user, ...newObjProps\n            }\n        }\n        return user\n    })\n}\n//Так это было в reducers\n// users: state.users.map(user => {\n//     if (user.id === action.payload) {\n//         return {\n//             ...user,\n//             followed: false\n//         }\n//     }\n//     return user\n// })","import {UpdateObjectInArray} from \"../../../utils/helpers/object-helpers\";\nimport {\n    FOLLOW,\n    IS_DISABLED_BTN,\n    IS_USER_FETCHING,\n    SET_PAGE,\n    SET_TOTAL_COUNT,\n    SET_USERS,\n    UNFOLLOW\n} from \"../../actions/actions\";\nimport {UserType} from \"../../types/@types\";\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 5,\n    totalCount: 400,\n    currentPage: 1,\n    isLoading: false,\n    isDisabledBtn: [] as Array<number>, // Array of users id\n};\n\nexport type UserInitialStateType = typeof initialState\nexport type UserActionsTypes = FollowActionType |\n    UnfollowActionType |\n    SetUserActionType |\n    SetPageActionType |\n    SetTotalCountActionType |\n    ToggleFetchActionType |\n    ToggleDisableBtnActionType\n\nconst usersReducer = (state = initialState, action: UserActionsTypes): UserInitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: false})\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.payload,\n            };\n        case SET_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload,\n            };\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.payload\n            };\n        case IS_USER_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_DISABLED_BTN:\n            return {\n                ...state,\n                isDisabledBtn: action.payload\n                    ? [...state.isDisabledBtn, action.userId]\n                    /* метод filter вернет нам новый массив, в котором удалит тот id, который мы передали */\n                    : state.isDisabledBtn.filter(id => id !== action.userId)\n            };\n        default:\n            return state\n    }\n}\n\ntype FollowActionType = {\n    type: typeof FOLLOW\n    payload: number\n}\nexport const follow = (userID: number): FollowActionType => ({\n    type: FOLLOW,\n    payload: userID\n})\n\ntype UnfollowActionType = {\n    type: typeof UNFOLLOW\n    payload: number\n}\nexport const unfollow = (userID: number): UnfollowActionType => ({\n    type: UNFOLLOW,\n    payload: userID\n})\n\ntype SetUserActionType = {\n    type: typeof SET_USERS\n    payload: any\n}\nexport const setUsers = (users: any): SetUserActionType => ({\n    type: SET_USERS,\n    payload: users\n})\n\ntype SetPageActionType = {\n    type: typeof SET_PAGE\n    payload: number\n}\nexport const setPage = (num: number): SetPageActionType => ({\n    type: SET_PAGE,\n    payload: num\n})\n\ntype SetTotalCountActionType = {\n    type: typeof SET_TOTAL_COUNT\n    payload: number\n}\nexport const setTotalCount = (num: number): SetTotalCountActionType => ({\n    type: SET_TOTAL_COUNT,\n    payload: num\n})\n\ntype ToggleFetchActionType = {\n    type: typeof IS_USER_FETCHING\n    payload: boolean\n}\nexport const toggleFetch = (bool: boolean): ToggleFetchActionType => ({\n    type: IS_USER_FETCHING,\n    payload: bool\n})\n\ntype ToggleDisableBtnActionType = {\n    type: typeof IS_DISABLED_BTN\n    payload: boolean\n    userId: number\n}\nexport const toggleDisabledBtn = (bool: boolean, id: number): ToggleDisableBtnActionType => ({\n    type: IS_DISABLED_BTN,\n    payload: bool,\n    userId: id,\n})\n\nexport default usersReducer\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profile/profileReducer\";\nimport dialogsReducer from \"./reducers/dialogs/dialogsReducer\";\nimport sidebarReducer from \"./reducers/sidebar/sidebarReducer\";\nimport usersReducer from \"./reducers/users/usersReducer\";\nimport authReducer from \"./reducers/auth/authReducer\";\nimport appReducer from \"./reducers/app/appReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\n\n/* Передаем в store с помощью combineReducers все Reducer который объеденит их в один */\nlet RootReducer = combineReducers({\n    app: appReducer,\n    profilePage: profileReducer,\n    dialogPage: dialogsReducer,\n    userPage: usersReducer,\n    sidebar: sidebarReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\ntype RootReducerType = typeof RootReducer;\n/* Создаем глобальный тип для state */\nexport type AppStateType = ReturnType<RootReducerType>\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(RootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store","import React from 'react'\nimport classesItem from \"./Users.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst UsersItem = ({user, ...props}) => {\n    return (\n        <div className={classesItem.userInfoWrapper}>\n            <div>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img className={classesItem.infoWrapperImg}\n                             src={user.photos.small || 'https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'}\n                             alt=\"avatar\"/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ?\n                        <button\n                            className={`${classesItem.unFollowBtn} ${classesItem.userSubscribeBtn}`}\n                            onClick={() => props.setUnfollowHandler(user.id)}\n                            /* метод some вернет на true если id находится в массиве */\n                            disabled={props.isDisabled.some(id => id === user.id)}\n                        >Unfollow</button>\n                        :\n                        <button\n                            className={`${classesItem.followBtn} ${classesItem.userSubscribeBtn}`}\n                            /* метод some вернет на true если id находится в массиве */\n                            onClick={() => props.setFollowHandler(user.id)}\n                            disabled={props.isDisabled.some(id => id === user.id)}\n                        >Follow</button>}\n                </div>\n            </div>\n            <div className={classesItem.userInfoContainer}>\n                <div>\n                        <span className={classesItem.info}>User name:\n                            <p>{(user.name || undefined) ? user.name : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.info}>User status:\n                            <p>{(user.status || undefined) ? user.status : 'Not indicated'}</p>\n                        </span>\n                </div>\n                <div>\n                        <span className={classesItem.location}>Country:\n                            <p>{(user.location || undefined) ? user.location.country : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.location}>City:\n                            <p>{(user.location || undefined) ? user.location.city : 'Not indicated'}</p>\n                        </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersItem","export default __webpack_public_path__ + \"static/media/35.64407753.svg\";","import React from 'react'\nimport classes from \"./spinner.module.css\";\nimport spinner from '../../../assets/icons/35.svg'\n\n\nexport const Preloader = () => {\n    return (\n        <div className={classes.userLoading}>\n            <div className={classes.spinner}>\n                <img src={spinner} alt=\"spinner\"/>\n            </div>\n        </div>\n    )\n}","import classes from \"../Users.module.css\";\nimport React, {FC} from 'react';\nimport ReactPaginate from \"react-paginate\";\n\nimport UsersItem from \"../UserItem/UserItem\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport {UserType} from \"../../../store/types/@types\";\n// import Paginator from \"../../common/paginator/paginator\";\n\ntype PropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    pageSize: number\n    currentPage: number\n    isLoading: boolean\n    isDisabled: Array<number>\n    selectPage: (num: number) => void\n    setFollowHandler: (id: number) => void\n    setUnfollowHandler: (id: number) => void\n}\n\nconst Users: FC<PropsType> = (\n    {\n        usersPage = [], totalCount, pageSize, currentPage, isLoading,\n        isDisabled, selectPage, setFollowHandler, setUnfollowHandler\n    }\n) => {\n\n    const pagesCount = Math.ceil(totalCount / pageSize)\n\n    let userItem = usersPage.map(uData => (\n            <UsersItem user={uData}\n                       setUnfollowHandler={(id: number) => setUnfollowHandler(id)}\n                       setFollowHandler={(id: number) => setFollowHandler(id)}\n                       isDisabled={isDisabled}\n                       key={uData.id}/>\n        )\n    )\n\n\n    return (\n        <div className={classes.usersContainer}>\n            <h2>Users</h2>\n            <div className={classes.usersField}>\n                <div className={classes.usersItems}>\n                    <ReactPaginate\n                        previousLabel={\"<\"}\n                        nextLabel={\">\"}\n                        breakLabel={'~'}\n                        pageCount={pagesCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={3}\n                        onPageChange={(e) => selectPage(e.selected + 1)}\n                        containerClassName={classes.reactPaginate}\n                        activeClassName={classes.reactPaginationBtn}\n                    />\n                    {isLoading ? <Preloader/> : <div>{userItem}</div>}\n                    {/*If we want use custom pagination, use template below*/}\n                    {/*<Paginator*/}\n                    {/*    totalItemsCount={totalCount}*/}\n                    {/*    pageSize={pageSize}*/}\n                    {/*    currentPage={currentPage}*/}\n                    {/*    isLoading={isLoading}*/}\n                    {/*    selectPage={selectPage}*/}\n                    {/*/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import {usersAPI} from \"../../../api/api\";\nimport {\n    follow,\n    setPage,\n    setTotalCount,\n    setUsers,\n    toggleDisabledBtn,\n    toggleFetch,\n    unfollow, UserActionsTypes\n} from \"../../reducers/users/usersReducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../../store\";\nimport {Dispatch} from \"redux\";\nimport {ResultCodesEnum} from \"../../types/@types\";\n\n\ntype ThunkAction_UserTypes = ThunkAction<Promise<void>, AppStateType, unknown, UserActionsTypes>\n\nexport const getUsersThunkCreator = (currentPage: number = 1, pageSize: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        dispatch(toggleFetch(true))\n        /* Мы сделали инкапсуляцию axios метода в файл api */\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(setUsers(data.items))\n        dispatch(setTotalCount(data.totalCount))\n        dispatch(toggleFetch(false))\n    }\n\nexport const getPageThunkCreator = (num: number, pageSize: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        dispatch(setPage(num))\n        dispatch(toggleFetch(true))\n        /* Мы сделали инкапсуляцию axios метода в файл api */\n        let data = await usersAPI.getUsers(num, pageSize)\n        dispatch(setUsers(data.items))\n        dispatch(toggleFetch(false))\n    }\n\nconst _follow_unfollow_flow = async (dispatch: Dispatch<UserActionsTypes>, userId: number,\n                                     apiMethod: any, actionCreator: (userId: number) => UserActionsTypes) => {\n    dispatch(toggleDisabledBtn(true, userId))\n    const response = await apiMethod(userId)\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        dispatch(actionCreator(userId))\n        dispatch(toggleDisabledBtn(false, userId))\n    } else {\n        console.log('Error AXIOS', response.messages)\n    }\n}\n\nexport const setFollowThunkCreator = (id: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setFollow, follow)\n    }\n\nexport const setUnfollowThunkCreator = (id: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setUnfollow, unfollow)\n    }","import {AppStateType} from \"../../store\";\n\nexport const getUsersSelector = (state: AppStateType) => {\n    return state.userPage.users\n}\n\nexport const getPageSizeSelector = (state: AppStateType) => {\n    return state.userPage.pageSize\n}\n\nexport const getUsersLengthSelector = (state: AppStateType) => {\n    return state.userPage.totalCount\n}\n\nexport const getCurrantPageSelector = (state: AppStateType) => {\n    return state.userPage.currentPage\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.userPage.isLoading\n}\n\nexport const isUnUseBtnSelector = (state: AppStateType) => {\n    return state.userPage.isDisabledBtn\n}\n\n/*\n * future, create this selector, he must work with all simple selectors\n * and into switch/case return all and new value from state (maybe useSelector)\n*/\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport React from \"react\";\n\nimport Users from \"./UsersLayout/Users\";\nimport {\n    getPageThunkCreator, getUsersThunkCreator,\n    setFollowThunkCreator, setUnfollowThunkCreator\n} from \"../../store/thunk/users/usersThunk\";\nimport {\n    checkLoadingSelector, getCurrantPageSelector, getPageSizeSelector,\n    getUsersLengthSelector, getUsersSelector, isUnUseBtnSelector\n} from \"../../store/selectors/users/usersSelectors\";\nimport {UserType} from \"../../store/types/@types\";\nimport {AppStateType} from \"../../store/store\";\n\ntype MapStateToPropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    isLoading: boolean\n    isDisabledBtn: Array<number>\n}\ntype MapDispatchToPropsType = {\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    getPageThunkCreator: (num: number, pageSize: number) => void\n    setFollowThunkCreator: (id: number) => void\n    setUnfollowThunkCreator: (id: number) => void\n}\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.getUsersThunkCreator(1, this.props.pageSize)\n    }\n\n    setFollowHandler = (id: number) => {\n        /* Мы перенесли всю логику в thunkCreator */\n        this.props.setFollowThunkCreator(id)\n    }\n    setUnfollowHandler = (id: number) => {\n        this.props.setUnfollowThunkCreator(id)\n    }\n    selectPage = (num: number) => {\n        const {pageSize} = this.props\n        this.props.getPageThunkCreator(num, pageSize)\n    }\n\n    render() {\n        return (\n            <Users\n                usersPage={this.props.usersPage}\n                totalCount={this.props.totalCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                isLoading={this.props.isLoading}\n                isDisabled={this.props.isDisabledBtn}\n\n                selectPage={(num) => this.selectPage(num)}\n                setFollowHandler={(id) => this.setFollowHandler(id)}\n                setUnfollowHandler={(id) => this.setUnfollowHandler(id)}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        usersPage: getUsersSelector(state),\n        pageSize: getPageSizeSelector(state),\n        totalCount: getUsersLengthSelector(state),\n        currentPage: getCurrantPageSelector(state),\n        isLoading: checkLoadingSelector(state),\n        isDisabledBtn: isUnUseBtnSelector(state),\n    }\n}\n\nexport default compose(\n    //TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState это типы для generic type\n    connect<MapStateToPropsType, MapDispatchToPropsType, any, AppStateType>(mapStateToProps, {\n        getUsersThunkCreator, getPageThunkCreator,\n        setFollowThunkCreator, setUnfollowThunkCreator\n    })\n)(UsersContainer)\n\n/* Вместо mapDispatchToProps мы передаем в connect объект action/thunk creators\n * чтобы сократить код до современного синтаксиса,\n * функция connect сама обернет dispatch в callback's\n *\n * // тоже самое :\n * const mapDispatchToProps = (dispatch) => {\n *     return {\n *         setFollow: (userID) => {\n *             dispatch(followAC(userID))\n *         },\n *         setUnfollow: (userID) => {\n *             dispatch(unfollowAC(userID))\n *         },\n *         setUsers: (users) => {\n *             dispatch(setUsersAC(users))\n *         },\n *         setPage: (num) => {\n *             dispatch(setPageAC(num))\n *         },\n *         setTotalCount: (num) => {\n *             dispatch(setTotalCountAC(num))\n *         },\n *         toggleFetch: (bool) => {\n *             dispatch(toggleFetchAC(bool))\n *         }\n *     }\n * }\n *\n * setFollowHandler = (id) => {\n *     //Мы перенесли всю логику в thunkCreator\n *     this.props.setFollowThunkCreator(id)\n *     this.props.toggleDisabledBtn(true, id)\n *     //Мы сделали инкапсуляцию axios метода в файл api\n *     usersAPI.setFollow(id).then(data => {\n *         if (data.resultCode === 0) {\n *             this.props.follow(id)\n *             console.log('Follow', data)\n *             this.props.toggleDisabledBtn(false, id)\n *         } else {\n *             console.log('Error AXIOS', data)\n *         }\n *     })\n * }\n */","export default __webpack_public_path__ + \"static/media/294.a1c83cdc.svg\";","import React from 'react'\nimport loading from '../../../assets/icons/294.svg'\n\n\nexport const Loader = () => {\n    return (\n        <div>\n            <img src={loading} width=\"100px\" alt=\"loading\"/>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport classes from \"../ProfileInfo.module.css\";\nimport {Loader} from \"../../../common/preloader/loading\";\n\nconst ProfileStatus = ({statusData, saveStatus, isOwner, loading}) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(statusData)\n\n    const onEditMode = () => setEditMode(isOwner)\n    const offEditMode = () => setEditMode(false)\n\n    const addStatus = () => {\n        setEditMode(false)\n        saveStatus(status)\n    }\n\n    const updateTextStatus = (e) => setStatus(e.target.value)\n\n    useEffect(() => {\n        setStatus(statusData)\n    }, [statusData])\n\n    return (\n        <div className={classes.statusBlock}>\n            {!editMode\n                ? <div className={classes.statusDescr} onClick={onEditMode}>\n                    {loading\n                        ? <Loader/>\n                        : <p>{statusData || 'Not indicated'}</p>\n                    }\n                </div>\n                :\n                <div className={classes.statusDescr}>\n                    <div>\n                        <input onChange={updateTextStatus} type='text' autoFocus={true} placeholder='Change status'\n                               value={status}/>\n                    </div>\n                    <br/>\n                    <div>\n                        {status.length > 100 ? <div>Status length must be less 100 letters</div> : null}\n                    </div>\n                    <div>\n                        <button type='submit'\n                                disabled={status.length > 100}\n                                className={classes.changeStatusBtn}\n                                onClick={addStatus}>Change\n                        </button>\n                        <button type='button' className={classes.cancelStatusBtn} onClick={offEditMode}>Cancel</button>\n                    </div>\n                </div>\n            }\n            <div className={classes.bubble2}/>\n            <div className={classes.bubble1}/>\n        </div>\n    )\n}\n\nexport default ProfileStatus","import React from 'react';\nimport classes from \"../ProfileInfo.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst ProfileData = ({profile, contacts, isOwner}) => {\n\n    return (\n        <div className={classes.userInfoBlock}>\n            <div className={classes.aboutMe}>\n                <p className={classes.aboutMeTitle}>About me:</p>\n                <p>{profile.aboutMe || 'Not indicated'}</p>\n            </div>\n            <div className={classes.linkBlock}>\n                {contacts && Object.keys(contacts).map(key => {\n                    return <Contact key={key} title={key} value={contacts[key]}/>\n                })}\n            </div>\n            {isOwner\n                ? <NavLink to={'/setting'}>\n                    <button className={classes.editInfoBtn}>Edit info</button>\n                </NavLink>\n                : null}\n        </div>\n    )\n}\n\nconst Contact = ({title, value}) => {\n    return value ? <a href={value} target='_blank' rel=\"noreferrer\">{title}</a> : null\n}\n\nexport default ProfileData","import React from \"react\";\nimport classes from \"../ProfileInfo.module.css\";\n\nconst ProfileJob = ({profile}) => {\n    return (\n        <div className={classes.jobBlock}>\n            {!profile.lookingForAJob\n                ? <div/>\n                : <div className={classes.jobDescr}>\n                    <div>{profile.lookingForAJobDescription}</div>\n                </div>}\n            <div className={classes.openJobStatus}>\n                <p>Open for job<span>&nbsp;</span></p>\n                {profile.lookingForAJob\n                    ? <div className={classes.circleIndicatorActive}/>\n                    : <div className={classes.circleIndicatorNot}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileJob","import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ProfileJob from \"./ProfileJob/ProfileJobData\";\n\n\nconst ProfileInfo = ({saveNewPhoto, profile, status, updateStatus, isOwner, contacts, isLoading, isFetchingStatus}) => {\n\n    const onPhotoSelected = (e) => {\n        console.log(e)\n        if (e.target.files.length) {\n            saveNewPhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div className={classes.head}>\n            </div>\n            <div className={classes.wrapper}>\n                <div className={classes.mediaBlock}>\n                    <div className={classes.photosBlock}>\n                        {!profile.photos || isLoading\n                            ? <Preloader/>\n                            : <img\n                                src={profile.photos.large || 'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'}\n                                alt=\"ava\"/>}\n                    </div>\n                    <ProfileStatus statusData={status} saveStatus={updateStatus}\n                                   isOwner={isOwner} loading={isFetchingStatus}/>\n                </div>\n\n                <div className={classes.infoBlock}>\n                    <div className={classes.nameBlock}>\n                        {isOwner\n                            ? <label className={isLoading ? classes.changePhotosDis : classes.changePhotos}>\n                                <input type={'file'} onChange={onPhotoSelected} disabled={isLoading}/>\n                                Change Photos\n                            </label>\n                            : null}\n                        <h4 className={classes.user_nameBlock}>{profile.fullName}</h4>\n                    </div>\n                    <ProfileData profile={profile} contacts={contacts} isOwner={isOwner}/>\n                    <ProfileJob profile={profile}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo\n\n//'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'\n","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../common/textarea/textarea\";\nimport {maxLength, minValue, required} from \"../../../../utils/validators/validator\";\n\nconst maxLength200 = maxLength(200)\nconst minValue1 = minValue(1)\n\n\nconst PostForm = (props) => {\n    const { handleSubmit, reset } = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name={'body'}\n                       type='text'\n                       placeholder={'Add new post'}\n                       validate={[required, maxLength200, minValue1]}\n                />\n            </div>\n            <div>\n                <button onClick={()=> setTimeout(reset, 0)}>Send message</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({\n    form: 'post',\n})(PostForm)\n\nexport default PostReduxForm","import classes from \"./Post.module.css\";\nimport React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <div className={classes.ava_wrapper}>\n                <img className={classes.ava_item}\n                    src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                    alt=\"avatar\"/>\n            </div>\n            <div className={classes.body_wrapper}>\n                <p className={classes.post_body_item}>{props.message}</p>\n            </div>\n            <div className={classes.like_wrapper}>\n                <div className={classes.like_item}>likes {props.likeCount}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from \"react\";\nimport classes from '../Posts.module.css';\nimport PostReduxForm from \"../PostsForm/PostForm\";\nimport Post from \"../PostsItem/Post\";\n\n/* Мы используем memo, чтобы не происходило лишних отрисовок если пропсы не поменялись */\nconst Posts = React.memo((props) => {\n    /* Мы используем reverse к копии массива постов, так как этот метод мутирующего типа */\n    const postsElement = [...props.posts].reverse().map(pData => <Post message={pData.message}\n                                                                       likeCount={pData.likeCount}\n                                                                       key={pData.id}/>)\n\n    const addPost = (value) => {\n        props.createPost(value.body)\n    }\n\n    return (\n        <div className={classes.postField}>\n            <h3>My posts</h3>\n            <div>\n                <PostReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={classes.postsBlock}>\n                {postsElement}\n            </div>\n        </div>\n    );\n})\n\nexport default Posts","import Posts from \"./PostsLayout/Posts\";\nimport {connect} from \"react-redux\";\nimport {addPostCreator} from \"../../../store/reducers/profile/profileReducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (value) => {\n            dispatch(addPostCreator(value));\n        },\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer","import React from \"react\";\nimport ProfileInfo from \"../ProfileInfo/PtofileInfo\";\nimport classes from \"../Profile.module.css\"\nimport PostsContainer from \"../Posts/PostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.profileContainer}>\n            <ProfileInfo profile={props.profile}\n                         contacts={props.contacts}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         isOwner={props.isOwner}\n                         saveNewPhoto={props.saveNewPhoto}\n                         isLoading={props.isLoading}\n                         isFetchingStatus={props.isFetchingStatus}\n            />\n            <PostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile","import {profileAPI} from \"../../../api/api\";\nimport {\n    getStatus, ProfileActionsTypes,\n    setPhotoSuccess,\n    setProfileData,\n    toggleFetch,\n    toggleFetchStatus\n} from \"../../reducers/profile/profileReducer\";\nimport {stopSubmit} from \"redux-form\";\nimport {ProfileType, ResultCodesEnum} from \"../../types/@types\";\nimport {AppStateType} from \"../../store\";\nimport {ThunkAction} from \"redux-thunk\";\n\ntype ThunkAction_ProfileTypes = ThunkAction<Promise<void>, AppStateType, unknown, ProfileActionsTypes>\n\nexport const getProfileThunkCreator = (id: number): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(toggleFetch(true))\n        let dataProfile = await profileAPI.getProfile(id)\n        dispatch(setProfileData(dataProfile))\n        dispatch(toggleFetch(false))\n    }\n\nexport const getStatusThunkCreator = (id: number): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(toggleFetchStatus(true))\n        let dataStatus = await profileAPI.getStatusProfile(id)\n        dispatch(getStatus(dataStatus))\n        dispatch(toggleFetchStatus(false))\n    }\n\nexport const setStatusThunkCreator = (status: string): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        try {\n            dispatch(toggleFetchStatus(true))\n            let response = await profileAPI.setStatus(status)\n            if (response.data.resultCode === ResultCodesEnum.SUCCESS) {\n                dispatch(getStatus(status))\n                dispatch(toggleFetchStatus(false))\n            }\n        } catch (err) {\n            alert(err)\n        }\n    }\nexport const saveNewPhotoThunkCreator = (file: Blob): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(toggleFetch(true))\n        let response = await profileAPI.savePhoto(file)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(setPhotoSuccess(response.data.photos))\n            dispatch(toggleFetch(false))\n        }\n    }\n\nexport const saveProfileThunkCreator = (data: ProfileType): ThunkAction_ProfileTypes =>\n    async (dispatch, getState) => {\n        dispatch(toggleFetch(true))\n        const userId = getState().auth.userId as number\n        let response = await profileAPI.saveProfile(data)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            await dispatch(getProfileThunkCreator(userId))\n            dispatch(toggleFetch(false))\n        } else {\n            dispatch(toggleFetch(false))\n            dispatch(stopSubmit('newProfileData', {_error: response.messages}))\n        }\n    }","import {AppStateType} from \"../../store\";\n\nexport const getProfileSelector = (state: AppStateType) => {\n    return state.profilePage.profile\n}\n\nexport const getStatusSelector = (state: AppStateType) => {\n    return state.profilePage.status\n}\n\nexport const getUserIdSelector = (state: AppStateType) => {\n    return state.auth.userId\n}\n\nexport const checkAuthSelector = (state: AppStateType) => {\n    return state.auth.isAuth\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.profilePage.isLoading\n}\n\nexport const checkFetchingStatusSelector = (state: AppStateType) => {\n    return state.profilePage.isFetchingStatus\n}\n\n/*\n* future, create this selector, he must work with all simple selectors\n* and into switch/case return all and new value from state\n */\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import classes from \"./Profile.module.css\"\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nimport Profile from \"./ProfileLayout/Ptofile\";\nimport withAuthRedirect from \"../../utils/hoc/authRedirect\";\nimport {\n    getProfileThunkCreator, getStatusThunkCreator, saveNewPhotoThunkCreator,\n    setStatusThunkCreator\n} from \"../../store/thunk/profile/profileThunk\";\nimport {\n    checkAuthSelector, checkFetchingStatusSelector, checkLoadingSelector, getProfileSelector,\n    getStatusSelector, getUserIdSelector\n} from \"../../store/selectors/profile/profileSelectors\";\n\nclass ProfileContainer extends React.PureComponent {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authUserID\n            if(!userId){\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getStatusThunkCreator(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.profileContainer}>\n                <Profile {...this.props}\n                         isOwner={!this.props.match.params.userId}\n                         contacts={this.props.profile.contacts}\n                         updateStatus={this.props.setStatusThunkCreator}\n                         saveNewPhoto={this.props.saveNewPhotoThunkCreator}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    status: getStatusSelector(state),\n    authUserID: getUserIdSelector(state),\n    isAuth: checkAuthSelector(state),\n    isLoading: checkLoadingSelector(state),\n    isFetchingStatus: checkFetchingStatusSelector(state)\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        getProfileThunkCreator, setStatusThunkCreator,\n        getStatusThunkCreator, saveNewPhotoThunkCreator\n    }),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)\n\n/* Вызов всех эти обработчиков ниже мы заменили на одну функцию compose выше\n*\n* const withAuth = withAuthRedirect(ProfileContainer)\n* // Используем withRouter чтобы обернуть контейнерную компоненту\n* // в другую контейнерную компоненту и передать в нее данные состояния uri\n* const ProfileWithUrlData = withRouter(withAuth)\n*\n* export default connect(mapStateToProps, {\n*     getProfileThunkCreator,\n*     getStatusThunkCreator,\n* })(ProfileWithUrlData)\n*/","import React from 'react'\nimport {maxLength, minValue} from \"../../../utils/validators/validator\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/textarea/textarea\";\nimport {InputBase} from \"../../common/input/input\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport classes from \"../Setting.module.css\";\n\n\nconst maxLength300 = maxLength(300)\nconst maxLength50 = maxLength(50)\nconst maxLength20 = maxLength(20)\nconst minValue1 = minValue(1)\n\nconst ProfileDataForm = (props) => {\n\n    const {handleSubmit, submitting, error} = props\n    return (\n        <form onSubmit={handleSubmit} className={classes.settingsWrapper}>\n            <div className={classes.form_wrapper}>\n                <div className={classes.aboutMe_block}>\n                    <h4>About me:</h4>\n                    <Field component={Textarea}\n                           name={'aboutMe'}\n                           type='text'\n                           placeholder={'Write about your'}\n                           validate={[maxLength300, minValue1]}\n                    />\n                    <h4>Full Name</h4>\n                    <Field component={InputBase}\n                           name={'fullName'}\n                           type='text'\n                           placeholder={'Full name'}\n                           validate={[maxLength20, minValue1]}\n                    />\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.job_block}>\n                    <h4>Job information:</h4>\n                    <Field component={Textarea}\n                           name={'lookingForAJobDescription'}\n                           type='text'\n                           placeholder={'Description for job'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <span>Open for job&nbsp;</span>\n                    <Field component={'input'}\n                           name={'lookingForAJob'}\n                           type=\"checkbox\"/>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contacts_block}>\n                    <h4>Contacts:</h4>\n                    <div className={classes.contacts_fields}>\n                        <p>Facebook:</p>\n                        <Field component={InputBase}\n                               name={'contacts.facebook'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Website:</p>\n                        <Field component={InputBase}\n                               name={'contacts.website'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>VK:</p>\n                        <Field component={InputBase}\n                               name={'contacts.vk'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Twitter:</p>\n                        <Field component={InputBase}\n                               name={'contacts.twitter'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Instagram:</p>\n                        <Field component={InputBase}\n                               name={'contacts.instagram'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>YouTube:</p>\n                        <Field component={InputBase}\n                               name={'contacts.youtube'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>GitHub:</p>\n                        <Field component={InputBase}\n                               name={'contacts.github'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>MainLink:</p>\n                        <Field component={InputBase}\n                               name={'contacts.mainLink'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                    </div>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.btn_saveAll}>\n                <button type=\"submit\"\n                        disabled={submitting}>Save All\n                </button>\n            </div>\n            {error ? <div>{error}</div> : null}\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm(\n    {\n        form: 'newProfileData',\n    }\n)(ProfileDataForm)\n\nconst ProfileDataEdit = ({saveProfile, profile, isLoading}) => {\n    /*\n    * Для полей contacts мы в качестве названия используем 'contacts.Name'\n    * Чтобы внутри formData, создался объект contacts. И value для этих полей отображался\n    */\n    const onSubmit = (formData) => {\n        saveProfile(formData)\n    }\n\n    return (\n        <div className={classes.settingsField}>\n            <ProfileDataReduxForm\n                onSubmit={onSubmit}\n                initialValues={profile}\n                isLoading={isLoading}\n            />\n            {isLoading\n                ? <div>\n                    <Preloader/>\n                </div>\n                : null}\n        </div>\n    )\n}\n\nexport default ProfileDataEdit","import React from \"react\";\nimport classes from \"./Setting.module.css\"\nimport ProfileDataEdit from \"./ProfileEdit/InfoBlockForm\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {saveProfileThunkCreator} from \"../../store/thunk/profile/profileThunk\";\nimport {checkLoadingSelector, getProfileSelector} from \"../../store/selectors/profile/profileSelectors\";\n\nconst Setting = ({...props}) => {\n    const saveProfile = (data) => {\n        props.saveProfileThunkCreator(data)\n    }\n    return (\n        <div className={classes.settingContainer}>\n            <h2>Setting</h2>\n            <ProfileDataEdit\n                profile={props.profile}\n                isLoading={props.isLoading}\n                saveProfile={saveProfile}\n            />\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    isLoading: checkLoadingSelector(state),\n})\n\n\nexport default compose(connect(mapStateToProps, {saveProfileThunkCreator}))(Setting)","export default __webpack_public_path__ + \"static/media/logo.30954a56.svg\";","import React from \"react\";\nimport classes from '../Header.module.css';\nimport logo from \"../../../assets/logo/logo.svg\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <div className={classes.headerWrapper}>\n            <header className={classes.mediaBlock}>\n                <img src={logo} alt=\"logo\"/>\n                <h2>Social App</h2>\n            </header>\n            <div className={classes.loginBlock}>\n                <NavLink to={'/profile'}>\n                    {props.isAuth ? <div className={classes.userName}>{props.login}</div> : null}\n                </NavLink>\n                {props.isAuth\n                    ? <button className={classes.authBtn} onClick={props.signOut}>LOGOUT</button>\n                    : <NavLink to={'/login'}>\n                        <button className={classes.authBtn}>LOGIN</button>\n                    </NavLink>\n                }\n            </div>\n        </div>\n    )\n}\nexport default Header","import React from \"react\";\nimport Header from \"./HeaderLayout/Header\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {signOutThunkCreator} from \"../../store/thunk/auth/authThunk\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return (\n            <Header {...this.props}\n                    signOut={this.props.signOutThunkCreator}\n            />\n        )\n    }\n}\n\n/* Функция которая из state передает props внутрь компоненты */\nconst mapStateToProps = (state) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, {signOutThunkCreator})\n)(HeaderContainer)\n","import React from \"react\";\nimport classes from '../Sidebar.module.css';\n\nconst SidebarFriends = (props) => {\n    return (\n        <div className={classes.item}>\n            <img\n                src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                alt=\"avatar\" />\n            <p>{props.name}</p>\n        </div>\n    )\n}\n\nexport default SidebarFriends","import React from \"react\";\nimport classes from '../Sidebar.module.css';\nimport SidebarFriends from '../SidebarItem/sidebarFriends'\n\n\nconst Sidebar = (props) => {\n    const friendItem = props.sidebar.friendList.map(uData => <SidebarFriends name={uData.name} key={uData.id}/>)\n\n    return (\n        <div className={classes.container}>\n            {friendItem}\n        </div>\n    )\n}\nexport default Sidebar","import Sidebar from \"./SidebarLayout/Sidebar\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        sidebar: state.sidebar\n    }\n}\n\nconst SidebarContainer = connect(mapStateToProps)(Sidebar)\n\nexport default SidebarContainer","import React from \"react\";\nimport classes from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport SidebarContainer from \"../Sidebar/SidebarContainer\";\n\n\nconst NavBar = (props) => {\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/dialogs'>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/setting'>Setting</NavLink>\n            </div>\n            <SidebarContainer/>\n        </nav>\n    )\n}\nexport default NavBar","import React, {Suspense} from 'react'\nimport {Preloader} from \"../../components/common/preloader/spinner\";\n\nconst withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </Suspense>\n        )\n    }\n}\n\nexport default withSuspense","import React from \"react\";\nimport classes from './StartPage.module.css'\n\nconst StartPage = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.header}>\n                <h2 className={classes.headerGreeting}>Thank you for visiting.</h2>\n                <h4 className={classes.headerLogin}>Login : <span>free@samuraijs.com</span></h4>\n                <h4 className={classes.headerPass}>Password : <span>free</span></h4>\n            </div>\n            <div className={classes.disclaimer}>\n                <h3 className={classes.disclaimerTitle}>DISCLAIMER</h3>\n                <p className={classes.disclaimerDescr}>\n                    <b>In Safari now not working authorized use other browser, sorry.</b><br/>\n                    This is my template for SPA (Single Page Application). He has not complete functionality,\n                    but give you opportunity to see how at work. On this application i use GitHub Pages.\n                    For correct reloading page i use HashRouter. In order not to download full application i\n                    use Lazy Loading (React.Suspense, React.Lazy). This application support ReduxDevTools,\n                    you can see state and all dispatch working process.\n                </p>\n            </div>\n            <div className={classes.stack}>\n                <ul className={classes.stackList}>\n                    <h3 className={classes.stackTitile}>Stack technology:</h3>\n                    <li className={classes.stackItemTitle}>\n                        <h4>UI/UX (User interface)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            React (Class component and Function component, Life cycle methods, Hooks, HOC)\n                        </li>\n                        <li className={classes.stackItem}>\n                            CSS (CSS modules)\n                        </li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>BLL (Business logic layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Redux-Thunk (In future Redux-Saga)</li>\n                        <li className={classes.stackItem}>Redux-Form (Custom Fields)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>DAL (Data access layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Rest API :&nbsp;\n                            <a href=\"https://social-network.samuraijs.com/docs#\">\n                                https://social-network.samuraijs.com/docs#</a>\n                        </li>\n                        <li className={classes.stackItem}>AXIOS (Promise and Async/Await)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>Testing</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            Jestjs.io\n                        </li>\n                    </ul>\n                </ul>\n                <div className={classes.opportunities}>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can</h4>\n                        <li className={classes.opportunitiesItemCan}>\n                            Login / Logout - if you not authorized you can't visited Profile Page and Messages Page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you avatar image - for faster work use small weight file.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you status - on page other user in function blocked.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change information for you profile - redirect on settings page (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Add information if you open for job (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new post - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new messages - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Looking other user - all users is live person.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Enter on other user page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            You can follow/unfollow users.\n                        </li>\n                    </ul>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can't</h4>\n                        <li className={classes.opportunitiesItem}>\n                            Registration in application.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change password.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change information on not owner page.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Look all following user.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Search user.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default StartPage","import './App.css';\nimport React from 'react';\nimport {\n    // BrowserRouter,\n    HashRouter,\n    Route,\n    withRouter\n} from \"react-router-dom\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {InitializeApp} from \"./store/thunk/app/initThunk\";\nimport store from \"./store/store\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/PtofileContainer\";\nimport Setting from \"./components/Setting/Setting\";\nimport {Preloader} from \"./components/common/preloader/spinner\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport withSuspense from \"./utils/hoc/lazyComponent\";\nimport StartPage from \"./components/Start Component/StartPage\";\nimport {Switch} from \"react-router\";\n\n/* Add lazy loading for not base component */\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst DialogContainer = React.lazy(() => import('./components/Dialogs/DialogContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\n\nclass App extends React.Component {\n    catchAllUnhandledError = (reason, promise) => {\n        alert('Some error occurred')\n        console.error(promise, reason)\n    }\n\n    componentDidMount() {\n        this.props.InitializeApp()\n        window.addEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    render() {\n        if (!this.props.init) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route\n                            /*\n                            * Указываем не обязательный параметр :userId?\n                            * чтобы если не '/profile', передать в state данные о uri строке\n                            */\n                            path='/profile/:userId?'\n                            render={() => <ProfileContainer/>}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={withSuspense(Login)}/>\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogContainer)}/>\n                        <Route path='/news'\n                               render={withSuspense(News)}/>\n                        <Route path='/music'\n                               render={withSuspense(Music)}/>\n                        <Route path='/setting'\n                               render={withSuspense(Setting)}/>\n                        <Route exact path='/'\n                               render={() => <StartPage/>}/>\n                        <Route path='*'\n                               render={() => <div>404 Not Founded</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    init: state.app.initialized\n})\n\n/*  Делаем контейнерную компоненту для App, чтобы можно было протестировать ее отрисовку через test */\nconst SocialAppContainer = compose(\n    connect(mapStateToProps, {InitializeApp}),\n    /*\n    * Мы обернули компоненту дополнительно withRoute,\n    * так как при использовании Route с классовыми компонентами,\n    * Route может работать не корректно\n    */\n    withRouter\n)(App);\n\nconst SocialApp = () => {\n    return (\n        /* Use HashRouter for gh-pages */\n        <HashRouter>\n            {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\n            <Provider store={store}>\n                <SocialAppContainer/>\n            </Provider>\n            {/*</BrowserRouter>*/}\n        </HashRouter>\n    )\n}\n\nexport default SocialApp","import {InitializeSuccess} from \"../../reducers/app/appReducer\";\nimport {checkAuthThunkCreator} from \"../auth/authThunk\";\n\nexport const InitializeApp = () => (dispatch: any) => {\n    let promiseAuth = dispatch(checkAuthThunkCreator())\n\n    Promise.all([promiseAuth])\n        .then(() => {\n            dispatch(InitializeSuccess())\n        })\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport SocialApp from \"./App\";\n\nReactDOM.render(\n    <SocialApp/>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react'\nimport classes from './input.module.css'\n\nexport const InputLight = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg_light}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const InputBase = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const LoginInput = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='text' placeholder='Login'\n                       className={(touched && error) ? classes.error_input : null}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n\nexport const PasswordInput = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='password' placeholder='Password'\n                       className={(touched && error) ? classes.error_input : null}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n","export const required = value => (value ? undefined : 'Required')\n\nexport const maxLength = max => value =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\n\nexport const minLength = min => value =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\n\nexport const minValue = min => value =>\n    value && value < min ? `Must be at least ${min}` : undefined\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__CDI8g\",\"ava_wrapper\":\"Post_ava_wrapper__2wRuV\",\"ava_item\":\"Post_ava_item__1V1Sk\",\"body_wrapper\":\"Post_body_wrapper__2qi5o\",\"post_body_item\":\"Post_post_body_item__3AFMu\",\"like_wrapper\":\"Post_like_wrapper__3OBgG\",\"like_item\":\"Post_like_item__1bLVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"input_error_input__27_o3\",\"error_msg_light\":\"input_error_msg_light__DlyGg\",\"error_msg\":\"input_error_msg__11WSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__1oKyh\",\"mediaBlock\":\"Header_mediaBlock__3QNG4\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"userName\":\"Header_userName__2h_yj\",\"authBtn\":\"Header_authBtn__1ELyC\"};","import {GET_CAPTCHA, SET_AUTH_DATA} from \"../../actions/actions\";\n\nconst initialState = {\n    userId: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    isLoading: false,\n    captcha: null as string | null\n};\n\nexport type AuthInitialStateType = typeof initialState;\nexport type AuthActionsTypes = SetAuthActionType |\n    GetCaptchaActionType\n\n/* Need add typification for action */\nconst authReducer = (state = initialState, action: AuthActionsTypes): AuthInitialStateType => {\n    switch (action.type) {\n        case SET_AUTH_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: !state.isAuth\n            };\n        case GET_CAPTCHA:\n            return {\n                ...state,\n                captcha: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\ntype SetAuthActionType = {\n    type: typeof SET_AUTH_DATA\n    payload: {\n        userId: number | null\n        email: string | null\n        login: string | null\n    }\n}\n\nexport const setAuthData = (userId: number | null, email: string | null, login: string | null): SetAuthActionType => ({\n    type: SET_AUTH_DATA,\n    payload: {userId, email, login}\n})\n\n\ntype GetCaptchaActionType = {\n    type: typeof GET_CAPTCHA\n    payload: string\n}\n\nexport const getCaptcha = (url: string): GetCaptchaActionType => ({\n    type: GET_CAPTCHA,\n    payload: url\n})\n\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1OedU\",\"usersField\":\"Users_usersField__13PIe\",\"usersItems\":\"Users_usersItems__3D9Hj\",\"reactPaginate\":\"Users_reactPaginate__2Tm98\",\"reactPaginationBtn\":\"Users_reactPaginationBtn__3fV12\",\"pagination\":\"Users_pagination__2Njh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StartPage_wrapper__3FcH6\",\"header\":\"StartPage_header__16P69\",\"headerGreeting\":\"StartPage_headerGreeting__2DjNg\",\"disclaimer\":\"StartPage_disclaimer__1s4bg\",\"disclaimerTitle\":\"StartPage_disclaimerTitle__3-W9w\",\"disclaimerDescr\":\"StartPage_disclaimerDescr__3Z-Un\",\"stack\":\"StartPage_stack__Qhez8\",\"stackTitile\":\"StartPage_stackTitile__293Iu\",\"stackList\":\"StartPage_stackList__yX5qs\",\"stackItemTitle\":\"StartPage_stackItemTitle__3EH7n\",\"stackItem\":\"StartPage_stackItem__eT94q\",\"opportunities\":\"StartPage_opportunities__prS0J\",\"opportunitiesTitle\":\"StartPage_opportunitiesTitle__tUoYd\",\"opportunitiesList\":\"StartPage_opportunitiesList__26NOM\",\"opportunitiesItem\":\"StartPage_opportunitiesItem__1dpRX\",\"opportunitiesItemCan\":\"StartPage_opportunitiesItemCan__1IuHy\"};","import React from 'react'\n\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <textarea {...input} {...props} />\n            </div>\n            {touched &&\n            ((error && <span style={{color: 'crimson'}}>{error}</span>))}\n        </div>\n\n    )\n}\n","//DIALOG_ACTIONS\nexport const SEND_MESSAGE = 'my-app/dialogs/SEND_MESSAGE';\n//USER_ACTIONS\nexport const FOLLOW = 'my-app/users/FOLLOW'\nexport const UNFOLLOW = 'my-app/users/UNFOLLOW'\nexport const SET_USERS = 'my-app/users/SET_USERS'\nexport const SET_PAGE = 'my-app/users/SET_PAGE'\nexport const SET_TOTAL_COUNT = 'my-app/users/SET_TOTAL_COUNT'\nexport const IS_USER_FETCHING = 'my-app/users/IS_FETCHING'\nexport const IS_DISABLED_BTN = 'my-app/users/IS_DISABLED_BTN'\n//PROFILE_ACTIONS\nexport const ADD_POST = 'my-app/profile/ADD_POST';\nexport const DELETE_POST = 'my-app/profile/DELETE_POST';\nexport const SET_PROFILE_DATA = 'my-app/profile/SET_PROFILE_DATA';\nexport const GET_STATUS = 'my-app/profile/GET_STATUS';\nexport const SET_PHOTO_SUCCESS = 'my-app/profile/SET_PHOTO_SUCCESS';\nexport const IS_PROFILE_FETCHING = 'my-app/profile/IS_FETCHING';\nexport const IS_STATUS_FETCHING = 'my-app/profile/IS_FETCHING_STATUS';\n//AUTH_ACTIONS\nexport const SET_AUTH_DATA = 'my-app/auth/SET_AUTH_DATA';\nexport const GET_CAPTCHA = 'my-app/auth/GET_CAPTCHA';\n//INIT APP\nexport const SET_INITIALIZED = 'my-app/init/SET_INITIALIZED';\n","import {authAPI} from \"../../../api/api\";\nimport {AuthActionsTypes, getCaptcha, setAuthData} from \"../../reducers/auth/authReducer\";\nimport {stopSubmit} from \"redux-form\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../../store\";\nimport {ResultCodeForCaptchaCEnum, ResultCodesEnum} from \"../../types/@types\";\n\ntype ThunkAction_AuthType = ThunkAction<void, AppStateType, unknown, AuthActionsTypes>\n\nexport const checkAuthThunkCreator = (): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.checkAuth()\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            let {id, login, email} = response.data\n            dispatch(setAuthData(id, email, login))\n        }\n    }\nexport const signOutThunkCreator = (): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.signOut()\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(setAuthData(null, null, null))\n        }\n    }\n\nexport const signInThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: boolean): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.signIn(email, password, rememberMe, captcha)\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(checkAuthThunkCreator())\n        } else if (response.resultCode === ResultCodeForCaptchaCEnum.ANTI_BOT) {\n            let data = await authAPI.getCaptcha()\n            dispatch(getCaptcha(data.url))\n        } else {\n            // @ts-ignore\n            dispatch(stopSubmit('login', {_error: response.messages}))\n        }\n    }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3lONb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sidebar_container__3CgDZ\",\"item\":\"Sidebar_item__3zPF1\"};"],"sourceRoot":""}