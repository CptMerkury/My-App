{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/DialogForm/DialogForm.tsx","components/Dialogs/DIalogLayout/Dialog.tsx","components/Dialogs/DialogContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialogItem","to","src","alt","name","MessageItem","messageItem","message","maxLength200","maxLength","minValue1","minValue","DialogReduxForm","reduxForm","form","handleSubmit","reset","onSubmit","Field","component","Textarea","type","placeholder","validate","required","onClick","setTimeout","Dialogs","dialogsElements","dialogs","map","dData","messagesElement","messages","mData","dialogsContainer","dialogsField","textField","value","createMessage","body","compose","withAuthRedirect","connect","state","dialogPage","dialogActions","sendMessageCreator","Dialog"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,aAAe,6BAA6B,QAAU,wBAAwB,WAAa,2BAA2B,SAAW,yBAAyB,YAAc,4BAA4B,UAAY,4B,mGCiBvQC,EAbI,SAACC,GAChB,IAAIC,EAAO,cAAgBD,EAAME,GACjC,OACI,qBAAKC,UAAWC,IAAQC,WAAxB,SACI,eAAC,IAAD,CAASC,GAAIL,EAAb,UACI,qBACIM,IAAI,8GACJC,IAAI,WACPR,EAAMS,WCHRC,EANK,SAACV,GACjB,OACI,qBAAKG,UAAWC,IAAQO,YAAxB,SAAsCX,EAAMY,W,kCCD9CC,EAA8BC,YAAU,KACxCC,EAA2BC,YAAS,GA8B3BC,EAJSC,YAA0B,CAC9CC,KAAM,UADcD,EApBwC,SAAClB,GAAW,IACjEoB,EAAuBpB,EAAvBoB,aAAcC,EAASrB,EAATqB,MAErB,OACI,uBAAMC,SAAUF,EAAhB,UACI,8BACI,cAACG,EAAA,EAAD,CAAOC,UAAWC,IACXhB,KAAK,OACLiB,KAAK,OACLC,YAAY,yBACZC,SAAU,CAACC,IAAUhB,EAAcE,OAG9C,8BACI,wBAAQe,QAAS,kBAAMC,WAAWV,EAAO,IAAzC,kCCkBDW,EA/ByB,SAAChC,GAErC,IAAMiC,EAAkBjC,EAAMkC,QAAQC,KAAI,SAAAC,GAAK,OAAI,cAAC,EAAD,CAAY3B,KAAM2B,EAAM3B,KAAMP,GAAIkC,EAAMlC,IAASkC,EAAMlC,OACpGmC,EAAkBrC,EAAMsC,SAASH,KAAI,SAAAI,GAAK,OAAI,cAAC,EAAD,CAAa3B,QAAS2B,EAAM3B,QAASV,GAAIqC,EAAMrC,IAASqC,EAAMrC,OAMlH,OACI,sBAAKC,UAAWC,IAAQoC,iBAAxB,UACI,0CACA,sBAAKrC,UAAWC,IAAQqC,aAAxB,UACI,qBAAKtC,UAAWC,IAAQ8B,QAAxB,SACI,qBAAK/B,UAAWC,IAAQC,WAAxB,SACK4B,MAGT,qBAAK9B,UAAWC,IAAQkC,SAAxB,SACI,qBAAKnC,UAAWC,IAAQO,YAAxB,SACK0B,SAIb,qBAAKlC,UAAWC,IAAQsC,UAAxB,SACI,cAAC,EAAD,CAAiBpB,SApBV,SAACqB,GAChB3C,EAAM4C,cAAcD,EAAME,e,iBCHnBC,sBACXC,IACAC,aAToB,SAACC,GACrB,MAAO,CACHf,QAASe,EAAMC,WAAWhB,QAC1BI,SAAUW,EAAMC,WAAWZ,YAMN,CACrBM,cAAeO,IAAcC,qBAHtBN,CAKbO","file":"static/js/3.e4bac6c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialog_dialogsContainer__3Ftcc\",\"dialogsField\":\"Dialog_dialogsField__Bm8J6\",\"dialogs\":\"Dialog_dialogs__2nWS6\",\"dialogItem\":\"Dialog_dialogItem__EM1vm\",\"messages\":\"Dialog_messages__19Bic\",\"messageItem\":\"Dialog_messageItem__1Er95\",\"textField\":\"Dialog_textField__1GyaD\"};","import React from \"react\";\nimport classes from '../Dialog.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {DialogType} from \"../../../store/types/@types\";\n\nconst DialogItem = (props: DialogType) => {\n    let path = '/dialogs/id' + props.id;\n    return (\n        <div className={classes.dialogItem}>\n            <NavLink to={path}>\n                <img\n                    src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                    alt=\"avatar\"/>\n                {props.name}</NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem","import React from \"react\";\nimport classes from '../Dialog.module.css'\nimport {MessageType} from \"../../../store/types/@types\";\n\nconst MessageItem = (props: MessageType) => {\n    return (\n        <div className={classes.messageItem}>{props.message}</div>\n    )\n};\n\nexport default MessageItem","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/textarea/textarea\";\nimport {maxLength, minValue, required, ValidateTypes} from \"../../../utils/validators/validator\";\n\nconst maxLength200: ValidateTypes = maxLength(200)\nconst minValue1: ValidateTypes = minValue(1)\n\ntype DialogFromType = {\n    body: string\n}\n\nconst DialogForm: React.FC<InjectedFormProps<DialogFromType>> = (props) => {\n    const {handleSubmit, reset} = props;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='body'\n                       type='text'\n                       placeholder='Write your new message'\n                       validate={[required, maxLength200, minValue1]}\n                />\n            </div>\n            <div>\n                <button onClick={() => setTimeout(reset, 0)}>Send message</button>\n            </div>\n        </form>\n    )\n}\n\nconst DialogReduxForm = reduxForm<DialogFromType>({\n    form: 'dialog'\n})(DialogForm)\n\nexport default DialogReduxForm","import React from \"react\";\nimport classes from '../Dialog.module.css'\nimport DialogItem from '../DialogItem/DialogItem'\nimport MessageItem from '../MessageItem/MessageItem'\nimport DialogReduxForm from \"../DialogForm/DialogForm\";\nimport {DialogType, MessageType} from \"../../../store/types/@types\";\n\ntype OwnPropsType= {\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n    createMessage: (val: string) => void\n}\n\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\n\n    const dialogsElements = props.dialogs.map(dData => <DialogItem name={dData.name} id={dData.id} key={dData.id}/>);\n    const messagesElement = props.messages.map(mData => <MessageItem message={mData.message} id={mData.id} key={mData.id}/>)\n\n    const addMessage = (value: {body: string}) => {\n        props.createMessage(value.body);\n    }\n\n    return (\n        <div className={classes.dialogsContainer}>\n            <h2>Massages</h2>\n            <div className={classes.dialogsField}>\n                <div className={classes.dialogs}>\n                    <div className={classes.dialogItem}>\n                        {dialogsElements}\n                    </div>\n                </div>\n                <div className={classes.messages}>\n                    <div className={classes.messageItem}>\n                        {messagesElement}\n                    </div>\n                </div>\n            </div>\n            <div className={classes.textField}>\n                <DialogReduxForm onSubmit={addMessage}/>\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs","import {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport Dialog from \"./DIalogLayout/Dialog\";\nimport withAuthRedirect from \"../../utils/hoc/authRedirect\";\nimport {dialogActions} from \"../../store/reducers/dialogs/dialogsReducer\";\nimport {AppStateType} from \"../../store/store\";\nimport React from \"react\";\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogPage.dialogs,\n        messages: state.dialogPage.messages,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {\n        createMessage: dialogActions.sendMessageCreator\n    }),\n)(Dialog);"],"sourceRoot":""}