{"version":3,"sources":["components/common/input/input.jsx","components/common/input/input.module.css","components/Setting/Setting.module.css","components/Setting/ProfileEdit/InfoBlockForm.jsx","components/Setting/Setting.jsx"],"names":["InputBase","input","meta","touched","error","props","className","classes","error_msg","LoginInput","type","placeholder","error_input","PasswordInput","module","exports","maxLength50","maxLength","minValue1","minValue","ProfileDataReduxForm","reduxForm","form","handleSubmit","pristine","submitting","reset","onSubmit","Field","component","Textarea","name","validate","required","disabled","onClick","ProfileDataEdit","saveProfile","profile","isLoading","formData","initialValues","compose","connect","state","getProfileSelector","checkLoadingSelector","saveProfileThunkCreator","settingContainer","data"],"mappings":"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","file":"static/js/4.1cd9e25d.chunk.js","sourcesContent":["import React from 'react'\nimport classes from './input.module.css'\n\nexport const InputLight = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg_light}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const InputBase = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const LoginInput = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='text' placeholder='Login'\n                       className={(touched && error) ? classes.error_input : null}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n\nexport const PasswordInput = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='password' placeholder='Password'\n                       className={(touched && error) ? classes.error_input : null}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"input_error_input__27_o3\",\"error_msg_light\":\"input_error_msg_light__DlyGg\",\"error_msg\":\"input_error_msg__11WSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingContainer\":\"Setting_settingContainer__2jnFS\"};","import React from 'react'\nimport {maxLength, minValue, required} from \"../../../utils/validators/validator\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/textarea/textarea\";\nimport {InputBase} from \"../../common/input/input\";\nimport {Preloader} from \"../../common/preloader/spinner\";\n\n\nconst maxLength50 = maxLength(50)\nconst minValue1 = minValue(1)\n\nconst ProfileDataForm = (props) => {\n\n    const {handleSubmit, pristine, submitting, reset, error} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <h4>About me:</h4>\n                <Field component={Textarea}\n                       name={'aboutMe'}\n                       type='text'\n                       placeholder={'Write about your'}\n                       validate={[required, maxLength50, minValue1]}\n                />\n                <h4>Full Name</h4>\n                <Field component={InputBase}\n                       name={'fullName'}\n                       type='text'\n                       placeholder={'Full name'}\n                       validate={[required, maxLength50, minValue1]}\n                />\n                <div>\n                    <h4>Job information:</h4>\n                    <span>Open for job&nbsp;</span>\n                    <Field component={'input'}\n                           name={'lookingForAJob'}\n                           type=\"checkbox\"/>\n                    <p>Description for job</p>\n                    <Field component={Textarea}\n                           name={'lookingForAJobDescription'}\n                           type='text'\n                           placeholder={'Description for job'}\n                           validate={[required, maxLength50, minValue1]}\n                    />\n                </div>\n                <div>\n                    <h4>Contacts:</h4>\n                    <p>Facebook:</p>\n                    <Field component={InputBase}\n                           name={'contacts.facebook'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>Website:</p>\n                    <Field component={InputBase}\n                           name={'contacts.website'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>VK:</p>\n                    <Field component={InputBase}\n                           name={'contacts.vk'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>Twitter:</p>\n                    <Field component={InputBase}\n                           name={'contacts.twitter'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>Instagram:</p>\n                    <Field component={InputBase}\n                           name={'contacts.instagram'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>YouTube:</p>\n                    <Field component={InputBase}\n                           name={'contacts.youtube'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>GitHub:</p>\n                    <Field component={InputBase}\n                           name={'contacts.github'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <p>MainLink:</p>\n                    <Field component={InputBase}\n                           name={'contacts.mainLink'}\n                           type='text'\n                           placeholder={'https://'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\"\n                        disabled={submitting}>Save\n                </button>\n                <button type=\"button\"\n                        disabled={pristine || submitting} onClick={reset}>Clear\n                </button>\n            </div>\n            {error ? <div>{error}</div> : null}\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm(\n    {\n        form: 'newProfileData',\n    }\n)(ProfileDataForm)\n\nconst ProfileDataEdit = ({saveProfile, profile, isLoading}) => {\n    /*\n    * Для полей contacts мы в качестве названия используем 'contacts.Name'\n    * Чтобы внутри formData, создался объект contacts. И value для этих полей отображался\n    */\n    const onSubmit = (formData) => {\n        saveProfile(formData)\n    }\n\n    return (\n        <div>\n            <h3>Change your information:</h3>\n            <ProfileDataReduxForm onSubmit={onSubmit} initialValues={profile} isLoading={isLoading}/>\n            {isLoading ? <Preloader/> : null}\n        </div>\n    )\n}\n\nexport default ProfileDataEdit","import React from \"react\";\nimport classes from \"./Setting.module.css\"\nimport ProfileDataEdit from \"./ProfileEdit/InfoBlockForm\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {saveProfileThunkCreator} from \"../../store/thunk/profile/profileThunk\";\nimport {checkLoadingSelector, getProfileSelector} from \"../../store/selectors/profile/profileSelectors\";\n\nconst Setting = ({...props}) => {\n    const saveProfile = (data) => {\n        props.saveProfileThunkCreator(data)\n    }\n    return (\n        <div className={classes.settingContainer}>\n            <h2>Setting</h2>\n            <ProfileDataEdit profile={props.profile} isLoading={props.isLoading} saveProfile={saveProfile}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    isLoading: checkLoadingSelector(state),\n})\n\n\nexport default compose(connect(mapStateToProps, {saveProfileThunkCreator}))(Setting)"],"sourceRoot":""}