{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/preloader/spinner.module.css","components/Profile/Posts/Posts.module.css","store/reducers/dialogs/dialogsReducer.ts","utils/hoc/authRedirect.js","api/instance-api.ts","components/Setting/Setting.module.css","components/Users/UserItem/Users.module.css","serviceWorker.js","store/reducers/app/appReducer.ts","store/reducers/profile/profileReducer.ts","store/reducers/sidebar/sidebarReducer.ts","utils/helpers/object-helpers.js","store/reducers/users/usersReducer.ts","store/store.ts","components/Users/UserItem/UserItem.jsx","assets/icons/35.svg","components/common/preloader/spinner.tsx","components/Users/UsersLayout/Users.tsx","api/user-api.ts","store/thunk/users/usersThunk.ts","store/selectors/users/usersSelectors.ts","components/Users/UsersContainer.tsx","assets/icons/294.svg","components/common/preloader/loading.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJobData.jsx","components/Profile/ProfileInfo/PtofileInfo.jsx","components/Profile/Posts/PostsForm/PostForm.jsx","components/Profile/Posts/PostsItem/Post.jsx","components/Profile/Posts/PostsLayout/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileLayout/Ptofile.jsx","api/profile-api.ts","store/thunk/profile/profileThunk.ts","store/selectors/profile/profileSelectors.ts","components/Profile/PtofileContainer.jsx","components/Setting/ProfileEdit/InfoBlockForm.jsx","components/Setting/Setting.jsx","assets/logo/logo.svg","components/Header/HeaderLayout/Header.jsx","components/Header/HeaderContainer.jsx","components/Sidebar/SidebarItem/sidebarFriends.jsx","components/Sidebar/SidebarLayout/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/NavBar/NavBar.jsx","utils/hoc/lazyComponent.js","components/Start Component/StartPage.jsx","App.js","store/thunk/app/initThunk.ts","index.js","components/common/input/input.tsx","utils/validators/validator.ts","components/Profile/Posts/PostsItem/Post.module.css","components/NavBar/NavBar.module.css","components/Header/Header.module.css","store/reducers/auth/authReducer.ts","components/Users/Users.module.css","components/common/input/input.module.css","components/Start Component/StartPage.module.css","components/common/textarea/textarea.tsx","store/actions/actions.ts","api/auth-api.ts","store/thunk/auth/authThunk.ts","components/Profile/Profile.module.css","components/Sidebar/Sidebar.module.css"],"names":["module","exports","initialState","dialogs","id","name","messages","message","dialogActions","sendMessageCreator","value","type","SEND_MESSAGE","payload","dialogsReducer","state","action","newMessage","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ResultCodesEnum","ResultCodeForCaptchaCEnum","instance","axios","create","baseURL","withCredentials","headers","Boolean","window","location","hostname","match","initialized","appActions","SET_INITIALIZED","appReducer","profile","status","posts","likeCount","isLoading","isFetchingStatus","profileActions","ADD_POST","data","SET_PROFILE_DATA","GET_STATUS","photos","SET_PHOTO_SUCCESS","bool","IS_PROFILE_FETCHING","IS_STATUS_FETCHING","profileReducer","newPost","DELETE_POST","filter","p","friendList","sidebarReducer","UpdateObjectInArray","items","itemID","objPropsName","newObjProps","map","user","users","pageSize","totalCount","currentPage","isDisabledBtn","follow","userID","FOLLOW","unfollow","UNFOLLOW","setUsers","SET_USERS","setPage","num","SET_PAGE","setTotalCount","SET_TOTAL_COUNT","toggleFetch","IS_USER_FETCHING","toggleDisabledBtn","IS_DISABLED_BTN","userId","usersReducer","followed","RootReducer","combineReducers","app","profilePage","dialogPage","userPage","sidebar","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","UsersItem","className","classesItem","userInfoWrapper","infoWrapperImg","src","small","alt","unFollowBtn","userSubscribeBtn","onClick","setUnfollowHandler","disabled","isDisabled","some","followBtn","setFollowHandler","userInfoContainer","info","country","city","Preloader","classes","userLoading","spinner","Users","usersPage","selectPage","pagesCount","Math","ceil","userItem","uData","usersContainer","usersField","usersItems","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selected","containerClassName","reactPaginate","activeClassName","reactPaginationBtn","usersAPI","get","then","response","post","delete","_follow_unfollow_flow","dispatch","apiMethod","actionCreator","a","resultCode","SUCCESS","console","log","getUsersSelector","getPageSizeSelector","getUsersLengthSelector","getCurrantPageSelector","checkLoadingSelector","isUnUseBtnSelector","UsersContainer","setFollowThunkCreator","setUnfollowThunkCreator","getPageThunkCreator","getUsersThunkCreator","Loader","loading","width","ProfileStatus","statusData","saveStatus","isOwner","useState","editMode","setEditMode","setStatus","useEffect","statusBlock","statusDescr","onChange","target","autoFocus","placeholder","changeStatusBtn","cancelStatusBtn","bubble2","bubble1","Contact","title","href","rel","ProfileData","contacts","userInfoBlock","aboutMe","aboutMeTitle","linkBlock","Object","keys","key","editInfoBtn","ProfileJob","jobBlock","lookingForAJob","jobDescr","lookingForAJobDescription","openJobStatus","circleIndicatorActive","circleIndicatorNot","ProfileInfo","saveNewPhoto","updateStatus","head","wrapper","mediaBlock","photosBlock","large","infoBlock","nameBlock","changePhotosDis","changePhotos","files","user_nameBlock","fullName","maxLength200","maxLength","minValue1","minValue","PostReduxForm","reduxForm","handleSubmit","reset","onSubmit","Field","component","Textarea","validate","required","setTimeout","Post","item","ava_wrapper","ava_item","body_wrapper","post_body_item","like_wrapper","like_item","Posts","memo","postsElement","reverse","pData","postField","createPost","body","postsBlock","PostsContainer","Profile","profileContainer","profileAPI","newStatus","put","file","formData","FormData","append","getProfileThunkCreator","dataProfile","getProfileSelector","getStatusSelector","getUserIdSelector","checkAuthSelector","checkFetchingStatusSelector","ProfileContainer","params","authUserID","history","push","getStatusThunkCreator","refreshProfile","prevProps","setStatusThunkCreator","saveNewPhotoThunkCreator","PureComponent","alert","dataStatus","withRouter","maxLength300","maxLength50","maxLength20","ProfileDataReduxForm","submitting","error","settingsWrapper","form_wrapper","aboutMe_block","InputBase","btn_save","job_block","contacts_block","contacts_fields","btn_saveAll","ProfileDataEdit","saveProfile","settingsField","initialValues","saveProfileThunkCreator","getState","stopSubmit","_error","settingContainer","Header","headerWrapper","logo","loginBlock","userName","login","authBtn","signOut","HeaderContainer","signOutThunkCreator","SidebarFriends","Sidebar","friendItem","container","SidebarContainer","NavBar","nav","withSuspense","fallback","StartPage","header","headerGreeting","headerLogin","headerPass","disclaimer","disclaimerTitle","disclaimerDescr","stack","stackList","stackTitile","stackItemTitle","stackItem","opportunities","opportunitiesList","opportunitiesTitle","opportunitiesItemCan","opportunitiesItem","Login","lazy","DialogContainer","News","Music","App","catchAllUnhandledError","reason","promise","InitializeApp","addEventListener","removeEventListener","init","path","render","Setting","exact","SocialAppContainer","promiseAuth","checkAuthThunkCreator","Promise","all","SocialApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","input","meta","touched","error_msg","LoginInput","error_input","PasswordInput","undefined","max","min","email","captcha","authActions","setAuthData","SET_AUTH_DATA","getCaptcha","url","GET_CAPTCHA","style","color","authAPI","password","rememberMe","signInThunkCreator","ANTI_BOT"],"mappings":"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","file":"static/js/main.e7df6d8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__3Q3FT\",\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"mediaBlock\":\"ProfileInfo_mediaBlock__KKrQe\",\"photosBlock\":\"ProfileInfo_photosBlock__3yjLZ\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\",\"bubble1\":\"ProfileInfo_bubble1__2ZOgi\",\"bubble2\":\"ProfileInfo_bubble2__2ACT-\",\"statusDescr\":\"ProfileInfo_statusDescr__1y0wO\",\"changeStatusBtn\":\"ProfileInfo_changeStatusBtn__2ECzS\",\"cancelStatusBtn\":\"ProfileInfo_cancelStatusBtn__2uT7S\",\"infoBlock\":\"ProfileInfo_infoBlock__Yi3uO\",\"jobBlock\":\"ProfileInfo_jobBlock__3qX4B\",\"openJobStatus\":\"ProfileInfo_openJobStatus__2IBJk\",\"jobDescr\":\"ProfileInfo_jobDescr__2NnqD\",\"circleIndicatorActive\":\"ProfileInfo_circleIndicatorActive__3GUQ7\",\"circleIndicatorNot\":\"ProfileInfo_circleIndicatorNot__3OngS\",\"userInfoBlock\":\"ProfileInfo_userInfoBlock__2F7C3\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"aboutMeTitle\":\"ProfileInfo_aboutMeTitle__3NHae\",\"nameBlock\":\"ProfileInfo_nameBlock__3H98C\",\"user_nameBlock\":\"ProfileInfo_user_nameBlock__1Vh9z\",\"changePhotos\":\"ProfileInfo_changePhotos__20Roj\",\"changePhotosDis\":\"ProfileInfo_changePhotosDis__6Hh7r\",\"linkBlock\":\"ProfileInfo_linkBlock__2I8GX\",\"editInfoBtn\":\"ProfileInfo_editInfoBtn__3NaWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userLoading\":\"spinner_userLoading__pYkc6\",\"spinner\":\"spinner_spinner__xCXbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postField\":\"Posts_postField__33u5B\",\"postsBlock\":\"Posts_postsBlock__2AH0W\"};","import {SEND_MESSAGE} from \"../../actions/actions\";\nimport {DialogType, MessageType} from \"../../types/@types\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n        {id: 4, name: 'Vladimir'},\n        {id: 5, name: 'Andrew'},\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'What`s Up'},\n        {id: 3, message: 'How are you'},\n        {id: 4, message: 'Hello'},\n        {id: 5, message: 'Yo'},\n        {id: 6, message: 'Hi'},\n        {id: 7, message: 'What`s Up'},\n        {id: 8, message: 'How are you'},\n        {id: 9, message: 'Hello'},\n        {id: 10, message: 'Yo'},\n    ] as Array<MessageType>,\n};\n\nexport type DialogInitialStateType = typeof initialState;\n\nexport type DialogActionsTypes = InferActionsType<typeof dialogActions>\n\nconst dialogsReducer = (state = initialState, action: DialogActionsTypes): DialogInitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            let newMessage = {\n                id: state.messages.length + 1,\n                message: action.payload\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage]\n            };\n        }\n        default:\n            return state;\n    }\n}\nexport const dialogActions = {\n    sendMessageCreator : (value: string) => ({type: SEND_MESSAGE, payload: value} as const),\n}\n\nexport default dialogsReducer\n","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\n\n            return <Component {...this.props}/>\n        }\n    }\n    //Мы оборачиваем connect функцией нашу классовую компоненту, чтобы в пропсах получить isAuth\n    const ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectAuthRedirectComponent\n}\n\nexport default withAuthRedirect","import axios from \"axios\";\n\n//Enum Result Codes\nexport enum ResultCodesEnum {\n    SUCCESS = 0,\n    ERROR = 1,\n}\nexport enum ResultCodeForCaptchaCEnum {\n    ANTI_BOT = 10,\n}\n\n/* Мы создаем instance axios.create, чтобы один раз прописать в него параметры и не дублировать их в каждом запросе */\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        /* мы добавляем в headers api-key, чтобы сервер мог понять кто обращается к серверу. */\n        'API-KEY': 'a2f60dbc-59e4-4c2c-b4c3-fa8b69b0306e'\n    }\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingContainer\":\"Setting_settingContainer__2jnFS\",\"settingsWrapper\":\"Setting_settingsWrapper__rls-w\",\"settingsField\":\"Setting_settingsField__K0dp4\",\"form_wrapper\":\"Setting_form_wrapper__2-bPE\",\"aboutMe_block\":\"Setting_aboutMe_block__2aD8x\",\"btn_save\":\"Setting_btn_save__3-Ai2\",\"job_block\":\"Setting_job_block__5LFgs\",\"contacts_block\":\"Setting_contacts_block__yRxE5\",\"contacts_fields\":\"Setting_contacts_fields__2Fohe\",\"btn_saveAll\":\"Setting_btn_saveAll__2rC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoWrapper\":\"Users_userInfoWrapper__3S4n9\",\"userSubscribeBtn\":\"Users_userSubscribeBtn__22gv2\",\"followBtn\":\"Users_followBtn__1J35y\",\"unFollowBtn\":\"Users_unFollowBtn__Oh9oB\",\"userInfoContainer\":\"Users_userInfoContainer__1A0ol\",\"infoWrapperImg\":\"Users_infoWrapperImg__2vdnU\",\"info\":\"Users_info__2Jz7e\",\"location\":\"Users_location__1uMJl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_INITIALIZED} from \"../../actions/actions\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    initialized: false,\n};\n\nexport type InitialAppStateType = typeof initialState\nexport type InitActionsTypes = InferActionsType<typeof appActions>\n\nconst appReducer = (state = initialState, action: InitActionsTypes): InitialAppStateType => {\n    switch (action.type) {\n        case SET_INITIALIZED: {\n            return {\n                ...state,\n                initialized: true\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const appActions = {\n    InitializeSuccess : () => ({\n        type: SET_INITIALIZED,\n    } as const)\n}\n\nexport default appReducer;\n","import {\n    ADD_POST,\n    DELETE_POST,\n    GET_STATUS,\n    IS_PROFILE_FETCHING,\n    IS_STATUS_FETCHING,\n    SET_PHOTO_SUCCESS,\n    SET_PROFILE_DATA\n} from \"../../actions/actions\";\nimport {PhotosType, PostsType, ProfileType} from \"../../types/@types\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    profile: [] as Array<ProfileType> | null,\n    status: '',\n    posts: [\n        {id: 1, message: 'Hi, how are you', likeCount: 50},\n        {id: 2, message: 'It`s my first post', likeCount: 40},\n        {id: 3, message: 'Hi, how are you', likeCount: 30},\n        {id: 4, message: 'How are you', likeCount: 20},\n        {id: 5, message: 'Hi', likeCount: 10},\n    ] as Array<PostsType>,\n    isLoading: false,\n    isFetchingStatus: false,\n};\n\nexport type ProfileInitialStateType = typeof initialState\nexport type ProfileActionsTypes = InferActionsType<typeof profileActions>\n\nconst profileReducer = (state = initialState, action: ProfileActionsTypes): ProfileInitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.payload,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost]\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.payload)\n            };\n        case SET_PROFILE_DATA:\n            return {\n                ...state,\n                profile: action.payload\n            };\n        case GET_STATUS:\n            return {\n                ...state,\n                status: action.payload\n            };\n        case IS_PROFILE_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_STATUS_FETCHING:\n            return {\n                ...state,\n                isFetchingStatus: action.payload\n            };\n        case SET_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.payload} as Array<ProfileType>\n                /* Refactoring later action type for this case */\n            };\n        default:\n            return state\n    }\n}\n\nexport const profileActions = {\n    addPostCreator: (value: string) => ({\n        type: ADD_POST,\n        payload: value\n    } as const),\n    deletePostCreator: (id: number) => ({\n        type: DELETE_POST,\n        payload: id\n    } as const),\n    setProfileData: (data: Array<ProfileType>) => ({\n        type: SET_PROFILE_DATA,\n        payload: data\n    } as const),\n    getStatus: (value: string) => ({\n        type: GET_STATUS,\n        payload: value\n    } as const),\n    setPhotoSuccess: (photos: PhotosType) => ({\n        type: SET_PHOTO_SUCCESS,\n        payload: photos\n    } as const),\n    toggleFetch: (bool: boolean) => ({\n        type: IS_PROFILE_FETCHING,\n        payload: bool\n    } as const),\n    toggleFetchStatus: (bool: boolean) => ({\n        type: IS_STATUS_FETCHING,\n        payload: bool\n    } as const)\n}\n\nexport default profileReducer\n","let initialState = {\n    friendList: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n    ],\n}\n\nexport type SidebarInitialStateType = typeof initialState\n\nconst sidebarReducer = (state = initialState, action: any): SidebarInitialStateType => {\n\n    return state\n}\n\nexport default sidebarReducer","export const UpdateObjectInArray = (items, itemID, objPropsName, newObjProps) => {\n    return items.map(user => {\n        if (user[objPropsName] === itemID) {\n            return {\n                ...user, ...newObjProps\n            }\n        }\n        return user\n    })\n}\n//Так это было в reducers\n// users: state.users.map(user => {\n//     if (user.id === action.payload) {\n//         return {\n//             ...user,\n//             followed: false\n//         }\n//     }\n//     return user\n// })","import {UpdateObjectInArray} from \"../../../utils/helpers/object-helpers\";\nimport {\n    FOLLOW,\n    IS_DISABLED_BTN,\n    IS_USER_FETCHING,\n    SET_PAGE,\n    SET_TOTAL_COUNT,\n    SET_USERS,\n    UNFOLLOW\n} from \"../../actions/actions\";\nimport {UserType} from \"../../types/@types\";\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 5,\n    totalCount: 400,\n    currentPage: 1,\n    isLoading: false,\n    isDisabledBtn: [] as Array<number>, // Array of users id\n};\n\nexport type UserInitialStateType = typeof initialState\nexport type UserActionsTypes = FollowActionType |\n    UnfollowActionType |\n    SetUserActionType |\n    SetPageActionType |\n    SetTotalCountActionType |\n    ToggleFetchActionType |\n    ToggleDisableBtnActionType\n\nconst usersReducer = (state = initialState, action: UserActionsTypes): UserInitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: false})\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.payload,\n            };\n        case SET_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload,\n            };\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.payload\n            };\n        case IS_USER_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_DISABLED_BTN:\n            return {\n                ...state,\n                isDisabledBtn: action.payload\n                    ? [...state.isDisabledBtn, action.userId]\n                    /* метод filter вернет нам новый массив, в котором удалит тот id, который мы передали */\n                    : state.isDisabledBtn.filter(id => id !== action.userId)\n            };\n        default:\n            return state\n    }\n}\n\ntype FollowActionType = {\n    type: typeof FOLLOW\n    payload: number\n}\nexport const follow = (userID: number): FollowActionType => ({\n    type: FOLLOW,\n    payload: userID\n})\n\ntype UnfollowActionType = {\n    type: typeof UNFOLLOW\n    payload: number\n}\nexport const unfollow = (userID: number): UnfollowActionType => ({\n    type: UNFOLLOW,\n    payload: userID\n})\n\ntype SetUserActionType = {\n    type: typeof SET_USERS\n    payload: Array<UserType>\n}\nexport const setUsers = (users: Array<UserType>): SetUserActionType => ({\n    type: SET_USERS,\n    payload: users\n})\n\ntype SetPageActionType = {\n    type: typeof SET_PAGE\n    payload: number\n}\nexport const setPage = (num: number): SetPageActionType => ({\n    type: SET_PAGE,\n    payload: num\n})\n\ntype SetTotalCountActionType = {\n    type: typeof SET_TOTAL_COUNT\n    payload: number\n}\nexport const setTotalCount = (num: number): SetTotalCountActionType => ({\n    type: SET_TOTAL_COUNT,\n    payload: num\n})\n\ntype ToggleFetchActionType = {\n    type: typeof IS_USER_FETCHING\n    payload: boolean\n}\nexport const toggleFetch = (bool: boolean): ToggleFetchActionType => ({\n    type: IS_USER_FETCHING,\n    payload: bool\n})\n\ntype ToggleDisableBtnActionType = {\n    type: typeof IS_DISABLED_BTN\n    payload: boolean\n    userId: number\n}\nexport const toggleDisabledBtn = (bool: boolean, id: number): ToggleDisableBtnActionType => ({\n    type: IS_DISABLED_BTN,\n    payload: bool,\n    userId: id,\n})\n\nexport default usersReducer\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profile/profileReducer\";\nimport dialogsReducer from \"./reducers/dialogs/dialogsReducer\";\nimport sidebarReducer from \"./reducers/sidebar/sidebarReducer\";\nimport usersReducer from \"./reducers/users/usersReducer\";\nimport authReducer from \"./reducers/auth/authReducer\";\nimport appReducer from \"./reducers/app/appReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form'\n\n/* Передаем в store с помощью combineReducers все Reducer который объеденит их в один */\nlet RootReducer = combineReducers({\n    app: appReducer,\n    profilePage: profileReducer,\n    dialogPage: dialogsReducer,\n    userPage: usersReducer,\n    sidebar: sidebarReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\ntype RootReducerType = typeof RootReducer;\n/* Создаем глобальный тип для state */\nexport type AppStateType = ReturnType<RootReducerType>\n\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\nexport type InferActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(RootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store\n","import React from 'react'\nimport classesItem from \"./Users.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst UsersItem = ({user, ...props}) => {\n    return (\n        <div className={classesItem.userInfoWrapper}>\n            <div>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img className={classesItem.infoWrapperImg}\n                             src={user.photos.small || 'https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'}\n                             alt=\"avatar\"/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ?\n                        <button\n                            className={`${classesItem.unFollowBtn} ${classesItem.userSubscribeBtn}`}\n                            onClick={() => props.setUnfollowHandler(user.id)}\n                            /* метод some вернет на true если id находится в массиве */\n                            disabled={props.isDisabled.some(id => id === user.id)}\n                        >Unfollow</button>\n                        :\n                        <button\n                            className={`${classesItem.followBtn} ${classesItem.userSubscribeBtn}`}\n                            /* метод some вернет на true если id находится в массиве */\n                            onClick={() => props.setFollowHandler(user.id)}\n                            disabled={props.isDisabled.some(id => id === user.id)}\n                        >Follow</button>}\n                </div>\n            </div>\n            <div className={classesItem.userInfoContainer}>\n                <div>\n                        <span className={classesItem.info}>User name:\n                            <p>{(user.name || undefined) ? user.name : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.info}>User status:\n                            <p>{(user.status || undefined) ? user.status : 'Not indicated'}</p>\n                        </span>\n                </div>\n                <div>\n                        <span className={classesItem.location}>Country:\n                            <p>{(user.location || undefined) ? user.location.country : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.location}>City:\n                            <p>{(user.location || undefined) ? user.location.city : 'Not indicated'}</p>\n                        </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersItem","export default __webpack_public_path__ + \"static/media/35.64407753.svg\";","import React from 'react'\nimport classes from \"./spinner.module.css\";\nimport spinner from '../../../assets/icons/35.svg'\n\n\nexport const Preloader = () => {\n    return (\n        <div className={classes.userLoading}>\n            <div className={classes.spinner}>\n                <img src={spinner} alt=\"spinner\"/>\n            </div>\n        </div>\n    )\n}","import classes from \"../Users.module.css\";\nimport React, {FC} from 'react';\nimport ReactPaginate from \"react-paginate\";\n\nimport UsersItem from \"../UserItem/UserItem\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport {UserType} from \"../../../store/types/@types\";\n// import Paginator from \"../../common/paginator/paginator\";\n\ntype PropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    pageSize: number\n    currentPage: number\n    isLoading: boolean\n    isDisabled: Array<number>\n    selectPage: (num: number) => void\n    setFollowHandler: (id: number) => void\n    setUnfollowHandler: (id: number) => void\n}\n\nconst Users: FC<PropsType> = (\n    {\n        usersPage = [], totalCount, pageSize, currentPage, isLoading,\n        isDisabled, selectPage, setFollowHandler, setUnfollowHandler\n    }\n) => {\n\n    const pagesCount = Math.ceil(totalCount / pageSize)\n\n    let userItem = usersPage.map(uData => (\n            <UsersItem user={uData}\n                       setUnfollowHandler={(id: number) => setUnfollowHandler(id)}\n                       setFollowHandler={(id: number) => setFollowHandler(id)}\n                       isDisabled={isDisabled}\n                       key={uData.id}/>\n        )\n    )\n\n\n    return (\n        <div className={classes.usersContainer}>\n            <h2>Users</h2>\n            <div className={classes.usersField}>\n                <div className={classes.usersItems}>\n                    <ReactPaginate\n                        previousLabel={\"<\"}\n                        nextLabel={\">\"}\n                        breakLabel={'~'}\n                        pageCount={pagesCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={3}\n                        onPageChange={(e) => selectPage(e.selected + 1)}\n                        containerClassName={classes.reactPaginate}\n                        activeClassName={classes.reactPaginationBtn}\n                    />\n                    {isLoading ? <Preloader/> : <div>{userItem}</div>}\n                    {/*If we want use custom pagination, use template below*/}\n                    {/*<Paginator*/}\n                    {/*    totalItemsCount={totalCount}*/}\n                    {/*    pageSize={pageSize}*/}\n                    {/*    currentPage={currentPage}*/}\n                    {/*    isLoading={isLoading}*/}\n                    {/*    selectPage={selectPage}*/}\n                    {/*/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import {UserType} from \"../store/types/@types\";\nimport {instance} from \"./instance-api\";\n\ntype GetUserAPIType = {\n    items: Array<UserType>,\n    totalCount: number,\n    error: null | string\n}\n\nexport const usersAPI = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance\n            .get<GetUserAPIType>(`/users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    setFollow(id: number) {\n        return instance\n            .post<ResponseType>(`/follow/${id}`, null)\n            .then(response => {\n                return response.data\n            })\n    },\n    setUnfollow(id: number) {\n        return instance\n            .delete<ResponseType>(`/follow/${id}`)\n            .then(response => {\n                return response.data\n            })\n    }\n}\n","import {\n    follow,\n    setPage,\n    setTotalCount,\n    setUsers,\n    toggleDisabledBtn,\n    toggleFetch,\n    unfollow, UserActionsTypes\n} from \"../../reducers/users/usersReducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../../store\";\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../../../api/user-api\";\nimport {ResultCodesEnum} from \"../../../api/instance-api\";\n\n\ntype ThunkAction_UserTypes = ThunkAction<Promise<void>, AppStateType, unknown, UserActionsTypes>\n\nexport const getUsersThunkCreator = (currentPage: number = 1, pageSize: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        dispatch(toggleFetch(true))\n        /* Мы сделали инкапсуляцию axios метода в файл api */\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(setUsers(data.items))\n        dispatch(setTotalCount(data.totalCount))\n        dispatch(toggleFetch(false))\n    }\n\nexport const getPageThunkCreator = (num: number, pageSize: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        dispatch(setPage(num))\n        dispatch(toggleFetch(true))\n        /* Мы сделали инкапсуляцию axios метода в файл api */\n        let data = await usersAPI.getUsers(num, pageSize)\n        dispatch(setUsers(data.items))\n        dispatch(toggleFetch(false))\n    }\n\nconst _follow_unfollow_flow = async (dispatch: Dispatch<UserActionsTypes>, userId: number,\n                                     apiMethod: any, actionCreator: (userId: number) => UserActionsTypes) => {\n    dispatch(toggleDisabledBtn(true, userId))\n    const response = await apiMethod(userId)\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        dispatch(actionCreator(userId))\n        dispatch(toggleDisabledBtn(false, userId))\n    } else {\n        console.log('Error AXIOS', response.messages)\n    }\n}\n\nexport const setFollowThunkCreator = (id: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setFollow, follow)\n    }\n\nexport const setUnfollowThunkCreator = (id: number): ThunkAction_UserTypes =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setUnfollow, unfollow)\n    }\n","import {AppStateType} from \"../../store\";\n\nexport const getUsersSelector = (state: AppStateType) => {\n    return state.userPage.users\n}\n\nexport const getPageSizeSelector = (state: AppStateType) => {\n    return state.userPage.pageSize\n}\n\nexport const getUsersLengthSelector = (state: AppStateType) => {\n    return state.userPage.totalCount\n}\n\nexport const getCurrantPageSelector = (state: AppStateType) => {\n    return state.userPage.currentPage\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.userPage.isLoading\n}\n\nexport const isUnUseBtnSelector = (state: AppStateType) => {\n    return state.userPage.isDisabledBtn\n}\n\n/*\n * future, create this selector, he must work with all simple selectors\n * and into switch/case return all and new value from state (maybe useSelector)\n*/\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport React from \"react\";\n\nimport Users from \"./UsersLayout/Users\";\nimport {\n    getPageThunkCreator, getUsersThunkCreator,\n    setFollowThunkCreator, setUnfollowThunkCreator\n} from \"../../store/thunk/users/usersThunk\";\nimport {\n    checkLoadingSelector, getCurrantPageSelector, getPageSizeSelector,\n    getUsersLengthSelector, getUsersSelector, isUnUseBtnSelector\n} from \"../../store/selectors/users/usersSelectors\";\nimport {UserType} from \"../../store/types/@types\";\nimport {AppStateType} from \"../../store/store\";\n\ntype MapStateToPropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    isLoading: boolean\n    isDisabledBtn: Array<number>\n}\ntype MapDispatchToPropsType = {\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    getPageThunkCreator: (num: number, pageSize: number) => void\n    setFollowThunkCreator: (id: number) => void\n    setUnfollowThunkCreator: (id: number) => void\n}\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.getUsersThunkCreator(1, this.props.pageSize)\n    }\n\n    setFollowHandler = (id: number) => {\n        /* Мы перенесли всю логику в thunkCreator */\n        this.props.setFollowThunkCreator(id)\n    }\n    setUnfollowHandler = (id: number) => {\n        this.props.setUnfollowThunkCreator(id)\n    }\n    selectPage = (num: number) => {\n        const {pageSize} = this.props\n        this.props.getPageThunkCreator(num, pageSize)\n    }\n\n    render() {\n        return (\n            <Users\n                usersPage={this.props.usersPage}\n                totalCount={this.props.totalCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                isLoading={this.props.isLoading}\n                isDisabled={this.props.isDisabledBtn}\n\n                selectPage={(num) => this.selectPage(num)}\n                setFollowHandler={(id) => this.setFollowHandler(id)}\n                setUnfollowHandler={(id) => this.setUnfollowHandler(id)}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        usersPage: getUsersSelector(state),\n        pageSize: getPageSizeSelector(state),\n        totalCount: getUsersLengthSelector(state),\n        currentPage: getCurrantPageSelector(state),\n        isLoading: checkLoadingSelector(state),\n        isDisabledBtn: isUnUseBtnSelector(state),\n    }\n}\n\nexport default compose(\n    //TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState это типы для generic type\n    connect<MapStateToPropsType, MapDispatchToPropsType, any, AppStateType>(mapStateToProps, {\n        getUsersThunkCreator, getPageThunkCreator,\n        setFollowThunkCreator, setUnfollowThunkCreator\n    })\n)(UsersContainer)\n\n/* Вместо mapDispatchToProps мы передаем в connect объект action/thunk creators\n * чтобы сократить код до современного синтаксиса,\n * функция connect сама обернет dispatch в callback's\n *\n * // тоже самое :\n * const mapDispatchToProps = (dispatch) => {\n *     return {\n *         setFollow: (userID) => {\n *             dispatch(followAC(userID))\n *         },\n *         setUnfollow: (userID) => {\n *             dispatch(unfollowAC(userID))\n *         },\n *         setUsers: (users) => {\n *             dispatch(setUsersAC(users))\n *         },\n *         setPage: (num) => {\n *             dispatch(setPageAC(num))\n *         },\n *         setTotalCount: (num) => {\n *             dispatch(setTotalCountAC(num))\n *         },\n *         toggleFetch: (bool) => {\n *             dispatch(toggleFetchAC(bool))\n *         }\n *     }\n * }\n *\n * setFollowHandler = (id) => {\n *     //Мы перенесли всю логику в thunkCreator\n *     this.props.setFollowThunkCreator(id)\n *     this.props.toggleDisabledBtn(true, id)\n *     //Мы сделали инкапсуляцию axios метода в файл api\n *     usersAPI.setFollow(id).then(data => {\n *         if (data.resultCode === 0) {\n *             this.props.follow(id)\n *             console.log('Follow', data)\n *             this.props.toggleDisabledBtn(false, id)\n *         } else {\n *             console.log('Error AXIOS', data)\n *         }\n *     })\n * }\n */","export default __webpack_public_path__ + \"static/media/294.a1c83cdc.svg\";","import React from 'react'\nimport loading from '../../../assets/icons/294.svg'\n\n\nexport const Loader = () => {\n    return (\n        <div>\n            <img src={loading} width=\"100px\" alt=\"loading\"/>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport classes from \"../ProfileInfo.module.css\";\nimport {Loader} from \"../../../common/preloader/loading\";\n\nconst ProfileStatus = ({statusData, saveStatus, isOwner, loading}) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(statusData)\n\n    const onEditMode = () => setEditMode(isOwner)\n    const offEditMode = () => setEditMode(false)\n\n    const addStatus = () => {\n        setEditMode(false)\n        saveStatus(status)\n    }\n\n    const updateTextStatus = (e) => setStatus(e.target.value)\n\n    useEffect(() => {\n        setStatus(statusData)\n    }, [statusData])\n\n    return (\n        <div className={classes.statusBlock}>\n            {!editMode\n                ? <div className={classes.statusDescr} onClick={onEditMode}>\n                    {loading\n                        ? <Loader/>\n                        : <p>{statusData || 'Not indicated'}</p>\n                    }\n                </div>\n                :\n                <div className={classes.statusDescr}>\n                    <div>\n                        <input onChange={updateTextStatus} type='text' autoFocus={true} placeholder='Change status'\n                               value={status}/>\n                    </div>\n                    <br/>\n                    <div>\n                        {status.length > 100 ? <div>Status length must be less 100 letters</div> : null}\n                    </div>\n                    <div>\n                        <button type='submit'\n                                disabled={status.length > 100}\n                                className={classes.changeStatusBtn}\n                                onClick={addStatus}>Change\n                        </button>\n                        <button type='button' className={classes.cancelStatusBtn} onClick={offEditMode}>Cancel</button>\n                    </div>\n                </div>\n            }\n            <div className={classes.bubble2}/>\n            <div className={classes.bubble1}/>\n        </div>\n    )\n}\n\nexport default ProfileStatus","import React from 'react';\nimport classes from \"../ProfileInfo.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst ProfileData = ({profile, contacts, isOwner}) => {\n\n    return (\n        <div className={classes.userInfoBlock}>\n            <div className={classes.aboutMe}>\n                <p className={classes.aboutMeTitle}>About me:</p>\n                <p>{profile.aboutMe || 'Not indicated'}</p>\n            </div>\n            <div className={classes.linkBlock}>\n                {contacts && Object.keys(contacts).map(key => {\n                    return <Contact key={key} title={key} value={contacts[key]}/>\n                })}\n            </div>\n            {isOwner\n                ? <NavLink to={'/setting'}>\n                    <button className={classes.editInfoBtn}>Edit info</button>\n                </NavLink>\n                : null}\n        </div>\n    )\n}\n\nconst Contact = ({title, value}) => {\n    return value ? <a href={value} target='_blank' rel=\"noreferrer\">{title}</a> : null\n}\n\nexport default ProfileData","import React from \"react\";\nimport classes from \"../ProfileInfo.module.css\";\n\nconst ProfileJob = ({profile}) => {\n    return (\n        <div className={classes.jobBlock}>\n            {!profile.lookingForAJob\n                ? <div/>\n                : <div className={classes.jobDescr}>\n                    <div>{profile.lookingForAJobDescription}</div>\n                </div>}\n            <div className={classes.openJobStatus}>\n                <p>Open for job<span>&nbsp;</span></p>\n                {profile.lookingForAJob\n                    ? <div className={classes.circleIndicatorActive}/>\n                    : <div className={classes.circleIndicatorNot}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileJob","import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ProfileJob from \"./ProfileJob/ProfileJobData\";\n\n\nconst ProfileInfo = ({saveNewPhoto, profile, status, updateStatus, isOwner, contacts, isLoading, isFetchingStatus}) => {\n\n    const onPhotoSelected = (e) => {\n        console.log(e)\n        if (e.target.files.length) {\n            saveNewPhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <div>\n            <div className={classes.head}>\n            </div>\n            <div className={classes.wrapper}>\n                <div className={classes.mediaBlock}>\n                    <div className={classes.photosBlock}>\n                        {!profile.photos || isLoading\n                            ? <Preloader/>\n                            : <img\n                                src={profile.photos.large || 'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'}\n                                alt=\"ava\"/>}\n                    </div>\n                    <ProfileStatus statusData={status} saveStatus={updateStatus}\n                                   isOwner={isOwner} loading={isFetchingStatus}/>\n                </div>\n\n                <div className={classes.infoBlock}>\n                    <div className={classes.nameBlock}>\n                        {isOwner\n                            ? <label className={isLoading ? classes.changePhotosDis : classes.changePhotos}>\n                                <input type={'file'} onChange={onPhotoSelected} disabled={isLoading}/>\n                                Change Photos\n                            </label>\n                            : null}\n                        <h4 className={classes.user_nameBlock}>{profile.fullName}</h4>\n                    </div>\n                    <ProfileData profile={profile} contacts={contacts} isOwner={isOwner}/>\n                    <ProfileJob profile={profile}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo\n\n//'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'\n","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../common/textarea/textarea\";\nimport {maxLength, minValue, required} from \"../../../../utils/validators/validator\";\n\nconst maxLength200 = maxLength(200)\nconst minValue1 = minValue(1)\n\n\nconst PostForm = (props) => {\n    const { handleSubmit, reset } = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name={'body'}\n                       type='text'\n                       placeholder={'Add new post'}\n                       validate={[required, maxLength200, minValue1]}\n                />\n            </div>\n            <div>\n                <button onClick={()=> setTimeout(reset, 0)}>Send message</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({\n    form: 'post',\n})(PostForm)\n\nexport default PostReduxForm","import classes from \"./Post.module.css\";\nimport React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <div className={classes.ava_wrapper}>\n                <img className={classes.ava_item}\n                    src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                    alt=\"avatar\"/>\n            </div>\n            <div className={classes.body_wrapper}>\n                <p className={classes.post_body_item}>{props.message}</p>\n            </div>\n            <div className={classes.like_wrapper}>\n                <div className={classes.like_item}>likes {props.likeCount}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from \"react\";\nimport classes from '../Posts.module.css';\nimport PostReduxForm from \"../PostsForm/PostForm\";\nimport Post from \"../PostsItem/Post\";\n\n/* Мы используем memo, чтобы не происходило лишних отрисовок если пропсы не поменялись */\nconst Posts = React.memo((props) => {\n    /* Мы используем reverse к копии массива постов, так как этот метод мутирующего типа */\n    const postsElement = [...props.posts].reverse().map(pData => <Post message={pData.message}\n                                                                       likeCount={pData.likeCount}\n                                                                       key={pData.id}/>)\n\n    const addPost = (value) => {\n        props.createPost(value.body)\n    }\n\n    return (\n        <div className={classes.postField}>\n            <h3>My posts</h3>\n            <div>\n                <PostReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={classes.postsBlock}>\n                {postsElement}\n            </div>\n        </div>\n    );\n})\n\nexport default Posts","import Posts from \"./PostsLayout/Posts\";\nimport {connect} from \"react-redux\";\nimport {profileActions} from \"../../../store/reducers/profile/profileReducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (value) => {\n            dispatch(profileActions.addPostCreator(value));\n        },\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer\n","import React from \"react\";\nimport ProfileInfo from \"../ProfileInfo/PtofileInfo\";\nimport classes from \"../Profile.module.css\"\nimport PostsContainer from \"../Posts/PostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.profileContainer}>\n            <ProfileInfo profile={props.profile}\n                         contacts={props.contacts}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         isOwner={props.isOwner}\n                         saveNewPhoto={props.saveNewPhoto}\n                         isLoading={props.isLoading}\n                         isFetchingStatus={props.isFetchingStatus}\n            />\n            <PostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile","import {PhotosType, ProfileType,} from \"../store/types/@types\";\nimport {instance} from \"./instance-api\";\nimport {ResponseType} from \"../store/types/@types\";\n\ntype PhotosResponseDataType = {\n    photos: PhotosType\n}\nexport const profileAPI = {\n    getProfile(id: number) {\n        return instance\n            .get<Array<ProfileType>>(`/profile/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    getStatusProfile(id: number) {\n        return instance\n            .get<string>(`/profile/status/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    setStatus(newStatus: string) {\n        return instance\n            .put<ResponseType>('/profile/status', {status: newStatus})\n    },\n    savePhoto(file: Blob) {\n        let formData = new FormData()\n        formData.append('image', file)\n        return instance\n            .put<ResponseType<PhotosResponseDataType>>('/profile/photo', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            .then(response => {\n                return response.data\n            })\n    },\n    saveProfile(data: ProfileType) {\n        return instance\n            .put<ResponseType<ProfileType>>('/profile', data)\n            .then(response => {\n                return response.data\n            })\n    }\n}\n\n","import {\n    profileActions,\n    ProfileActionsTypes,\n} from \"../../reducers/profile/profileReducer\";\nimport {stopSubmit} from \"redux-form\";\nimport {ProfileType} from \"../../types/@types\";\nimport {AppStateType} from \"../../store\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {profileAPI} from \"../../../api/profile-api\";\nimport {ResultCodesEnum} from \"../../../api/instance-api\";\n\ntype ThunkAction_ProfileTypes = ThunkAction<Promise<void>, AppStateType, unknown, ProfileActionsTypes>\n\nexport const getProfileThunkCreator = (id: number): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetch(true))\n        let dataProfile = await profileAPI.getProfile(id)\n        dispatch(profileActions.setProfileData(dataProfile))\n        dispatch(profileActions.toggleFetch(false))\n    }\n\nexport const getStatusThunkCreator = (id: number): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetchStatus(true))\n        let dataStatus = await profileAPI.getStatusProfile(id)\n        dispatch(profileActions.getStatus(dataStatus))\n        dispatch(profileActions.toggleFetchStatus(false))\n    }\n\nexport const setStatusThunkCreator = (status: string): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        try {\n            dispatch(profileActions.toggleFetchStatus(true))\n            let response = await profileAPI.setStatus(status)\n            if (response.data.resultCode === ResultCodesEnum.SUCCESS) {\n                dispatch(profileActions.getStatus(status))\n                dispatch(profileActions.toggleFetchStatus(false))\n            }\n        } catch (err) {\n            alert(err)\n        }\n    }\nexport const saveNewPhotoThunkCreator = (file: Blob): ThunkAction_ProfileTypes =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetch(true))\n        let response = await profileAPI.savePhoto(file)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(profileActions.setPhotoSuccess(response.data.photos))\n            dispatch(profileActions.toggleFetch(false))\n        }\n    }\n\nexport const saveProfileThunkCreator = (data: ProfileType): ThunkAction_ProfileTypes =>\n    async (dispatch, getState) => {\n        dispatch(profileActions.toggleFetch(true))\n        const userId = getState().auth.userId as number\n        let response = await profileAPI.saveProfile(data)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            await dispatch(getProfileThunkCreator(userId))\n            dispatch(profileActions.toggleFetch(false))\n        } else {\n            dispatch(profileActions.toggleFetch(false))\n            dispatch(stopSubmit('newProfileData', {_error: response.messages}))\n        }\n    }\n","import {AppStateType} from \"../../store\";\n\nexport const getProfileSelector = (state: AppStateType) => {\n    return state.profilePage.profile\n}\n\nexport const getStatusSelector = (state: AppStateType) => {\n    return state.profilePage.status\n}\n\nexport const getUserIdSelector = (state: AppStateType) => {\n    return state.auth.userId\n}\n\nexport const checkAuthSelector = (state: AppStateType) => {\n    return state.auth.isAuth\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.profilePage.isLoading\n}\n\nexport const checkFetchingStatusSelector = (state: AppStateType) => {\n    return state.profilePage.isFetchingStatus\n}\n\n/*\n* future, create this selector, he must work with all simple selectors\n* and into switch/case return all and new value from state\n */\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import classes from \"./Profile.module.css\"\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nimport Profile from \"./ProfileLayout/Ptofile\";\nimport withAuthRedirect from \"../../utils/hoc/authRedirect\";\nimport {\n    getProfileThunkCreator, getStatusThunkCreator, saveNewPhotoThunkCreator,\n    setStatusThunkCreator\n} from \"../../store/thunk/profile/profileThunk\";\nimport {\n    checkAuthSelector, checkFetchingStatusSelector, checkLoadingSelector, getProfileSelector,\n    getStatusSelector, getUserIdSelector\n} from \"../../store/selectors/profile/profileSelectors\";\n\nclass ProfileContainer extends React.PureComponent {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authUserID\n            if(!userId){\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getStatusThunkCreator(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.profileContainer}>\n                <Profile {...this.props}\n                         isOwner={!this.props.match.params.userId}\n                         contacts={this.props.profile.contacts}\n                         updateStatus={this.props.setStatusThunkCreator}\n                         saveNewPhoto={this.props.saveNewPhotoThunkCreator}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    status: getStatusSelector(state),\n    authUserID: getUserIdSelector(state),\n    isAuth: checkAuthSelector(state),\n    isLoading: checkLoadingSelector(state),\n    isFetchingStatus: checkFetchingStatusSelector(state)\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        getProfileThunkCreator, setStatusThunkCreator,\n        getStatusThunkCreator, saveNewPhotoThunkCreator\n    }),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)\n\n/* Вызов всех эти обработчиков ниже мы заменили на одну функцию compose выше\n*\n* const withAuth = withAuthRedirect(ProfileContainer)\n* // Используем withRouter чтобы обернуть контейнерную компоненту\n* // в другую контейнерную компоненту и передать в нее данные состояния uri\n* const ProfileWithUrlData = withRouter(withAuth)\n*\n* export default connect(mapStateToProps, {\n*     getProfileThunkCreator,\n*     getStatusThunkCreator,\n* })(ProfileWithUrlData)\n*/","import React from 'react'\nimport {maxLength, minValue} from \"../../../utils/validators/validator\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/textarea/textarea\";\nimport {InputBase} from \"../../common/input/input\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport classes from \"../Setting.module.css\";\n\n\nconst maxLength300 = maxLength(300)\nconst maxLength50 = maxLength(50)\nconst maxLength20 = maxLength(20)\nconst minValue1 = minValue(1)\n\nconst ProfileDataForm = (props) => {\n\n    const {handleSubmit, submitting, error} = props\n    return (\n        <form onSubmit={handleSubmit} className={classes.settingsWrapper}>\n            <div className={classes.form_wrapper}>\n                <div className={classes.aboutMe_block}>\n                    <h4>About me:</h4>\n                    <Field component={Textarea}\n                           name={'aboutMe'}\n                           type='text'\n                           placeholder={'Write about your'}\n                           validate={[maxLength300, minValue1]}\n                    />\n                    <h4>Full Name</h4>\n                    <Field component={InputBase}\n                           name={'fullName'}\n                           type='text'\n                           placeholder={'Full name'}\n                           validate={[maxLength20, minValue1]}\n                    />\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.job_block}>\n                    <h4>Job information:</h4>\n                    <Field component={Textarea}\n                           name={'lookingForAJobDescription'}\n                           type='text'\n                           placeholder={'Description for job'}\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <span>Open for job&nbsp;</span>\n                    <Field component={'input'}\n                           name={'lookingForAJob'}\n                           type=\"checkbox\"/>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contacts_block}>\n                    <h4>Contacts:</h4>\n                    <div className={classes.contacts_fields}>\n                        <p>Facebook:</p>\n                        <Field component={InputBase}\n                               name={'contacts.facebook'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Website:</p>\n                        <Field component={InputBase}\n                               name={'contacts.website'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>VK:</p>\n                        <Field component={InputBase}\n                               name={'contacts.vk'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Twitter:</p>\n                        <Field component={InputBase}\n                               name={'contacts.twitter'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Instagram:</p>\n                        <Field component={InputBase}\n                               name={'contacts.instagram'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>YouTube:</p>\n                        <Field component={InputBase}\n                               name={'contacts.youtube'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>GitHub:</p>\n                        <Field component={InputBase}\n                               name={'contacts.github'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>MainLink:</p>\n                        <Field component={InputBase}\n                               name={'contacts.mainLink'}\n                               type='text'\n                               placeholder={'https://'}\n                               validate={[maxLength50, minValue1]}\n                        />\n                    </div>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.btn_saveAll}>\n                <button type=\"submit\"\n                        disabled={submitting}>Save All\n                </button>\n            </div>\n            {error ? <div>{error}</div> : null}\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm(\n    {\n        form: 'newProfileData',\n    }\n)(ProfileDataForm)\n\nconst ProfileDataEdit = ({saveProfile, profile, isLoading}) => {\n    /*\n    * Для полей contacts мы в качестве названия используем 'contacts.Name'\n    * Чтобы внутри formData, создался объект contacts. И value для этих полей отображался\n    */\n    const onSubmit = (formData) => {\n        saveProfile(formData)\n    }\n\n    return (\n        <div className={classes.settingsField}>\n            <ProfileDataReduxForm\n                onSubmit={onSubmit}\n                initialValues={profile}\n                isLoading={isLoading}\n            />\n            {isLoading\n                ? <div>\n                    <Preloader/>\n                </div>\n                : null}\n        </div>\n    )\n}\n\nexport default ProfileDataEdit","import React from \"react\";\nimport classes from \"./Setting.module.css\"\nimport ProfileDataEdit from \"./ProfileEdit/InfoBlockForm\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {saveProfileThunkCreator} from \"../../store/thunk/profile/profileThunk\";\nimport {checkLoadingSelector, getProfileSelector} from \"../../store/selectors/profile/profileSelectors\";\n\nconst Setting = ({...props}) => {\n    const saveProfile = (data) => {\n        props.saveProfileThunkCreator(data)\n    }\n    return (\n        <div className={classes.settingContainer}>\n            <h2>Setting</h2>\n            <ProfileDataEdit\n                profile={props.profile}\n                isLoading={props.isLoading}\n                saveProfile={saveProfile}\n            />\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    isLoading: checkLoadingSelector(state),\n})\n\n\nexport default compose(connect(mapStateToProps, {saveProfileThunkCreator}))(Setting)","export default __webpack_public_path__ + \"static/media/logo.30954a56.svg\";","import React from \"react\";\nimport classes from '../Header.module.css';\nimport logo from \"../../../assets/logo/logo.svg\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <div className={classes.headerWrapper}>\n            <header className={classes.mediaBlock}>\n                <img src={logo} alt=\"logo\"/>\n                <h2>Social App</h2>\n            </header>\n            <div className={classes.loginBlock}>\n                <NavLink to={'/profile'}>\n                    {props.isAuth ? <div className={classes.userName}>{props.login}</div> : null}\n                </NavLink>\n                {props.isAuth\n                    ? <button className={classes.authBtn} onClick={props.signOut}>LOGOUT</button>\n                    : <NavLink to={'/login'}>\n                        <button className={classes.authBtn}>LOGIN</button>\n                    </NavLink>\n                }\n            </div>\n        </div>\n    )\n}\nexport default Header","import React from \"react\";\nimport Header from \"./HeaderLayout/Header\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {signOutThunkCreator} from \"../../store/thunk/auth/authThunk\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return (\n            <Header {...this.props}\n                    signOut={this.props.signOutThunkCreator}\n            />\n        )\n    }\n}\n\n/* Функция которая из state передает props внутрь компоненты */\nconst mapStateToProps = (state) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, {signOutThunkCreator})\n)(HeaderContainer)\n","import React from \"react\";\nimport classes from '../Sidebar.module.css';\n\nconst SidebarFriends = (props) => {\n    return (\n        <div className={classes.item}>\n            <img\n                src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                alt=\"avatar\" />\n            <p>{props.name}</p>\n        </div>\n    )\n}\n\nexport default SidebarFriends","import React from \"react\";\nimport classes from '../Sidebar.module.css';\nimport SidebarFriends from '../SidebarItem/sidebarFriends'\n\n\nconst Sidebar = (props) => {\n    const friendItem = props.sidebar.friendList.map(uData => <SidebarFriends name={uData.name} key={uData.id}/>)\n\n    return (\n        <div className={classes.container}>\n            {friendItem}\n        </div>\n    )\n}\nexport default Sidebar","import Sidebar from \"./SidebarLayout/Sidebar\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        sidebar: state.sidebar\n    }\n}\n\nconst SidebarContainer = connect(mapStateToProps)(Sidebar)\n\nexport default SidebarContainer","import React from \"react\";\nimport classes from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport SidebarContainer from \"../Sidebar/SidebarContainer\";\n\n\nconst NavBar = (props) => {\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/dialogs'>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/setting'>Setting</NavLink>\n            </div>\n            <SidebarContainer/>\n        </nav>\n    )\n}\nexport default NavBar","import React, {Suspense} from 'react'\nimport {Preloader} from \"../../components/common/preloader/spinner\";\n\nconst withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </Suspense>\n        )\n    }\n}\n\nexport default withSuspense","import React from \"react\";\nimport classes from './StartPage.module.css'\n\nconst StartPage = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.header}>\n                <h2 className={classes.headerGreeting}>Thank you for visiting.</h2>\n                <h4 className={classes.headerLogin}>Login : <span>free@samuraijs.com</span></h4>\n                <h4 className={classes.headerPass}>Password : <span>free</span></h4>\n            </div>\n            <div className={classes.disclaimer}>\n                <h3 className={classes.disclaimerTitle}>DISCLAIMER</h3>\n                <p className={classes.disclaimerDescr}>\n                    <b>In Safari now not working authorized use other browser, sorry.</b><br/>\n                    This is my template for SPA (Single Page Application). He has not complete functionality,\n                    but give you opportunity to see how at work. On this application i use GitHub Pages.\n                    For correct reloading page i use HashRouter. In order not to download full application i\n                    use Lazy Loading (React.Suspense, React.Lazy). This application support ReduxDevTools,\n                    you can see state and all dispatch working process.\n                </p>\n            </div>\n            <div className={classes.stack}>\n                <ul className={classes.stackList}>\n                    <h3 className={classes.stackTitile}>Stack technology:</h3>\n                    <li className={classes.stackItemTitle}>\n                        <h4>UI/UX (User interface)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            React (Class component and Function component, Life cycle methods, Hooks, HOC)\n                        </li>\n                        <li className={classes.stackItem}>\n                            CSS (CSS modules)\n                        </li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>BLL (Business logic layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Redux-Thunk (In future Redux-Saga)</li>\n                        <li className={classes.stackItem}>Redux-Form (Custom Fields)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>DAL (Data access layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Rest API :&nbsp;\n                            <a href=\"https://social-network.samuraijs.com/docs#\">\n                                https://social-network.samuraijs.com/docs#</a>\n                        </li>\n                        <li className={classes.stackItem}>AXIOS (Promise and Async/Await)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>Testing</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            Jestjs.io\n                        </li>\n                    </ul>\n                </ul>\n                <div className={classes.opportunities}>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can</h4>\n                        <li className={classes.opportunitiesItemCan}>\n                            Login / Logout - if you not authorized you can't visited Profile Page and Messages Page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you avatar image - for faster work use small weight file.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you status - on page other user in function blocked.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change information for you profile - redirect on settings page (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Add information if you open for job (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new post - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new messages - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Looking other user - all users is live person.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Enter on other user page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            You can follow/unfollow users.\n                        </li>\n                    </ul>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can't</h4>\n                        <li className={classes.opportunitiesItem}>\n                            Registration in application.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change password.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change information on not owner page.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Look all following user.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Search user.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default StartPage","import './App.css';\nimport React from 'react';\nimport {\n    // BrowserRouter,\n    HashRouter,\n    Route,\n    withRouter\n} from \"react-router-dom\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {InitializeApp} from \"./store/thunk/app/initThunk\";\nimport store from \"./store/store\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/PtofileContainer\";\nimport Setting from \"./components/Setting/Setting\";\nimport {Preloader} from \"./components/common/preloader/spinner\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport withSuspense from \"./utils/hoc/lazyComponent\";\nimport StartPage from \"./components/Start Component/StartPage\";\nimport {Switch} from \"react-router\";\n\n/* Add lazy loading for not base component */\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst DialogContainer = React.lazy(() => import('./components/Dialogs/DialogContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\n\nclass App extends React.Component {\n    catchAllUnhandledError = (reason, promise) => {\n        alert('Some error occurred')\n        console.error(promise, reason)\n    }\n\n    componentDidMount() {\n        this.props.InitializeApp()\n        window.addEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    render() {\n        if (!this.props.init) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route\n                            /*\n                            * Указываем не обязательный параметр :userId?\n                            * чтобы если не '/profile', передать в state данные о uri строке\n                            */\n                            path='/profile/:userId?'\n                            render={() => <ProfileContainer/>}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={withSuspense(Login)}/>\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogContainer)}/>\n                        <Route path='/news'\n                               render={withSuspense(News)}/>\n                        <Route path='/music'\n                               render={withSuspense(Music)}/>\n                        <Route path='/setting'\n                               render={withSuspense(Setting)}/>\n                        <Route exact path='/'\n                               render={() => <StartPage/>}/>\n                        <Route path='*'\n                               render={() => <div>404 Not Founded</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    init: state.app.initialized\n})\n\n/*  Делаем контейнерную компоненту для App, чтобы можно было протестировать ее отрисовку через test */\nconst SocialAppContainer = compose(\n    connect(mapStateToProps, {InitializeApp}),\n    /*\n    * Мы обернули компоненту дополнительно withRoute,\n    * так как при использовании Route с классовыми компонентами,\n    * Route может работать не корректно\n    */\n    withRouter\n)(App);\n\nconst SocialApp = () => {\n    return (\n        /* Use HashRouter for gh-pages */\n        <HashRouter>\n            {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\n            <Provider store={store}>\n                <SocialAppContainer/>\n            </Provider>\n            {/*</BrowserRouter>*/}\n        </HashRouter>\n    )\n}\n\nexport default SocialApp","import {checkAuthThunkCreator} from \"../auth/authThunk\";\nimport {appActions} from \"../../reducers/app/appReducer\";\n\nexport const InitializeApp = () => (dispatch: any) => {\n    let promiseAuth = dispatch(checkAuthThunkCreator())\n\n    Promise.all([promiseAuth])\n        .then(() => {\n            dispatch(appActions.InitializeSuccess())\n        })\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport SocialApp from \"./App\";\n\nReactDOM.render(\n    <SocialApp/>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react'\nimport classes from './input.module.css'\n\n// export const InputLight = ({input, meta: {touched, error}, ...props}) => {\n//     return (\n//         <div>\n//             <div>\n//                 <input {...input} {...props}/>\n//             </div>\n//             {touched &&\n//             ((error && <div className={classes.error_msg_light}>{error}</div>))}\n//         </div>\n//\n//     )\n// }\n\ntype ComponentProps = {\n    input: JSX.Element\n    meta: {\n        touched: boolean\n        error: string\n    }\n    props: React.ReactNode\n}\n\ntype InputCreateType = (params: ComponentProps) => void\n\nexport const InputBase: InputCreateType = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const LoginInput: InputCreateType = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='text' placeholder='Login'\n                       className={(touched && error) ? classes.error_input : ''}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n\nexport const PasswordInput: InputCreateType = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='password' placeholder='Password'\n                       className={(touched && error) ? classes.error_input : ''}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n","export type ValidateTypes = (value: string) => string | undefined\n\nexport const required: ValidateTypes = (value) => (value ? undefined : 'Required')\n\nexport const maxLength = (max: number): ValidateTypes => (value) =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\n\nexport const minLength = (min: number): ValidateTypes => (value) =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\n\nexport const minValue = (min: number): ValidateTypes => (value) =>\n    value && value.length < min ? `Must be at least ${min}` : undefined\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__CDI8g\",\"ava_wrapper\":\"Post_ava_wrapper__2wRuV\",\"ava_item\":\"Post_ava_item__1V1Sk\",\"body_wrapper\":\"Post_body_wrapper__2qi5o\",\"post_body_item\":\"Post_post_body_item__3AFMu\",\"like_wrapper\":\"Post_like_wrapper__3OBgG\",\"like_item\":\"Post_like_item__1bLVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__1oKyh\",\"mediaBlock\":\"Header_mediaBlock__3QNG4\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"userName\":\"Header_userName__2h_yj\",\"authBtn\":\"Header_authBtn__1ELyC\"};","import {GET_CAPTCHA, SET_AUTH_DATA} from \"../../actions/actions\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    userId: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    isLoading: false,\n    captcha: null as string | null\n};\n\nexport type AuthInitialStateType = typeof initialState;\nexport type AuthActionsTypes = InferActionsType<typeof authActions>\n\n/* Need add typification for action */\nconst authReducer = (state = initialState, action: AuthActionsTypes): AuthInitialStateType => {\n    switch (action.type) {\n        case SET_AUTH_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: !state.isAuth\n            };\n        case GET_CAPTCHA:\n            return {\n                ...state,\n                captcha: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport const authActions = {\n    setAuthData: (userId: number | null, email: string | null, login: string | null) => ({\n        type: SET_AUTH_DATA,\n        payload: {userId, email, login}\n    } as const),\n    getCaptcha: (url: string) => ({\n        type: GET_CAPTCHA,\n        payload: url\n    } as const)\n\n}\n\nexport default authReducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1OedU\",\"usersField\":\"Users_usersField__13PIe\",\"usersItems\":\"Users_usersItems__3D9Hj\",\"reactPaginate\":\"Users_reactPaginate__2Tm98\",\"reactPaginationBtn\":\"Users_reactPaginationBtn__3fV12\",\"pagination\":\"Users_pagination__2Njh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"input_error_input__27_o3\",\"error_msg_light\":\"input_error_msg_light__DlyGg\",\"error_msg\":\"input_error_msg__11WSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StartPage_wrapper__3FcH6\",\"header\":\"StartPage_header__16P69\",\"headerGreeting\":\"StartPage_headerGreeting__2DjNg\",\"disclaimer\":\"StartPage_disclaimer__1s4bg\",\"disclaimerTitle\":\"StartPage_disclaimerTitle__3-W9w\",\"disclaimerDescr\":\"StartPage_disclaimerDescr__3Z-Un\",\"stack\":\"StartPage_stack__Qhez8\",\"stackTitile\":\"StartPage_stackTitile__293Iu\",\"stackList\":\"StartPage_stackList__yX5qs\",\"stackItemTitle\":\"StartPage_stackItemTitle__3EH7n\",\"stackItem\":\"StartPage_stackItem__eT94q\",\"opportunities\":\"StartPage_opportunities__prS0J\",\"opportunitiesTitle\":\"StartPage_opportunitiesTitle__tUoYd\",\"opportunitiesList\":\"StartPage_opportunitiesList__26NOM\",\"opportunitiesItem\":\"StartPage_opportunitiesItem__1dpRX\",\"opportunitiesItemCan\":\"StartPage_opportunitiesItemCan__1IuHy\"};","import React from 'react'\n\ntype ComponentProps = {\n    input: JSX.Element\n    meta: {\n        touched: boolean\n        error: string\n    }\n    props: React.ReactNode\n}\ntype TextAreaCreateType = (params: ComponentProps) => void\n\nexport const Textarea:TextAreaCreateType = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <textarea {...input} {...props} />\n            </div>\n            {touched &&\n            ((error && <span style={{color: 'crimson'}}>{error}</span>))}\n        </div>\n\n    )\n}\n","//DIALOG_ACTIONS\nexport const SEND_MESSAGE = 'my-app/dialogs/SEND_MESSAGE';\n//USER_ACTIONS\nexport const FOLLOW = 'my-app/users/FOLLOW'\nexport const UNFOLLOW = 'my-app/users/UNFOLLOW'\nexport const SET_USERS = 'my-app/users/SET_USERS'\nexport const SET_PAGE = 'my-app/users/SET_PAGE'\nexport const SET_TOTAL_COUNT = 'my-app/users/SET_TOTAL_COUNT'\nexport const IS_USER_FETCHING = 'my-app/users/IS_FETCHING'\nexport const IS_DISABLED_BTN = 'my-app/users/IS_DISABLED_BTN'\n//PROFILE_ACTIONS\nexport const ADD_POST = 'my-app/profile/ADD_POST';\nexport const DELETE_POST = 'my-app/profile/DELETE_POST';\nexport const SET_PROFILE_DATA = 'my-app/profile/SET_PROFILE_DATA';\nexport const GET_STATUS = 'my-app/profile/GET_STATUS';\nexport const SET_PHOTO_SUCCESS = 'my-app/profile/SET_PHOTO_SUCCESS';\nexport const IS_PROFILE_FETCHING = 'my-app/profile/IS_FETCHING';\nexport const IS_STATUS_FETCHING = 'my-app/profile/IS_FETCHING_STATUS';\n//AUTH_ACTIONS\nexport const SET_AUTH_DATA = 'my-app/auth/SET_AUTH_DATA';\nexport const GET_CAPTCHA = 'my-app/auth/GET_CAPTCHA';\n//INIT APP\nexport const SET_INITIALIZED = 'my-app/init/SET_INITIALIZED';\n","import {instance, ResultCodeForCaptchaCEnum, ResultCodesEnum} from \"./instance-api\";\nimport {ResponseType} from \"../store/types/@types\";\n\ntype MeResponseDataType = {\n    id: number,\n    email: string,\n    login: string,\n}\ntype SignupResponseDataType = {\n    userId: number,\n}\ntype CaptchaAPIType = {\n    url: string\n}\n\nexport const authAPI = {\n    checkAuth() {\n        return instance\n            .get<ResponseType<MeResponseDataType>>('/auth/me')\n            .then(response => response.data)\n    },\n    signOut() {\n        return instance\n            .delete<ResponseType>('/auth/login')\n            .then(response => response.data)\n    },\n    signIn(email: string, password: string, rememberMe = false, captcha = false) {\n        return instance\n            .post<ResponseType<SignupResponseDataType, ResultCodesEnum | ResultCodeForCaptchaCEnum>>('/auth/login',\n                {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n    getCaptcha() {\n        return instance\n            .get<CaptchaAPIType>('/security/get-captcha-url')\n            .then(response => response.data)\n    }\n}\n","import {authActions, AuthActionsTypes} from \"../../reducers/auth/authReducer\";\nimport {stopSubmit} from \"redux-form\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"../../store\";\nimport {authAPI} from \"../../../api/auth-api\";\nimport {ResultCodeForCaptchaCEnum, ResultCodesEnum} from \"../../../api/instance-api\";\n\ntype ThunkAction_AuthType = ThunkAction<void, AppStateType, unknown, AuthActionsTypes>\n\nexport const checkAuthThunkCreator = (): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.checkAuth()\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            let {id, login, email} = response.data\n            dispatch(authActions.setAuthData(id, email, login))\n        }\n    }\nexport const signOutThunkCreator = (): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.signOut()\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(authActions.setAuthData(null, null, null))\n        }\n    }\n\nexport const signInThunkCreator = (email: string, password: string, rememberMe: boolean, captcha: boolean): ThunkAction_AuthType =>\n    async (dispatch) => {\n        let response = await authAPI.signIn(email, password, rememberMe, captcha)\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(checkAuthThunkCreator())\n        } else if (response.resultCode === ResultCodeForCaptchaCEnum.ANTI_BOT) {\n            let data = await authAPI.getCaptcha()\n            dispatch(authActions.getCaptcha(data.url))\n        } else {\n            // @ts-ignore\n            dispatch(stopSubmit('login', {_error: response.messages}))\n        }\n    }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3lONb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sidebar_container__3CgDZ\",\"item\":\"Sidebar_item__3zPF1\"};"],"sourceRoot":""}