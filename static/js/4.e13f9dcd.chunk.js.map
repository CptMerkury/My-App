{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","props","handleSubmit","pristine","submitting","reset","error","onSubmit","className","classes","login","component","LoginInput","name","validate","required","password","PasswordInput","checkbox","type","btnBlock","disabled","submitBtn","onClick","cancelBtn","captchaImg","captcha","src","alt","InputBase","error_msg_summary","connect","state","isAuth","auth","signInThunkCreator","to","loginContainer","loginFormContainer","formData","email","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,mBAAqB,kCAAkC,MAAQ,qBAAqB,QAAU,uBAAuB,SAAW,wBAAwB,SAAW,wBAAwB,SAAW,wBAAwB,UAAY,yBAAyB,UAAY,yBAAyB,kBAAoB,mC,iCCD7X,qGAwDMC,EAAiBC,YACnB,CACIC,KAAM,SAFSD,EA9CL,SAACE,GAAW,IAEnBC,EAAoDD,EAApDC,aAAcC,EAAsCF,EAAtCE,SAAUC,EAA4BH,EAA5BG,WAAYC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,MAClD,OACI,uBAAMC,SAAUL,EAAhB,UACI,qBAAKM,UAAWC,IAAQC,MAAxB,SACI,cAAC,IAAD,CAAOC,UAAWC,IACXC,KAAM,QACNC,SAAU,CAACC,SAGtB,qBAAKP,UAAWC,IAAQO,SAAxB,SACI,cAAC,IAAD,CAAOL,UAAWM,IACXJ,KAAM,WACNC,SAAU,CAACC,SAEtB,sBAAKP,UAAWC,IAAQS,SAAxB,UACI,cAAC,IAAD,CAAOP,UAAW,QACXE,KAAM,aACNM,KAAK,aAHhB,iBAKA,sBAAKX,UAAWC,IAAQW,SAAxB,UACI,wBAAQD,KAAK,SACLE,SAAUjB,EACVI,UAAWC,IAAQa,UAF3B,oBAIA,wBAAQH,KAAK,SACLE,SAAUlB,GAAYC,EAAYmB,QAASlB,EAC3CG,UAAWC,IAAQe,UAF3B,6BAKHvB,EAAMwB,WACD,sBAAKjB,UAAWC,IAAQiB,QAAxB,UACE,qBAAKC,IAAK1B,EAAMwB,WAAYG,IAAI,YAChC,cAAC,IAAD,CAAOjB,UAAWkB,IACXhB,KAAM,UACNC,SAAU,CAACC,UAGtB,KAEHT,EAAQ,qBAAKE,UAAWC,IAAQqB,kBAAxB,SAA4CxB,IAAe,WAoCjEyB,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBP,QAASM,EAAME,KAAKR,WAGgB,CAACS,wBAA1BJ,EAzBD,SAAC9B,GAMX,OAAIA,EAAMgC,OACC,cAAC,IAAD,CAAUG,GAAI,aAIrB,qBAAK5B,UAAWC,IAAQ4B,eAAxB,SACI,sBAAK7B,UAAWC,IAAQ6B,mBAAxB,UACI,uCACA,cAACxC,EAAD,CAAgBS,SAZX,SAACgC,GACdtC,EAAMkC,mBAAmBI,EAASC,MAAOD,EAASvB,SAAUuB,EAASE,WAAYF,EAASb,UAW9CD,WAAYxB,EAAMyB","file":"static/js/4.e13f9dcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__32SGj\",\"loginFormContainer\":\"Login_loginFormContainer__-SFMR\",\"login\":\"Login_login__2Px22\",\"captcha\":\"Login_captcha__30gIQ\",\"password\":\"Login_password__2YdE3\",\"checkbox\":\"Login_checkbox__3UFrU\",\"btnBlock\":\"Login_btnBlock__3sOTq\",\"submitBtn\":\"Login_submitBtn__3-9f5\",\"cancelBtn\":\"Login_cancelBtn__1XiXR\",\"error_msg_summary\":\"Login_error_msg_summary__3_ChY\"};","import classes from \"./Login.module.css\"\nimport React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nimport {InputBase, LoginInput, PasswordInput} from \"../common/input/input\";\nimport {required} from \"../../utils/validators/validator\";\nimport {signInThunkCreator} from \"../../store/thunk/auth/authThunk\";\n\nconst LoginForm = (props) => {\n\n    const {handleSubmit, pristine, submitting, reset, error} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={classes.login}>\n                <Field component={LoginInput}\n                       name={'email'}\n                       validate={[required]}\n                />\n            </div>\n            <div className={classes.password}>\n                <Field component={PasswordInput}\n                       name={'password'}\n                       validate={[required]}/>\n            </div>\n            <div className={classes.checkbox}>\n                <Field component={'input'}\n                       name={'rememberMe'}\n                       type=\"checkbox\"/>Remember me\n            </div>\n            <div className={classes.btnBlock}>\n                <button type=\"submit\"\n                        disabled={submitting}\n                        className={classes.submitBtn}>Submit\n                </button>\n                <button type=\"button\"\n                        disabled={pristine || submitting} onClick={reset}\n                        className={classes.cancelBtn}>Clear Values\n                </button>\n            </div>\n            {props.captchaImg\n                ? <div className={classes.captcha}>\n                    <img src={props.captchaImg} alt=\"captcha\"/>\n                    <Field component={InputBase}\n                           name={'captcha'}\n                           validate={[required]}/>\n                </div>\n                :\n                null\n            }\n            {error ? <div className={classes.error_msg_summary}>{error}</div> : null}\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm(\n    {\n        form: 'login',\n    }\n)(LoginForm)\n\nconst Login = (props) => {\n\n    const onSubmit = (formData) => {\n        props.signInThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div className={classes.loginContainer}>\n            <div className={classes.loginFormContainer}>\n                <h2>Login</h2>\n                <LoginReduxForm onSubmit={onSubmit} captchaImg={props.captcha}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    captcha: state.auth.captcha\n})\n\nexport default connect(mapStateToProps, {signInThunkCreator})(Login)"],"sourceRoot":""}