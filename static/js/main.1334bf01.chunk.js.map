{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/preloader/spinner.module.css","components/Profile/Posts/Posts.module.css","store/reducers/dialogs/dialogsReducer.ts","api/instance-api.ts","components/Setting/Setting.module.css","components/Users/UserItem/Users.module.css","serviceWorker.js","store/reducers/app/appReducer.ts","store/reducers/profile/profileReducer.ts","store/reducers/sidebar/sidebarReducer.ts","utils/helpers/object-helpers.ts","store/reducers/users/usersReducer.ts","store/store.ts","components/Users/UserItem/UserItem.tsx","assets/icons/35.svg","components/common/preloader/spinner.tsx","components/Users/UsersLayout/Users.tsx","api/user-api.ts","store/thunk/users/usersThunk.ts","store/selectors/users/usersSelectors.ts","components/Users/UsersContainer.tsx","assets/icons/294.svg","components/common/preloader/loading.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileJob/ProfileJobData.jsx","components/Profile/ProfileInfo/PtofileInfo.jsx","components/Profile/Posts/PostsForm/PostForm.jsx","components/Profile/Posts/PostsItem/Post.jsx","components/Profile/Posts/PostsLayout/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileLayout/Ptofile.jsx","api/profile-api.ts","store/thunk/profile/profileThunk.ts","store/selectors/profile/profileSelectors.ts","components/Profile/PtofileContainer.jsx","components/Setting/ProfileEdit/InfoBlockForm.tsx","components/Setting/Setting.tsx","assets/logo/logo.svg","components/Header/HeaderLayout/Header.jsx","components/Header/HeaderContainer.jsx","components/Sidebar/SidebarItem/sidebarFriends.tsx","components/Sidebar/SidebarLayout/Sidebar.tsx","components/Sidebar/SidebarContainer.tsx","components/NavBar/NavBar.tsx","utils/hoc/lazyComponent.js","components/Start Component/StartPage.tsx","App.js","store/thunk/app/initThunk.ts","index.js","components/common/input/input.tsx","utils/validators/validator.ts","components/Profile/Posts/PostsItem/Post.module.css","components/NavBar/NavBar.module.css","components/Header/Header.module.css","store/reducers/auth/authReducer.ts","components/Users/Users.module.css","components/common/input/input.module.css","components/Start Component/StartPage.module.css","components/common/textarea/textarea.tsx","store/actions/actions.ts","utils/hoc/authRedirect.js","api/auth-api.ts","store/thunk/auth/authThunk.ts","components/Profile/Profile.module.css","components/Sidebar/Sidebar.module.css"],"names":["module","exports","initialState","dialogs","id","name","messages","message","dialogActions","sendMessageCreator","value","type","SEND_MESSAGE","payload","dialogsReducer","state","action","newMessage","length","ResultCodesEnum","ResultCodeForCaptchaCEnum","instance","axios","create","baseURL","withCredentials","headers","Boolean","window","location","hostname","match","initialized","appActions","SET_INITIALIZED","appReducer","profile","status","posts","likeCount","isLoading","isFetchingStatus","profileActions","ADD_POST","data","SET_PROFILE_DATA","GET_STATUS","photos","SET_PHOTO_SUCCESS","bool","IS_PROFILE_FETCHING","IS_STATUS_FETCHING","profileReducer","newPost","DELETE_POST","filter","p","friendList","sidebarReducer","UpdateObjectInArray","items","itemID","objPropsName","newObjProps","map","user","users","pageSize","totalCount","currentPage","isDisabledBtn","usersActions","userID","FOLLOW","UNFOLLOW","SET_USERS","num","SET_PAGE","SET_TOTAL_COUNT","IS_USER_FETCHING","IS_DISABLED_BTN","userId","usersReducer","followed","RootReducer","combineReducers","app","profilePage","dialogPage","userPage","sidebar","auth","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","UsersItem","setUnfollowHandler","setFollowHandler","isDisabled","className","classesItem","userInfoWrapper","to","infoWrapperImg","src","small","alt","unFollowBtn","userSubscribeBtn","onClick","disabled","some","followBtn","userInfoContainer","info","country","city","Preloader","classes","userLoading","spinner","Users","usersPage","selectPage","pagesCount","Math","ceil","userItem","uData","usersContainer","usersField","usersItems","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selected","containerClassName","reactPaginate","activeClassName","reactPaginationBtn","usersAPI","get","then","res","post","delete","_follow_unfollow_flow","dispatch","apiMethod","actionCreator","a","response","resultCode","SUCCESS","console","log","getUsersSelector","getPageSizeSelector","getUsersLengthSelector","getCurrantPageSelector","checkLoadingSelector","isUnUseBtnSelector","UsersContainer","props","setFollowThunkCreator","setUnfollowThunkCreator","getPageThunkCreator","this","getUsersThunkCreator","React","Component","connect","Loader","loading","width","ProfileStatus","statusData","saveStatus","isOwner","useState","editMode","setEditMode","setStatus","useEffect","statusBlock","statusDescr","onChange","target","autoFocus","placeholder","changeStatusBtn","cancelStatusBtn","bubble2","bubble1","Contact","title","href","rel","ProfileData","contacts","userInfoBlock","aboutMe","aboutMeTitle","linkBlock","Object","keys","key","editInfoBtn","ProfileJob","jobBlock","lookingForAJob","jobDescr","lookingForAJobDescription","openJobStatus","circleIndicatorActive","circleIndicatorNot","ProfileInfo","saveNewPhoto","updateStatus","head","wrapper","mediaBlock","photosBlock","large","infoBlock","nameBlock","changePhotosDis","changePhotos","files","user_nameBlock","fullName","maxLength200","maxLength","minValue1","minValue","PostReduxForm","reduxForm","handleSubmit","reset","onSubmit","Field","component","Textarea","validate","required","setTimeout","Post","item","ava_wrapper","ava_item","body_wrapper","post_body_item","like_wrapper","like_item","Posts","memo","postsElement","reverse","pData","postField","createPost","body","postsBlock","PostsContainer","Profile","profileContainer","profileAPI","newStatus","put","file","formData","FormData","append","getProfileThunkCreator","getProfileSelector","getStatusSelector","getUserIdSelector","checkAuthSelector","isAuth","checkFetchingStatusSelector","ProfileContainer","params","authUserID","history","push","getStatusThunkCreator","refreshProfile","prevProps","setStatusThunkCreator","saveNewPhotoThunkCreator","PureComponent","alert","withAuthRedirect","withRouter","maxLength300","maxLength50","maxLength20","ProfileDataReduxForm","submitting","error","settingsWrapper","form_wrapper","aboutMe_block","InputBase","btn_save","job_block","contacts_block","contacts_fields","btn_saveAll","ProfileDataEdit","saveProfile","initialValues","settingsFieldDis","settingsField","saveProfileThunkCreator","getState","isNull","Error","stopSubmit","_error","settingContainer","Header","headerWrapper","logo","loginBlock","userName","login","authBtn","signOut","HeaderContainer","signOutThunkCreator","SidebarFriends","Sidebar","friendItem","container","SidebarContainer","NavBar","nav","withSuspense","fallback","StartPage","header","headerGreeting","headerLogin","headerPass","disclaimer","disclaimerTitle","disclaimerDescr","stack","stackList","stackTitile","stackItemTitle","stackItem","opportunities","opportunitiesList","opportunitiesTitle","opportunitiesItemCan","opportunitiesItem","Login","lazy","DialogContainer","News","Music","App","catchAllUnhandledError","reason","promise","InitializeApp","addEventListener","removeEventListener","init","path","render","Setting","exact","SocialAppContainer","promiseAuth","checkAuthThunkCreator","Promise","all","SocialApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","input","meta","touched","error_msg","LoginInput","error_input","PasswordInput","undefined","max","min","email","captcha","authActions","setAuthData","SET_AUTH_DATA","getCaptcha","url","GET_CAPTCHA","style","color","mapStateToProps","RedirectComponent","authAPI","password","rememberMe","signInThunkCreator","ANTI_BOT"],"mappings":"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","file":"static/js/main.1334bf01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__3Q3FT\",\"wrapper\":\"ProfileInfo_wrapper__3boPV\",\"mediaBlock\":\"ProfileInfo_mediaBlock__KKrQe\",\"photosBlock\":\"ProfileInfo_photosBlock__3yjLZ\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\",\"bubble1\":\"ProfileInfo_bubble1__2ZOgi\",\"bubble2\":\"ProfileInfo_bubble2__2ACT-\",\"statusDescr\":\"ProfileInfo_statusDescr__1y0wO\",\"changeStatusBtn\":\"ProfileInfo_changeStatusBtn__2ECzS\",\"cancelStatusBtn\":\"ProfileInfo_cancelStatusBtn__2uT7S\",\"infoBlock\":\"ProfileInfo_infoBlock__Yi3uO\",\"jobBlock\":\"ProfileInfo_jobBlock__3qX4B\",\"openJobStatus\":\"ProfileInfo_openJobStatus__2IBJk\",\"jobDescr\":\"ProfileInfo_jobDescr__2NnqD\",\"circleIndicatorActive\":\"ProfileInfo_circleIndicatorActive__3GUQ7\",\"circleIndicatorNot\":\"ProfileInfo_circleIndicatorNot__3OngS\",\"userInfoBlock\":\"ProfileInfo_userInfoBlock__2F7C3\",\"aboutMe\":\"ProfileInfo_aboutMe__1mww3\",\"aboutMeTitle\":\"ProfileInfo_aboutMeTitle__3NHae\",\"nameBlock\":\"ProfileInfo_nameBlock__3H98C\",\"user_nameBlock\":\"ProfileInfo_user_nameBlock__1Vh9z\",\"changePhotos\":\"ProfileInfo_changePhotos__20Roj\",\"changePhotosDis\":\"ProfileInfo_changePhotosDis__6Hh7r\",\"linkBlock\":\"ProfileInfo_linkBlock__2I8GX\",\"editInfoBtn\":\"ProfileInfo_editInfoBtn__3NaWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userLoading\":\"spinner_userLoading__pYkc6\",\"spinner\":\"spinner_spinner__xCXbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postField\":\"Posts_postField__33u5B\",\"postsBlock\":\"Posts_postsBlock__2AH0W\"};","import {SEND_MESSAGE} from \"../../actions/actions\";\nimport {DialogType, MessageType} from \"../../types/@types\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n        {id: 4, name: 'Vladimir'},\n        {id: 5, name: 'Andrew'},\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'What`s Up'},\n        {id: 3, message: 'How are you'},\n        {id: 4, message: 'Hello'},\n        {id: 5, message: 'Yo'},\n        {id: 6, message: 'Hi'},\n        {id: 7, message: 'What`s Up'},\n        {id: 8, message: 'How are you'},\n        {id: 9, message: 'Hello'},\n        {id: 10, message: 'Yo'},\n    ] as Array<MessageType>,\n};\n\nexport type DialogInitialStateType = typeof initialState;\nexport type DialogActionsTypes = InferActionsType<typeof dialogActions>\n\nconst dialogsReducer = (state = initialState, action: DialogActionsTypes): DialogInitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            let newMessage = {\n                id: state.messages.length + 1,\n                message: action.payload\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage]\n            };\n        }\n        default:\n            return state;\n    }\n}\nexport const dialogActions = {\n    sendMessageCreator: (value: string) => ({\n        type: SEND_MESSAGE, payload: value\n    } as const),\n}\n\nexport default dialogsReducer\n","import axios from \"axios\";\n\n//Enum Result Codes\nexport enum ResultCodesEnum {\n    SUCCESS = 0,\n    ERROR = 1,\n}\nexport enum ResultCodeForCaptchaCEnum {\n    ANTI_BOT = 10,\n}\n\n/* Мы создаем instance axios.create, чтобы один раз прописать в него параметры и не дублировать их в каждом запросе */\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        /* мы добавляем в headers api-key, чтобы сервер мог понять кто обращается к серверу. */\n        'API-KEY': 'a2f60dbc-59e4-4c2c-b4c3-fa8b69b0306e'\n    }\n})\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingContainer\":\"Setting_settingContainer__2jnFS\",\"settingsWrapper\":\"Setting_settingsWrapper__rls-w\",\"settingsField\":\"Setting_settingsField__K0dp4\",\"settingsFieldDis\":\"Setting_settingsFieldDis__3xOy1\",\"isLoading\":\"Setting_isLoading__QNUY4\",\"form_wrapper\":\"Setting_form_wrapper__2-bPE\",\"aboutMe_block\":\"Setting_aboutMe_block__2aD8x\",\"btn_save\":\"Setting_btn_save__3-Ai2\",\"job_block\":\"Setting_job_block__5LFgs\",\"contacts_block\":\"Setting_contacts_block__yRxE5\",\"contacts_fields\":\"Setting_contacts_fields__2Fohe\",\"btn_saveAll\":\"Setting_btn_saveAll__2rC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfoWrapper\":\"Users_userInfoWrapper__3S4n9\",\"userSubscribeBtn\":\"Users_userSubscribeBtn__22gv2\",\"followBtn\":\"Users_followBtn__1J35y\",\"unFollowBtn\":\"Users_unFollowBtn__Oh9oB\",\"userInfoContainer\":\"Users_userInfoContainer__1A0ol\",\"infoWrapperImg\":\"Users_infoWrapperImg__2vdnU\",\"info\":\"Users_info__2Jz7e\",\"location\":\"Users_location__1uMJl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_INITIALIZED} from \"../../actions/actions\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    initialized: false,\n};\n\nexport type InitialAppStateType = typeof initialState\nexport type InitActionsTypes = InferActionsType<typeof appActions>\n\nconst appReducer = (state = initialState, action: InitActionsTypes): InitialAppStateType => {\n    switch (action.type) {\n        case SET_INITIALIZED: {\n            return {\n                ...state,\n                initialized: true\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const appActions = {\n    InitializeSuccess : () => ({\n        type: SET_INITIALIZED,\n    } as const)\n}\n\nexport default appReducer;\n","import {PhotosType, PostsType, ProfileType} from \"../../types/@types\";\nimport {InferActionsType} from \"../../store\";\nimport {\n    ADD_POST,\n    DELETE_POST,\n    GET_STATUS,\n    IS_PROFILE_FETCHING,\n    IS_STATUS_FETCHING,\n    SET_PHOTO_SUCCESS,\n    SET_PROFILE_DATA\n} from \"../../actions/actions\";\n\nconst initialState = {\n    profile: null as ProfileType | null,\n    status: '',\n    posts: [\n        {id: 1, message: 'Hi, how are you', likeCount: 50},\n        {id: 2, message: 'It`s my first post', likeCount: 40},\n        {id: 3, message: 'Hi, how are you', likeCount: 30},\n        {id: 4, message: 'How are you', likeCount: 20},\n        {id: 5, message: 'Hi', likeCount: 10},\n    ] as Array<PostsType>,\n    isLoading: false,\n    isFetchingStatus: false,\n};\n\nexport type ProfileInitialStateType = typeof initialState\nexport type ProfileActionsTypes = InferActionsType<typeof profileActions>\n\nconst profileReducer = (state = initialState, action: ProfileActionsTypes): ProfileInitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.payload,\n                likeCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost]\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id !== action.payload)\n            };\n        case SET_PROFILE_DATA:\n            return {\n                ...state,\n                profile: action.payload\n            };\n        case GET_STATUS:\n            return {\n                ...state,\n                status: action.payload\n            };\n        case IS_PROFILE_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_STATUS_FETCHING:\n            return {\n                ...state,\n                isFetchingStatus: action.payload\n            };\n        case SET_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.payload} as ProfileType\n                /* Refactoring later action type for this case */\n            };\n        default:\n            return state\n    }\n}\n\nexport const profileActions = {\n    addPostCreator: (value: string) => ({\n        type: ADD_POST,\n        payload: value\n    } as const),\n\n    deletePostCreator: (id: number) => ({\n        type: DELETE_POST,\n        payload: id\n    } as const),\n\n    setProfileData: (data: ProfileType) => ({\n        type: SET_PROFILE_DATA,\n        payload: data\n    } as const),\n\n    getStatus: (value: string) => ({\n        type: GET_STATUS,\n        payload: value\n    } as const),\n\n    setPhotoSuccess: (photos: PhotosType) => ({\n        type: SET_PHOTO_SUCCESS,\n        payload: photos\n    } as const),\n\n    toggleFetch: (bool: boolean) => ({\n        type: IS_PROFILE_FETCHING,\n        payload: bool\n    } as const),\n\n    toggleFetchStatus: (bool: boolean) => ({\n        type: IS_STATUS_FETCHING,\n        payload: bool\n    } as const)\n}\n\nexport default profileReducer\n","let initialState = {\n    friendList: [\n        {id: 1, name: 'Ivan'},\n        {id: 2, name: 'Dmitri'},\n        {id: 3, name: 'Max'},\n    ],\n}\n\nexport type SidebarInitialStateType = typeof initialState\n\nconst sidebarReducer = (state = initialState, action: any): SidebarInitialStateType => {\n\n    return state\n}\n\nexport default sidebarReducer","import {UserType} from \"../../store/types/@types\";\n\ntype UpdateObjectInArrayType = (\n    items: Array<UserType>,\n    itemID: number,\n    objPropsName: keyof UserType,\n    newObjProps: {\n        followed: boolean\n    }) => Array<UserType>\n\nexport const UpdateObjectInArray: UpdateObjectInArrayType = (\n    items,\n    itemID,\n    objPropsName,\n    newObjProps\n): Array<UserType> => items.map((user) => {\n\n    if (user[objPropsName] === itemID) {\n        return {\n            ...user, ...newObjProps\n        } as UserType\n    }\n    return user\n})\n","import {UpdateObjectInArray} from \"../../../utils/helpers/object-helpers\";\nimport {InferActionsType} from \"../../store\";\nimport {UserType} from \"../../types/@types\";\nimport {\n    FOLLOW,\n    IS_DISABLED_BTN,\n    IS_USER_FETCHING,\n    SET_PAGE,\n    SET_TOTAL_COUNT,\n    SET_USERS,\n    UNFOLLOW\n} from \"../../actions/actions\";\n\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 5,\n    totalCount: 400,\n    currentPage: 1,\n    isLoading: false,\n    isDisabledBtn: [] as Array<number>, // Array of users id\n};\n\nexport type UserInitialStateType = typeof initialState\nexport type UserActionsTypes = InferActionsType<typeof usersActions>\n\nconst usersReducer = (state = initialState, action: UserActionsTypes): UserInitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: UpdateObjectInArray(state.users, action.payload, 'id', {followed: false})\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.payload,\n            };\n        case SET_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload,\n            };\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.payload\n            };\n        case IS_USER_FETCHING:\n            return {\n                ...state,\n                isLoading: action.payload\n            };\n        case IS_DISABLED_BTN:\n            return {\n                ...state,\n                isDisabledBtn: action.payload\n                    ? [...state.isDisabledBtn, action.userId]\n                    /* метод filter вернет нам новый массив, в котором удалит тот id, который мы передали */\n                    : state.isDisabledBtn.filter(id => id !== action.userId)\n            };\n        default:\n            return state\n    }\n}\n\nexport const usersActions = {\n    follow: (userID: number) => ({\n        type: FOLLOW,\n        payload: userID\n    } as const),\n\n    unfollow: (userID: number) => ({\n        type: UNFOLLOW,\n        payload: userID\n    } as const),\n\n    setUsers: (users: Array<UserType>) => ({\n        type: SET_USERS,\n        payload: users\n    } as const),\n\n    setPage: (num: number) => ({\n        type: SET_PAGE,\n        payload: num\n    } as const),\n\n    setTotalCount: (num: number) => ({\n        type: SET_TOTAL_COUNT,\n        payload: num\n    } as const),\n\n    toggleFetch: (bool: boolean) => ({\n        type: IS_USER_FETCHING,\n        payload: bool\n    } as const),\n\n    toggleDisabledBtn: (bool: boolean, id: number) => ({\n        type: IS_DISABLED_BTN,\n        payload: bool,\n        userId: id,\n    } as const)\n}\n\nexport default usersReducer\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profile/profileReducer\";\nimport dialogsReducer from \"./reducers/dialogs/dialogsReducer\";\nimport sidebarReducer from \"./reducers/sidebar/sidebarReducer\";\nimport usersReducer from \"./reducers/users/usersReducer\";\nimport authReducer from \"./reducers/auth/authReducer\";\nimport appReducer from \"./reducers/app/appReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form'\n\n/* Передаем в store с помощью combineReducers все Reducer который объединит их в один */\nlet RootReducer = combineReducers({\n    app: appReducer,\n    profilePage: profileReducer,\n    dialogPage: dialogsReducer,\n    userPage: usersReducer,\n    sidebar: sidebarReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\ntype RootReducerType = typeof RootReducer;\n/* Создаем глобальный тип для state */\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport type InferActionsType<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(RootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store\n","import React from 'react'\nimport classesItem from \"./Users.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../store/types/@types\";\n\ntype PropsType = {\n    user: UserType\n    setUnfollowHandler: (id: number) => void\n    setFollowHandler : (id: number) => void\n    isDisabled: Array<number>\n}\n\nconst UsersItem: React.FC<PropsType> = ({user, setUnfollowHandler, setFollowHandler, isDisabled}) => {\n    return (\n        <div className={classesItem.userInfoWrapper}>\n            <div>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img className={classesItem.infoWrapperImg}\n                             src={user.photos.small || 'https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'}\n                             alt=\"avatar\"/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ?\n                        <button\n                            className={`${classesItem.unFollowBtn} ${classesItem.userSubscribeBtn}`}\n                            onClick={() => setUnfollowHandler(user.id)}\n                            /* метод some вернет на true если id находится в массиве */\n                            disabled={isDisabled.some(id => id === user.id)}\n                        >Unfollow</button>\n                        :\n                        <button\n                            className={`${classesItem.followBtn} ${classesItem.userSubscribeBtn}`}\n                            /* метод some вернет на true если id находится в массиве */\n                            onClick={() => setFollowHandler(user.id)}\n                            disabled={isDisabled.some(id => id === user.id)}\n                        >Follow</button>}\n                </div>\n            </div>\n            <div className={classesItem.userInfoContainer}>\n                <div>\n                        <span className={classesItem.info}>User name:\n                            <p>{(user.name || undefined) ? user.name : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.info}>User status:\n                            <p>{(user.status || undefined) ? user.status : 'Not indicated'}</p>\n                        </span>\n                </div>\n                <div>\n                        <span className={classesItem.location}>Country:\n                            <p>{(user.location || undefined) ? user.location.country : 'Not indicated'}</p>\n                        </span>\n                    <span className={classesItem.location}>City:\n                            <p>{(user.location || undefined) ? user.location.city : 'Not indicated'}</p>\n                        </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersItem\n","export default __webpack_public_path__ + \"static/media/35.64407753.svg\";","import React from 'react'\nimport classes from \"./spinner.module.css\";\nimport spinner from '../../../assets/icons/35.svg'\n\n\nexport const Preloader = () => {\n    return (\n        <div className={classes.userLoading}>\n            <div className={classes.spinner}>\n                <img src={spinner} alt=\"spinner\"/>\n            </div>\n        </div>\n    )\n}","import classes from \"../Users.module.css\";\nimport React, {FC} from 'react';\nimport ReactPaginate from \"react-paginate\";\n\nimport UsersItem from \"../UserItem/UserItem\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport {UserType} from \"../../../store/types/@types\";\n// import Paginator from \"../../common/paginator/paginator\";\n\ntype PropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    pageSize: number\n    currentPage: number\n    isLoading: boolean\n    isDisabled: Array<number>\n    selectPage: (num: number) => void\n    setFollowHandler: (id: number) => void\n    setUnfollowHandler: (id: number) => void\n}\n\nconst Users: FC<PropsType> = (\n    {\n        usersPage = [], totalCount, pageSize, currentPage, isLoading,\n        isDisabled, selectPage, setFollowHandler, setUnfollowHandler\n    }\n) => {\n\n    const pagesCount = Math.ceil(totalCount / pageSize)\n\n    let userItem = usersPage.map(uData => (\n            <UsersItem user={uData}\n                       setUnfollowHandler={(id: number) => setUnfollowHandler(id)}\n                       setFollowHandler={(id: number) => setFollowHandler(id)}\n                       isDisabled={isDisabled}\n                       key={uData.id}/>\n        )\n    )\n\n\n    return (\n        <div className={classes.usersContainer}>\n            <h2>Users</h2>\n            <div className={classes.usersField}>\n                <div className={classes.usersItems}>\n                    <ReactPaginate\n                        previousLabel={\"<\"}\n                        nextLabel={\">\"}\n                        breakLabel={'~'}\n                        pageCount={pagesCount}\n                        marginPagesDisplayed={1}\n                        pageRangeDisplayed={3}\n                        onPageChange={(e) => selectPage(e.selected + 1)}\n                        containerClassName={classes.reactPaginate}\n                        activeClassName={classes.reactPaginationBtn}\n                    />\n                    {isLoading ? <Preloader/> : <div>{userItem}</div>}\n                    {/*If we want use custom pagination, use template below*/}\n                    {/*<Paginator*/}\n                    {/*    totalItemsCount={totalCount}*/}\n                    {/*    pageSize={pageSize}*/}\n                    {/*    currentPage={currentPage}*/}\n                    {/*    isLoading={isLoading}*/}\n                    {/*    selectPage={selectPage}*/}\n                    {/*/>*/}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import {UserType} from \"../store/types/@types\";\nimport {instance} from \"./instance-api\";\n\ntype GetUserAPIType = {\n    items: Array<UserType>,\n    totalCount: number,\n    error: null | string\n}\n\nexport const usersAPI = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance\n            .get<GetUserAPIType>(`/users?page=${currentPage}&count=${pageSize}`).then(res => res.data)\n    },\n    setFollow(id: number) {\n        return instance\n            .post<ResponseType>(`/follow/${id}`, null).then(res => res.data)\n    },\n    setUnfollow(id: number) {\n        return instance\n            .delete<ResponseType>(`/follow/${id}`).then(res => res.data)\n    }\n}\n","import {UserActionsTypes, usersActions} from \"../../reducers/users/usersReducer\";\nimport {Dispatch} from \"redux\";\nimport {usersAPI} from \"../../../api/user-api\";\nimport {ResultCodesEnum} from \"../../../api/instance-api\";\nimport {CommonThunkCreatorType} from \"../../types/@types\";\n\nexport const getUsersThunkCreator = (currentPage: number = 1, pageSize: number): CommonThunkCreatorType<UserActionsTypes> =>\n    async (dispatch) => {\n        dispatch(usersActions.toggleFetch(true))\n\n        let response = await usersAPI.getUsers(currentPage, pageSize)\n\n        dispatch(usersActions.setUsers(response.items))\n        dispatch(usersActions.setTotalCount(response.totalCount))\n        dispatch(usersActions.toggleFetch(false))\n    }\n\nexport const getPageThunkCreator = (num: number, pageSize: number): CommonThunkCreatorType<UserActionsTypes> =>\n    async (dispatch) => {\n        dispatch(usersActions.setPage(num))\n        dispatch(usersActions.toggleFetch(true))\n\n        let response = await usersAPI.getUsers(num, pageSize)\n\n        dispatch(usersActions.setUsers(response.items))\n        dispatch(usersActions.toggleFetch(false))\n    }\n\nconst _follow_unfollow_flow = async (\n    dispatch: Dispatch<UserActionsTypes>,\n    userId: number,\n    apiMethod: any,\n    actionCreator: (userId: number) => UserActionsTypes) => {\n\n    dispatch(usersActions.toggleDisabledBtn(true, userId))\n    const response = await apiMethod(userId)\n\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        dispatch(actionCreator(userId))\n        dispatch(usersActions.toggleDisabledBtn(false, userId))\n    } else {\n        console.log('Error AXIOS', response.messages)\n    }\n}\n\nexport const setFollowThunkCreator = (id: number): CommonThunkCreatorType<UserActionsTypes> =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setFollow, usersActions.follow)\n    }\n\nexport const setUnfollowThunkCreator = (id: number): CommonThunkCreatorType<UserActionsTypes> =>\n    async (dispatch) => {\n        await _follow_unfollow_flow(dispatch, id, usersAPI.setUnfollow, usersActions.unfollow)\n    }\n","import {AppStateType} from \"../../store\";\n\nexport const getUsersSelector = (state: AppStateType) => {\n    return state.userPage.users\n}\n\nexport const getPageSizeSelector = (state: AppStateType) => {\n    return state.userPage.pageSize\n}\n\nexport const getUsersLengthSelector = (state: AppStateType) => {\n    return state.userPage.totalCount\n}\n\nexport const getCurrantPageSelector = (state: AppStateType) => {\n    return state.userPage.currentPage\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.userPage.isLoading\n}\n\nexport const isUnUseBtnSelector = (state: AppStateType) => {\n    return state.userPage.isDisabledBtn\n}\n\n/*\n * future, create this selector, he must work with all simple selectors\n * and into switch/case return all and new value from state (maybe useSelector)\n*/\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport React from \"react\";\n\nimport Users from \"./UsersLayout/Users\";\nimport {\n    getPageThunkCreator, getUsersThunkCreator,\n    setFollowThunkCreator, setUnfollowThunkCreator\n} from \"../../store/thunk/users/usersThunk\";\nimport {\n    checkLoadingSelector, getCurrantPageSelector, getPageSizeSelector,\n    getUsersLengthSelector, getUsersSelector, isUnUseBtnSelector\n} from \"../../store/selectors/users/usersSelectors\";\nimport {UserType} from \"../../store/types/@types\";\nimport {AppStateType} from \"../../store/store\";\n\ntype MapStateToPropsType = {\n    usersPage: Array<UserType>\n    totalCount: number\n    currentPage: number\n    pageSize: number\n    isLoading: boolean\n    isDisabledBtn: Array<number>\n}\ntype MapDispatchToPropsType = {\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\n    getPageThunkCreator: (num: number, pageSize: number) => void\n    setFollowThunkCreator: (id: number) => void\n    setUnfollowThunkCreator: (id: number) => void\n}\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.getUsersThunkCreator(1, this.props.pageSize)\n    }\n\n    setFollowHandler = (id: number) => {\n        /* Мы перенесли всю логику в thunkCreator */\n        this.props.setFollowThunkCreator(id)\n    }\n    setUnfollowHandler = (id: number) => {\n        this.props.setUnfollowThunkCreator(id)\n    }\n    selectPage = (num: number) => {\n        const {pageSize} = this.props\n        this.props.getPageThunkCreator(num, pageSize)\n    }\n\n    render() {\n        return (\n            <Users\n                usersPage={this.props.usersPage}\n                totalCount={this.props.totalCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                isLoading={this.props.isLoading}\n                isDisabled={this.props.isDisabledBtn}\n\n                selectPage={(num) => this.selectPage(num)}\n                setFollowHandler={(id) => this.setFollowHandler(id)}\n                setUnfollowHandler={(id) => this.setUnfollowHandler(id)}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        usersPage: getUsersSelector(state),\n        pageSize: getPageSizeSelector(state),\n        totalCount: getUsersLengthSelector(state),\n        currentPage: getCurrantPageSelector(state),\n        isLoading: checkLoadingSelector(state),\n        isDisabledBtn: isUnUseBtnSelector(state),\n    }\n}\n\nexport default compose(\n    //TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState это типы для generic type\n    connect<MapStateToPropsType, MapDispatchToPropsType, any, AppStateType>(mapStateToProps, {\n        getUsersThunkCreator, getPageThunkCreator,\n        setFollowThunkCreator, setUnfollowThunkCreator\n    })\n)(UsersContainer)\n\n/* Вместо mapDispatchToProps мы передаем в connect объект action/thunk creators\n * чтобы сократить код до современного синтаксиса,\n * функция connect сама обернет dispatch в callback's\n *\n * // тоже самое :\n * const mapDispatchToProps = (dispatch) => {\n *     return {\n *         setFollow: (userID) => {\n *             dispatch(followAC(userID))\n *         },\n *         setUnfollow: (userID) => {\n *             dispatch(unfollowAC(userID))\n *         },\n *         setUsers: (users) => {\n *             dispatch(setUsersAC(users))\n *         },\n *         setPage: (num) => {\n *             dispatch(setPageAC(num))\n *         },\n *         setTotalCount: (num) => {\n *             dispatch(setTotalCountAC(num))\n *         },\n *         toggleFetch: (bool) => {\n *             dispatch(toggleFetchAC(bool))\n *         }\n *     }\n * }\n *\n * setFollowHandler = (id) => {\n *     //Мы перенесли всю логику в thunkCreator\n *     this.props.setFollowThunkCreator(id)\n *     this.props.toggleDisabledBtn(true, id)\n *     //Мы сделали инкапсуляцию axios метода в файл api\n *     usersAPI.setFollow(id).then(data => {\n *         if (data.resultCode === 0) {\n *             this.props.follow(id)\n *             console.log('Follow', data)\n *             this.props.toggleDisabledBtn(false, id)\n *         } else {\n *             console.log('Error AXIOS', data)\n *         }\n *     })\n * }\n */","export default __webpack_public_path__ + \"static/media/294.a1c83cdc.svg\";","import React from 'react'\nimport loading from '../../../assets/icons/294.svg'\n\n\nexport const Loader = () => {\n    return (\n        <div>\n            <img src={loading} width=\"100px\" alt=\"loading\"/>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport classes from \"../ProfileInfo.module.css\";\nimport {Loader} from \"../../../common/preloader/loading\";\n\nconst ProfileStatus = ({statusData, saveStatus, isOwner, loading}) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(statusData)\n\n    const onEditMode = () => setEditMode(isOwner)\n    const offEditMode = () => setEditMode(false)\n\n    const addStatus = () => {\n        setEditMode(false)\n        saveStatus(status)\n    }\n\n    const updateTextStatus = (e) => setStatus(e.target.value)\n\n    useEffect(() => {\n        setStatus(statusData)\n    }, [statusData])\n\n    return (\n        <div className={classes.statusBlock}>\n            {!editMode\n                ? <div className={classes.statusDescr} onClick={onEditMode}>\n                    {loading\n                        ? <Loader/>\n                        : <p>{statusData || 'Not indicated'}</p>\n                    }\n                </div>\n                :\n                <div className={classes.statusDescr}>\n                    <div>\n                        <input onChange={updateTextStatus} type='text' autoFocus={true} placeholder='Change status'\n                               value={status}/>\n                    </div>\n                    <br/>\n                    <div>\n                        {status.length > 100 ? <div>Status length must be less 100 letters</div> : null}\n                    </div>\n                    <div>\n                        <button type='submit'\n                                disabled={status.length > 100}\n                                className={classes.changeStatusBtn}\n                                onClick={addStatus}>Change\n                        </button>\n                        <button type='button' className={classes.cancelStatusBtn} onClick={offEditMode}>Cancel</button>\n                    </div>\n                </div>\n            }\n            <div className={classes.bubble2}/>\n            <div className={classes.bubble1}/>\n        </div>\n    )\n}\n\nexport default ProfileStatus","import React from 'react';\nimport classes from \"../ProfileInfo.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst ProfileData = ({profile, contacts, isOwner}) => {\n\n    return (\n        <div className={classes.userInfoBlock}>\n            <div className={classes.aboutMe}>\n                <p className={classes.aboutMeTitle}>About me:</p>\n                <p>{profile.aboutMe || 'Not indicated'}</p>\n            </div>\n            <div className={classes.linkBlock}>\n                {contacts && Object.keys(contacts).map(key => {\n                    return <Contact key={key} title={key} value={contacts[key]}/>\n                })}\n            </div>\n            {isOwner\n                ? <NavLink to={'/setting'}>\n                    <button className={classes.editInfoBtn}>Edit info</button>\n                </NavLink>\n                : null}\n        </div>\n    )\n}\n\nconst Contact = ({title, value}) => {\n    return value ? <a href={value} target='_blank' rel=\"noreferrer\">{title}</a> : null\n}\n\nexport default ProfileData","import React from \"react\";\nimport classes from \"../ProfileInfo.module.css\";\n\nconst ProfileJob = ({profile}) => {\n    return (\n        <div className={classes.jobBlock}>\n            {!profile.lookingForAJob\n                ? <div/>\n                : <div className={classes.jobDescr}>\n                    <div>{profile.lookingForAJobDescription}</div>\n                </div>}\n            <div className={classes.openJobStatus}>\n                <p>Open for job<span>&nbsp;</span></p>\n                {profile.lookingForAJob\n                    ? <div className={classes.circleIndicatorActive}/>\n                    : <div className={classes.circleIndicatorNot}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileJob","import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ProfileJob from \"./ProfileJob/ProfileJobData\";\n\n\nconst ProfileInfo = ({saveNewPhoto, profile, status, updateStatus, isOwner, isLoading, isFetchingStatus}) => {\n\n    const onPhotoSelected = (e) => {\n        console.log(e)\n        if (e.target.files.length) {\n            saveNewPhoto(e.target.files[0])\n        }\n    }\n\n    return (\n        <>\n            {!profile\n                ? <Preloader/>\n                :\n                <div>\n                    <div className={classes.head}>\n                    </div>\n                    <div className={classes.wrapper}>\n                        <div className={classes.mediaBlock}>\n                            <div className={classes.photosBlock}>\n                                {!profile.photos || isLoading\n                                    ? <Preloader/>\n                                    : <img\n                                        src={profile.photos.large || 'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'}\n                                        alt=\"ava\"/>}\n                            </div>\n                            <ProfileStatus statusData={status} saveStatus={updateStatus}\n                                           isOwner={isOwner} loading={isFetchingStatus}/>\n                        </div>\n\n                        <div className={classes.infoBlock}>\n                            <div className={classes.nameBlock}>\n                                {isOwner\n                                    ? <label className={isLoading ? classes.changePhotosDis : classes.changePhotos}>\n                                        <input type={'file'} onChange={onPhotoSelected} disabled={isLoading}/>\n                                        Change Photos\n                                    </label>\n                                    : null}\n                                <h4 className={classes.user_nameBlock}>{profile.fullName}</h4>\n                            </div>\n                            <ProfileData profile={profile} contacts={profile.contacts} isOwner={isOwner}/>\n                            <ProfileJob profile={profile}/>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default ProfileInfo\n\n//'https://img2-placeit-net.s3-accelerate.amazonaws.com/uploads/stage/stage_image/40597/optimized_large_thumb_stage.jpg'\n","import {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../../common/textarea/textarea\";\nimport {maxLength, minValue, required} from \"../../../../utils/validators/validator\";\n\nconst maxLength200 = maxLength(200)\nconst minValue1 = minValue(1)\n\n\nconst PostForm = (props) => {\n    const { handleSubmit, reset } = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name={'body'}\n                       type='text'\n                       placeholder={'Add new post'}\n                       validate={[required, maxLength200, minValue1]}\n                />\n            </div>\n            <div>\n                <button onClick={()=> setTimeout(reset, 0)}>Send message</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({\n    form: 'post',\n})(PostForm)\n\nexport default PostReduxForm","import classes from \"./Post.module.css\";\nimport React from \"react\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <div className={classes.ava_wrapper}>\n                <img className={classes.ava_item}\n                    src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                    alt=\"avatar\"/>\n            </div>\n            <div className={classes.body_wrapper}>\n                <p className={classes.post_body_item}>{props.message}</p>\n            </div>\n            <div className={classes.like_wrapper}>\n                <div className={classes.like_item}>likes {props.likeCount}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from \"react\";\nimport classes from '../Posts.module.css';\nimport PostReduxForm from \"../PostsForm/PostForm\";\nimport Post from \"../PostsItem/Post\";\n\n/* Мы используем memo, чтобы не происходило лишних отрисовок если пропсы не поменялись */\nconst Posts = React.memo((props) => {\n    /* Мы используем reverse к копии массива постов, так как этот метод мутирующего типа */\n    const postsElement = [...props.posts].reverse().map(pData => <Post message={pData.message}\n                                                                       likeCount={pData.likeCount}\n                                                                       key={pData.id}/>)\n\n    const addPost = (value) => {\n        props.createPost(value.body)\n    }\n\n    return (\n        <div className={classes.postField}>\n            <h3>My posts</h3>\n            <div>\n                <PostReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={classes.postsBlock}>\n                {postsElement}\n            </div>\n        </div>\n    );\n})\n\nexport default Posts","import Posts from \"./PostsLayout/Posts\";\nimport {connect} from \"react-redux\";\nimport {profileActions} from \"../../../store/reducers/profile/profileReducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        createPost: (value) => {\n            dispatch(profileActions.addPostCreator(value));\n        },\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer\n","import React from \"react\";\nimport ProfileInfo from \"../ProfileInfo/PtofileInfo\";\nimport classes from \"../Profile.module.css\"\nimport PostsContainer from \"../Posts/PostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.profileContainer}>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         isOwner={props.isOwner}\n                         saveNewPhoto={props.saveNewPhoto}\n                         isLoading={props.isLoading}\n                         isFetchingStatus={props.isFetchingStatus}\n            />\n            <PostsContainer/>\n        </div>\n\n    );\n}\n\nexport default Profile","import {PhotosType, ProfileType,} from \"../store/types/@types\";\nimport {instance} from \"./instance-api\";\nimport {CommonResponseType} from \"../store/types/@types\";\n\ntype PhotosResponseDataType = {\n    photos: PhotosType\n}\nexport const profileAPI = {\n    getProfile(id: number) {\n        return instance\n            .get<ProfileType>(`/profile/${id}`).then(res => res.data)\n    },\n    getStatusProfile(id: number) {\n        return instance\n            .get<string>(`/profile/status/${id}`).then(res => res.data)\n    },\n    setStatus(newStatus: string) {\n        return instance\n            .put<CommonResponseType>('/profile/status', {status: newStatus}).then(res => res.data)\n    },\n    savePhoto(file: File) {\n        let formData = new FormData()\n        formData.append('image', file)\n        return instance\n            .put<CommonResponseType<PhotosResponseDataType>>('/profile/photo', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }).then(res => res.data)\n    },\n    saveProfile(data: ProfileType) {\n        return instance\n            .put<CommonResponseType<ProfileType>>('/profile', data).then(res => res.data)\n    }\n}\n\n","import {profileActions, ProfileActionsTypes,} from \"../../reducers/profile/profileReducer\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {ProfileType, CommonThunkCreatorType} from \"../../types/@types\";\nimport {profileAPI} from \"../../../api/profile-api\";\nimport {ResultCodesEnum} from \"../../../api/instance-api\";\nimport {isNull} from \"util\";\n\nexport const getProfileThunkCreator = (id: number): CommonThunkCreatorType<ProfileActionsTypes> =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetch(true))\n\n        let response = await profileAPI.getProfile(id)\n\n        dispatch(profileActions.setProfileData(response))\n        dispatch(profileActions.toggleFetch(false))\n    }\n\nexport const getStatusThunkCreator = (id: number): CommonThunkCreatorType<ProfileActionsTypes> =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetchStatus(true))\n\n        let response = await profileAPI.getStatusProfile(id)\n\n        dispatch(profileActions.getStatus(response))\n        dispatch(profileActions.toggleFetchStatus(false))\n    }\n\nexport const setStatusThunkCreator = (status: string): CommonThunkCreatorType<ProfileActionsTypes> =>\n    async (dispatch) => {\n        try {\n            dispatch(profileActions.toggleFetchStatus(true))\n            let response = await profileAPI.setStatus(status)\n\n            if (response.resultCode === ResultCodesEnum.SUCCESS) {\n                dispatch(profileActions.getStatus(status))\n                dispatch(profileActions.toggleFetchStatus(false))\n            }\n        } catch (err) {\n            alert(err)\n        }\n    }\nexport const saveNewPhotoThunkCreator = (file: File): CommonThunkCreatorType<ProfileActionsTypes> =>\n    async (dispatch) => {\n        dispatch(profileActions.toggleFetch(true))\n        let response = await profileAPI.savePhoto(file)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n            dispatch(profileActions.setPhotoSuccess(response.data.photos))\n            dispatch(profileActions.toggleFetch(false))\n        }\n    }\n\nexport const saveProfileThunkCreator = (data: ProfileType): CommonThunkCreatorType<ProfileActionsTypes | FormAction> =>\n    async (dispatch, getState) => {\n        dispatch(profileActions.toggleFetch(true))\n\n        const userId = getState().auth.userId\n        let response = await profileAPI.saveProfile(data)\n\n        if (response.resultCode === ResultCodesEnum.SUCCESS) {\n\n            if (!isNull(userId)) {\n                await dispatch(getProfileThunkCreator(userId))\n            } else {\n                throw new Error('User ID can\\'t be null')\n            }\n\n            dispatch(profileActions.toggleFetch(false))\n        } else {\n            dispatch(profileActions.toggleFetch(false))\n            dispatch(stopSubmit('newProfileData', {_error: response.messages}))\n        }\n    }\n","import {AppStateType} from \"../../store\";\n\nexport const getProfileSelector = (state: AppStateType) => {\n    return state.profilePage.profile\n}\n\nexport const getStatusSelector = (state: AppStateType) => {\n    return state.profilePage.status\n}\n\nexport const getUserIdSelector = (state: AppStateType) => {\n    return state.auth.userId\n}\n\nexport const checkAuthSelector = (state: AppStateType) => {\n    return state.auth.isAuth\n}\n\nexport const checkLoadingSelector = (state: AppStateType) => {\n    return state.profilePage.isLoading\n}\n\nexport const checkFetchingStatusSelector = (state: AppStateType) => {\n    return state.profilePage.isFetchingStatus\n}\n\n/*\n* future, create this selector, he must work with all simple selectors\n* and into switch/case return all and new value from state\n */\n// export const componentSelector = createSelector(\n//     [],() => {\n//\n// })\n\n\n\n\n\n\n","import classes from \"./Profile.module.css\"\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nimport Profile from \"./ProfileLayout/Ptofile\";\nimport withAuthRedirect from \"../../utils/hoc/authRedirect\";\nimport {\n    getProfileThunkCreator, getStatusThunkCreator, saveNewPhotoThunkCreator,\n    setStatusThunkCreator\n} from \"../../store/thunk/profile/profileThunk\";\nimport {\n    checkAuthSelector, checkFetchingStatusSelector, checkLoadingSelector, getProfileSelector,\n    getStatusSelector, getUserIdSelector\n} from \"../../store/selectors/profile/profileSelectors\";\n\nclass ProfileContainer extends React.PureComponent {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authUserID\n            if(!userId){\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getStatusThunkCreator(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.profileContainer}>\n                <Profile {...this.props}\n                         isOwner={!this.props.match.params.userId}\n                         profile={this.props.profile}\n                         updateStatus={this.props.setStatusThunkCreator}\n                         saveNewPhoto={this.props.saveNewPhotoThunkCreator}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: getProfileSelector(state),\n    status: getStatusSelector(state),\n    authUserID: getUserIdSelector(state),\n    isAuth: checkAuthSelector(state),\n    isLoading: checkLoadingSelector(state),\n    isFetchingStatus: checkFetchingStatusSelector(state)\n})\n\nexport default compose(\n    connect(mapStateToProps, {\n        getProfileThunkCreator, setStatusThunkCreator,\n        getStatusThunkCreator, saveNewPhotoThunkCreator\n    }),\n    withAuthRedirect,\n    withRouter,\n)(ProfileContainer)\n\n/* Вызов всех эти обработчиков ниже мы заменили на одну функцию compose выше\n*\n* const withAuth = withAuthRedirect(ProfileContainer)\n* // Используем withRouter чтобы обернуть контейнерную компоненту\n* // в другую контейнерную компоненту и передать в нее данные состояния uri\n* const ProfileWithUrlData = withRouter(withAuth)\n*\n* export default connect(mapStateToProps, {\n*     getProfileThunkCreator,\n*     getStatusThunkCreator,\n* })(ProfileWithUrlData)\n*/","import React from 'react'\nimport {maxLength, minValue} from \"../../../utils/validators/validator\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/textarea/textarea\";\nimport {InputBase} from \"../../common/input/input\";\nimport {Preloader} from \"../../common/preloader/spinner\";\nimport classes from \"../Setting.module.css\";\nimport {ProfileType} from \"../../../store/types/@types\";\n\nconst maxLength300 = maxLength(300)\nconst maxLength50 = maxLength(50)\nconst maxLength20 = maxLength(20)\nconst minValue1 = minValue(1)\n\ntype ProfileFormType = {\n    initialValues: ProfileType\n}\n\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileFormType> & ProfileFormType> = (props) => {\n\n    const {handleSubmit, submitting, error} = props\n    return (\n        <form onSubmit={handleSubmit} className={classes.settingsWrapper}>\n            <div className={classes.form_wrapper}>\n                <div className={classes.aboutMe_block}>\n                    <h4>About me:</h4>\n                    <Field component={Textarea}\n                           name='aboutMe'\n                           type='text'\n                           placeholder='Write about your'\n                           validate={[maxLength300, minValue1]}\n                    />\n                    <h4>Full Name</h4>\n                    <Field component={InputBase}\n                           name='fullName'\n                           type='text'\n                           placeholder='Full name'\n                           validate={[maxLength20, minValue1]}\n                    />\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.job_block}>\n                    <h4>Job information:</h4>\n                    <Field component={Textarea}\n                           name='lookingForAJobDescription'\n                           type='text'\n                           placeholder='Description for job'\n                           validate={[maxLength50, minValue1]}\n                    />\n                    <span>Open for job&nbsp;</span>\n                    <Field component='input'\n                           name='lookingForAJob'\n                           type=\"checkbox\"/>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n                <div className={classes.contacts_block}>\n                    <h4>Contacts:</h4>\n                    <div className={classes.contacts_fields}>\n                        <p>Facebook:</p>\n                        <Field component={InputBase}\n                               name='contacts.facebook'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Website:</p>\n                        <Field component={InputBase}\n                               name='contacts.website'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>VK:</p>\n                        <Field component={InputBase}\n                               name='contacts.vk'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Twitter:</p>\n                        <Field component={InputBase}\n                               name='contacts.twitter'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>Instagram:</p>\n                        <Field component={InputBase}\n                               name='contacts.instagram'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>YouTube:</p>\n                        <Field component={InputBase}\n                               name='contacts.youtube'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>GitHub:</p>\n                        <Field component={InputBase}\n                               name='contacts.github'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                        <p>MainLink:</p>\n                        <Field component={InputBase}\n                               name='contacts.mainLink'\n                               type='text'\n                               placeholder='https://'\n                               validate={[maxLength50, minValue1]}\n                        />\n                    </div>\n                    <div className={classes.btn_save}>\n                        <button type=\"submit\"\n                                disabled={submitting}>Save\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.btn_saveAll}>\n                <button type=\"submit\"\n                        disabled={submitting}>Save All\n                </button>\n            </div>\n            {error ? <div>{error}</div> : null}\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm<ProfileType, ProfileFormType>(\n    {\n        form: 'newProfileData',\n    }\n)(ProfileDataForm)\n\ntype PropsType = {\n    saveProfile: (data: ProfileType) => void\n    profile: ProfileType | null\n    isLoading: boolean\n    initialValues: ProfileType\n}\n\nconst ProfileDataEdit:React.FC<PropsType> = ({saveProfile, profile, isLoading, initialValues}) => {\n    /*\n    * Для полей contacts мы в качестве названия используем 'contacts.Name'\n    * Чтобы внутри formData, создался объект contacts. И value для этих полей отображался\n    */\n    const onSubmit = (formData: ProfileType) => {\n        saveProfile(formData)\n    }\n\n\n    return (\n        <>\n            {isLoading\n                ? <div className={classes.isLoading}>\n                    <Preloader/>\n                </div>\n                : null}\n            <div className={(!isLoading) ? classes.settingsField : classes.settingsFieldDis}>\n                <ProfileDataReduxForm\n                    onSubmit={onSubmit}\n                    initialValues={initialValues}\n                />\n\n            </div>\n        </>\n    )\n}\n\nexport default ProfileDataEdit","import React from \"react\";\nimport classes from \"./Setting.module.css\"\nimport ProfileDataEdit from \"./ProfileEdit/InfoBlockForm\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {saveProfileThunkCreator} from \"../../store/thunk/profile/profileThunk\";\nimport {checkLoadingSelector, getProfileSelector} from \"../../store/selectors/profile/profileSelectors\";\nimport {AppStateType} from \"../../store/store\";\nimport {ProfileType} from \"../../store/types/@types\";\nimport withAuthRedirect from \"../../utils/hoc/authRedirect\";\n\ntype MapStateToPropsType = {\n    profile: ProfileType | null\n    isLoading: boolean\n}\ntype MapDispatchToPropsType = {\n    saveProfileThunkCreator: (data: ProfileType) => void\n}\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst Setting: React.FC<PropsType> = ({profile, isLoading,...props}) => {\n\n    const saveProfile = (data: ProfileType) => {\n        props.saveProfileThunkCreator(data)\n    }\n\n    return (\n        <div className={classes.settingContainer}>\n            <h2>Setting</h2>\n            <ProfileDataEdit\n                profile={profile}\n                initialValues={profile as ProfileType}\n                isLoading={isLoading}\n                saveProfile={saveProfile}\n            />\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: getProfileSelector(state),\n    isLoading: checkLoadingSelector(state),\n})\n\n\nexport default compose(\n    connect<MapStateToPropsType, MapDispatchToPropsType, any, AppStateType>(mapStateToProps, {saveProfileThunkCreator}),\n    withAuthRedirect,\n)(Setting)\n","export default __webpack_public_path__ + \"static/media/logo.30954a56.svg\";","import React from \"react\";\nimport classes from '../Header.module.css';\nimport logo from \"../../../assets/logo/logo.svg\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return (\n        <div className={classes.headerWrapper}>\n            <header className={classes.mediaBlock}>\n                <img src={logo} alt=\"logo\"/>\n                <h2>Social App</h2>\n            </header>\n            <div className={classes.loginBlock}>\n                <NavLink to={'/profile'}>\n                    {props.isAuth ? <div className={classes.userName}>{props.login}</div> : null}\n                </NavLink>\n                {props.isAuth\n                    ? <button className={classes.authBtn} onClick={props.signOut}>LOGOUT</button>\n                    : <NavLink to={'/login'}>\n                        <button className={classes.authBtn}>LOGIN</button>\n                    </NavLink>\n                }\n            </div>\n        </div>\n    )\n}\nexport default Header","import React from \"react\";\nimport Header from \"./HeaderLayout/Header\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {signOutThunkCreator} from \"../../store/thunk/auth/authThunk\";\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return (\n            <Header {...this.props}\n                    signOut={this.props.signOutThunkCreator}\n            />\n        )\n    }\n}\n\n/* Функция которая из state передает props внутрь компоненты */\nconst mapStateToProps = (state) => ({\n    login: state.auth.login,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(\n    connect(mapStateToProps, {signOutThunkCreator})\n)(HeaderContainer)\n","import React from \"react\";\nimport classes from '../Sidebar.module.css';\n\ntype PropsType = {\n    name: string\n}\n\nconst SidebarFriends: React.FC<PropsType> = ({name}) => {\n    return (\n        <div className={classes.item}>\n            <img\n                src='https://about.canva.com/wp-content/uploads/sites/3/2018/03/Purple-and-Pink-Cute-Man-Face-Laptop-Sticker.jpg'\n                alt=\"avatar\" />\n            <p>{name}</p>\n        </div>\n    )\n}\n\nexport default SidebarFriends\n","import React from \"react\";\nimport classes from '../Sidebar.module.css';\nimport SidebarFriends from \"../SidebarItem/sidebarFriends\";\n\ntype FriendListType = {\n    id: number\n    name: string\n}\ntype PropsType = {\n    sidebar: {\n        friendList: Array<FriendListType>\n    }\n}\n\nconst Sidebar: React.FC<PropsType> = ({sidebar}) => {\n    const friendItem = sidebar.friendList.map(uData => <SidebarFriends name={uData.name} key={uData.id}/>)\n\n    return (\n        <div className={classes.container}>\n            {friendItem}\n        </div>\n    )\n}\n\nexport default Sidebar\n","import Sidebar from \"./SidebarLayout/Sidebar\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../store/store\";\nimport {SidebarInitialStateType} from \"../../store/reducers/sidebar/sidebarReducer\";\n\ntype MapStateToPropsType = {\n    sidebar: SidebarInitialStateType\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        sidebar: state.sidebar\n    }\n}\n\nconst SidebarContainer = connect<MapStateToPropsType, any, any, AppStateType>(mapStateToProps)(Sidebar)\n\nexport default SidebarContainer\n","import React from \"react\";\nimport classes from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport SidebarContainer from \"../Sidebar/SidebarContainer\";\n\n\nconst NavBar = (props: any) => {\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.item}>\n                <NavLink to='/profile'>Profile</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/dialogs'>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users'>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news'>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music'>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/setting'>Setting</NavLink>\n            </div>\n            <SidebarContainer/>\n        </nav>\n    )\n}\nexport default NavBar\n","import React, {Suspense} from 'react'\nimport {Preloader} from \"../../components/common/preloader/spinner\";\n\nconst withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </Suspense>\n        )\n    }\n}\n\nexport default withSuspense","import React from \"react\";\nimport classes from './StartPage.module.css'\n\nconst StartPage: React.FC = () => {\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.header}>\n                <h2 className={classes.headerGreeting}>Thank you for visiting.</h2>\n                <h4 className={classes.headerLogin}>Login : <span>free@samuraijs.com</span></h4>\n                <h4 className={classes.headerPass}>Password : <span>free</span></h4>\n            </div>\n            <div className={classes.disclaimer}>\n                <h3 className={classes.disclaimerTitle}>DISCLAIMER</h3>\n                <p className={classes.disclaimerDescr}>\n                    <b>In Safari now not working authorized use other browser, sorry.</b><br/>\n                    This is my template for SPA (Single Page Application). He has not complete functionality,\n                    but give you opportunity to see how at work. On this application i use GitHub Pages.\n                    For correct reloading page i use HashRouter. In order not to download full application i\n                    use Lazy Loading (React.Suspense, React.Lazy). This application support ReduxDevTools,\n                    you can see state and all dispatch working process.\n                </p>\n            </div>\n            <div className={classes.stack}>\n                <ul className={classes.stackList}>\n                    <h3 className={classes.stackTitile}>Stack technology:</h3>\n                    <li className={classes.stackItemTitle}>\n                        <h4>UI/UX (User interface)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            React (Class component and Function component, Life cycle methods, Hooks, HOC)\n                        </li>\n                        <li className={classes.stackItem}>\n                            CSS (CSS modules)\n                        </li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>BLL (Business logic layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Redux-Thunk (In future Redux-Saga)</li>\n                        <li className={classes.stackItem}>Redux-Form (Custom Fields)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>DAL (Data access layer)</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>Rest API :&nbsp;\n                            <a href=\"https://social-network.samuraijs.com/docs#\">\n                                https://social-network.samuraijs.com/docs#</a>\n                        </li>\n                        <li className={classes.stackItem}>AXIOS (Promise and Async/Await)</li>\n                    </ul>\n                    <li className={classes.stackItemTitle}>\n                        <h4>Testing</h4>\n                    </li>\n                    <ul>\n                        <li className={classes.stackItem}>\n                            Jestjs.io\n                        </li>\n                    </ul>\n                </ul>\n                <div className={classes.opportunities}>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can</h4>\n                        <li className={classes.opportunitiesItemCan}>\n                            Login / Logout - if you not authorized you can't visited Profile Page and Messages Page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you avatar image - for faster work use small weight file.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change you status - on page other user in function blocked.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Change information for you profile - redirect on settings page (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Add information if you open for job (without styles).\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new post - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Write new messages - without server, only local.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Looking other user - all users is live person.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            Enter on other user page.\n                        </li>\n                        <li className={classes.opportunitiesItemCan}>\n                            You can follow/unfollow users.\n                        </li>\n                    </ul>\n                    <ul className={classes.opportunitiesList}>\n                        <h4 className={classes.opportunitiesTitle}>You can't</h4>\n                        <li className={classes.opportunitiesItem}>\n                            Registration in application.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change password.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Change information on not owner page.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Look all following user.\n                        </li>\n                        <li className={classes.opportunitiesItem}>\n                            Search user.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default StartPage\n","import './App.css';\nimport React from 'react';\nimport {\n    // BrowserRouter,\n    HashRouter,\n    Route,\n    withRouter\n} from \"react-router-dom\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {InitializeApp} from \"./store/thunk/app/initThunk\";\nimport store from \"./store/store\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/PtofileContainer\";\nimport Setting from \"./components/Setting/Setting\";\nimport {Preloader} from \"./components/common/preloader/spinner\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport withSuspense from \"./utils/hoc/lazyComponent\";\nimport StartPage from \"./components/Start Component/StartPage\";\nimport {Switch} from \"react-router\";\n\n/* Add lazy loading for not base component */\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst DialogContainer = React.lazy(() => import('./components/Dialogs/DialogContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\n\nclass App extends React.Component {\n    catchAllUnhandledError = (reason, promise) => {\n        alert('Some error occurred')\n        console.error(promise, reason)\n    }\n\n    componentDidMount() {\n        this.props.InitializeApp()\n        window.addEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('Unhandled rejection', this.catchAllUnhandledError)\n    }\n\n    render() {\n        if (!this.props.init) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route\n                            /*\n                            * Указываем не обязательный параметр :userId?\n                            * чтобы если не '/profile', передать в state данные о uri строке\n                            */\n                            path='/profile/:userId?'\n                            render={() => <ProfileContainer/>}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={withSuspense(Login)}/>\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogContainer)}/>\n                        <Route path='/news'\n                               render={withSuspense(News)}/>\n                        <Route path='/music'\n                               render={withSuspense(Music)}/>\n                        <Route path='/setting'\n                               render={withSuspense(Setting)}/>\n                        <Route exact path='/'\n                               render={() => <StartPage/>}/>\n                        <Route path='*'\n                               render={() => <div>404 Not Founded</div>}/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    init: state.app.initialized\n})\n\n/*  Делаем контейнерную компоненту для App, чтобы можно было протестировать ее отрисовку через test */\nconst SocialAppContainer = compose(\n    connect(mapStateToProps, {InitializeApp}),\n    /*\n    * Мы обернули компоненту дополнительно withRoute,\n    * так как при использовании Route с классовыми компонентами,\n    * Route может работать не корректно\n    */\n    withRouter\n)(App);\n\nconst SocialApp = () => {\n    return (\n        /* Use HashRouter for gh-pages */\n        <HashRouter>\n            {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\n            <Provider store={store}>\n                <SocialAppContainer/>\n            </Provider>\n            {/*</BrowserRouter>*/}\n        </HashRouter>\n    )\n}\n\nexport default SocialApp","import {checkAuthThunkCreator} from \"../auth/authThunk\";\nimport {appActions} from \"../../reducers/app/appReducer\";\n\nexport const InitializeApp = () => (dispatch: any) => {\n    let promiseAuth = dispatch(checkAuthThunkCreator())\n\n    Promise.all([promiseAuth])\n        .then(() => {\n            dispatch(appActions.InitializeSuccess())\n        })\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport SocialApp from \"./App\";\n\nReactDOM.render(\n    <SocialApp/>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react'\nimport classes from './input.module.css'\n\n// export const InputLight = ({input, meta: {touched, error}, ...props}) => {\n//     return (\n//         <div>\n//             <div>\n//                 <input {...input} {...props}/>\n//             </div>\n//             {touched &&\n//             ((error && <div className={classes.error_msg_light}>{error}</div>))}\n//         </div>\n//\n//     )\n// }\n\ntype ComponentProps = {\n    input: JSX.Element\n    meta: {\n        touched: boolean\n        error: string\n    }\n    props: React.ReactNode\n}\n\ntype InputCreateType = (params: ComponentProps) => void\n\nexport const InputBase: InputCreateType = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} {...props}/>\n            </div>\n            {touched &&\n            ((error && <div className={classes.error_msg}>{error}</div>))}\n        </div>\n\n    )\n}\n\nexport const LoginInput: InputCreateType = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='text' placeholder='Login'\n                       className={(touched && error) ? classes.error_input : ''}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n\nexport const PasswordInput: InputCreateType = ({input, meta: {touched, error}}) => {\n    return (\n        <div>\n            <div>\n                <input {...input} type='password' placeholder='Password'\n                       className={(touched && error) ? classes.error_input : ''}/>\n            </div>\n            {touched && error && <span className={classes.error_msg}>{error}</span>}\n        </div>\n\n    )\n}\n","export type ValidateTypes = (value: string) => string | undefined\n\nexport const required: ValidateTypes = (value) => (value ? undefined : 'Required')\n\nexport const maxLength = (max: number): ValidateTypes => (value) =>\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\n\nexport const minLength = (min: number): ValidateTypes => (value) =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\n\nexport const minValue = (min: number): ValidateTypes => (value) =>\n    value && value.length < min ? `Must be at least ${min}` : undefined\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__CDI8g\",\"ava_wrapper\":\"Post_ava_wrapper__2wRuV\",\"ava_item\":\"Post_ava_item__1V1Sk\",\"body_wrapper\":\"Post_body_wrapper__2qi5o\",\"post_body_item\":\"Post_post_body_item__3AFMu\",\"like_wrapper\":\"Post_like_wrapper__3OBgG\",\"like_item\":\"Post_like_item__1bLVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__1oKyh\",\"mediaBlock\":\"Header_mediaBlock__3QNG4\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"userName\":\"Header_userName__2h_yj\",\"authBtn\":\"Header_authBtn__1ELyC\"};","import {GET_CAPTCHA, SET_AUTH_DATA} from \"../../actions/actions\";\nimport {InferActionsType} from \"../../store\";\n\nconst initialState = {\n    userId: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false,\n    isLoading: false,\n    captcha: null as string | null\n};\n\nexport type AuthInitialStateType = typeof initialState;\nexport type AuthActionsTypes = InferActionsType<typeof authActions>\n\n/* Need add typification for action */\nconst authReducer = (state = initialState, action: AuthActionsTypes): AuthInitialStateType => {\n    switch (action.type) {\n        case SET_AUTH_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isAuth: !state.isAuth\n            };\n        case GET_CAPTCHA:\n            return {\n                ...state,\n                captcha: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport const authActions = {\n    setAuthData: (userId: number | null, email: string | null, login: string | null) => ({\n        type: SET_AUTH_DATA,\n        payload: {userId, email, login}\n    } as const),\n\n    getCaptcha: (url: string) => ({\n        type: GET_CAPTCHA,\n        payload: url\n    } as const)\n\n}\n\nexport default authReducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__1OedU\",\"usersField\":\"Users_usersField__13PIe\",\"usersItems\":\"Users_usersItems__3D9Hj\",\"reactPaginate\":\"Users_reactPaginate__2Tm98\",\"reactPaginationBtn\":\"Users_reactPaginationBtn__3fV12\",\"pagination\":\"Users_pagination__2Njh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_input\":\"input_error_input__27_o3\",\"error_msg_light\":\"input_error_msg_light__DlyGg\",\"error_msg\":\"input_error_msg__11WSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StartPage_wrapper__3FcH6\",\"header\":\"StartPage_header__16P69\",\"headerGreeting\":\"StartPage_headerGreeting__2DjNg\",\"disclaimer\":\"StartPage_disclaimer__1s4bg\",\"disclaimerTitle\":\"StartPage_disclaimerTitle__3-W9w\",\"disclaimerDescr\":\"StartPage_disclaimerDescr__3Z-Un\",\"stack\":\"StartPage_stack__Qhez8\",\"stackTitile\":\"StartPage_stackTitile__293Iu\",\"stackList\":\"StartPage_stackList__yX5qs\",\"stackItemTitle\":\"StartPage_stackItemTitle__3EH7n\",\"stackItem\":\"StartPage_stackItem__eT94q\",\"opportunities\":\"StartPage_opportunities__prS0J\",\"opportunitiesTitle\":\"StartPage_opportunitiesTitle__tUoYd\",\"opportunitiesList\":\"StartPage_opportunitiesList__26NOM\",\"opportunitiesItem\":\"StartPage_opportunitiesItem__1dpRX\",\"opportunitiesItemCan\":\"StartPage_opportunitiesItemCan__1IuHy\"};","import React from 'react'\n\ntype ComponentProps = {\n    input: JSX.Element\n    meta: {\n        touched: boolean\n        error: string\n    }\n    props: React.ReactNode\n}\ntype TextAreaCreateType = (params: ComponentProps) => void\n\nexport const Textarea:TextAreaCreateType = ({input, meta: {touched, error}, ...props}) => {\n    return (\n        <div>\n            <div>\n                <textarea {...input} {...props} />\n            </div>\n            {touched &&\n            ((error && <span style={{color: 'crimson'}}>{error}</span>))}\n        </div>\n\n    )\n}\n","//DIALOG_ACTIONS\nexport const SEND_MESSAGE = 'my-app/dialogs/SEND_MESSAGE';\n//USER_ACTIONS\nexport const FOLLOW = 'my-app/users/FOLLOW'\nexport const UNFOLLOW = 'my-app/users/UNFOLLOW'\nexport const SET_USERS = 'my-app/users/SET_USERS'\nexport const SET_PAGE = 'my-app/users/SET_PAGE'\nexport const SET_TOTAL_COUNT = 'my-app/users/SET_TOTAL_COUNT'\nexport const IS_USER_FETCHING = 'my-app/users/IS_FETCHING'\nexport const IS_DISABLED_BTN = 'my-app/users/IS_DISABLED_BTN'\n//PROFILE_ACTIONS\nexport const ADD_POST = 'my-app/profile/ADD_POST';\nexport const DELETE_POST = 'my-app/profile/DELETE_POST';\nexport const SET_PROFILE_DATA = 'my-app/profile/SET_PROFILE_DATA';\nexport const GET_STATUS = 'my-app/profile/GET_STATUS';\nexport const SET_PHOTO_SUCCESS = 'my-app/profile/SET_PHOTO_SUCCESS';\nexport const IS_PROFILE_FETCHING = 'my-app/profile/IS_FETCHING';\nexport const IS_STATUS_FETCHING = 'my-app/profile/IS_FETCHING_STATUS';\n//AUTH_ACTIONS\nexport const SET_AUTH_DATA = 'my-app/auth/SET_AUTH_DATA';\nexport const GET_CAPTCHA = 'my-app/auth/GET_CAPTCHA';\n//INIT APP\nexport const SET_INITIALIZED = 'my-app/init/SET_INITIALIZED';\n","import React from 'react'\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\n\n            return <Component {...this.props}/>\n        }\n    }\n    //Мы оборачиваем connect функцией нашу классовую компоненту, чтобы в пропсах получить isAuth\n    const ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n    return ConnectAuthRedirectComponent\n}\n\nexport default withAuthRedirect","import {instance, ResultCodeForCaptchaCEnum, ResultCodesEnum} from \"./instance-api\";\nimport {CommonResponseType} from \"../store/types/@types\";\n\ntype MeResponseDataType = {\n    id: number,\n    email: string,\n    login: string,\n}\ntype SignupResponseDataType = {\n    userId: number,\n}\ntype CaptchaAPIType = {\n    url: string\n}\n\nexport const authAPI = {\n    checkAuth() {\n        return instance\n            .get<CommonResponseType<MeResponseDataType>>('/auth/me').then(res => res.data)\n    },\n    signOut() {\n        return instance\n            .delete<CommonResponseType>('/auth/login').then(res => res.data)\n    },\n    signIn(email: string, password: string, rememberMe = false, captcha = false) {\n        return instance\n            .post<CommonResponseType<SignupResponseDataType, ResultCodesEnum | ResultCodeForCaptchaCEnum>>('/auth/login',\n                {email, password, rememberMe, captcha}).then(res => res.data)\n    },\n    getCaptcha() {\n        return instance\n            .get<CaptchaAPIType>('/security/get-captcha-url').then(res => res.data)\n    }\n}\n","import {authActions, AuthActionsTypes} from \"../../reducers/auth/authReducer\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {authAPI} from \"../../../api/auth-api\";\nimport {ResultCodeForCaptchaCEnum, ResultCodesEnum} from \"../../../api/instance-api\";\nimport {CommonThunkCreatorType} from \"../../types/@types\";\n\nexport const checkAuthThunkCreator = (): CommonThunkCreatorType<AuthActionsTypes> => async (dispatch) => {\n    let response = await authAPI.checkAuth()\n\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        let {id, login, email} = response.data\n        dispatch(authActions.setAuthData(id, email, login))\n    }\n}\nexport const signOutThunkCreator = (): CommonThunkCreatorType<AuthActionsTypes> => async (dispatch) => {\n    let response = await authAPI.signOut()\n\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        dispatch(authActions.setAuthData(null, null, null))\n    }\n}\n\nexport const signInThunkCreator = (\n    email: string, password: string,\n    rememberMe: boolean, captcha: boolean\n): CommonThunkCreatorType<AuthActionsTypes | FormAction> => async (dispatch) => {\n    let response = await authAPI.signIn(email, password, rememberMe, captcha)\n\n    if (response.resultCode === ResultCodesEnum.SUCCESS) {\n        dispatch(checkAuthThunkCreator())\n    } else if (response.resultCode === ResultCodeForCaptchaCEnum.ANTI_BOT) {\n        let data = await authAPI.getCaptcha()\n        dispatch(authActions.getCaptcha(data.url))\n    } else {\n        dispatch(stopSubmit('login', {_error: response.messages}))\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3lONb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sidebar_container__3CgDZ\",\"item\":\"Sidebar_item__3zPF1\"};"],"sourceRoot":""}